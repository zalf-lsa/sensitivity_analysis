# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_monica', [dirname(__file__)])
        except ImportError:
            import _monica
            return _monica
        if fp is not None:
            try:
                _mod = imp.load_module('_monica', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _monica = swig_import_helper()
    del swig_import_helper
else:
    import _monica
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


class SwigPyIterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SwigPyIterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SwigPyIterator, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _monica.delete_SwigPyIterator
    __del__ = lambda self : None;
    def value(self): return _monica.SwigPyIterator_value(self)
    def incr(self, n=1): return _monica.SwigPyIterator_incr(self, n)
    def decr(self, n=1): return _monica.SwigPyIterator_decr(self, n)
    def distance(self, *args): return _monica.SwigPyIterator_distance(self, *args)
    def equal(self, *args): return _monica.SwigPyIterator_equal(self, *args)
    def copy(self): return _monica.SwigPyIterator_copy(self)
    def next(self): return _monica.SwigPyIterator_next(self)
    def __next__(self): return _monica.SwigPyIterator___next__(self)
    def previous(self): return _monica.SwigPyIterator_previous(self)
    def advance(self, *args): return _monica.SwigPyIterator_advance(self, *args)
    def __eq__(self, *args): return _monica.SwigPyIterator___eq__(self, *args)
    def __ne__(self, *args): return _monica.SwigPyIterator___ne__(self, *args)
    def __iadd__(self, *args): return _monica.SwigPyIterator___iadd__(self, *args)
    def __isub__(self, *args): return _monica.SwigPyIterator___isub__(self, *args)
    def __add__(self, *args): return _monica.SwigPyIterator___add__(self, *args)
    def __sub__(self, *args): return _monica.SwigPyIterator___sub__(self, *args)
    def __iter__(self): return self
SwigPyIterator_swigregister = _monica.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)

SHARED_PTR_DISOWN = _monica.SHARED_PTR_DISOWN
class IntVector(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IntVector, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IntVector, name)
    __repr__ = _swig_repr
    def iterator(self): return _monica.IntVector_iterator(self)
    def __iter__(self): return self.iterator()
    def __nonzero__(self): return _monica.IntVector___nonzero__(self)
    def __bool__(self): return _monica.IntVector___bool__(self)
    def __len__(self): return _monica.IntVector___len__(self)
    def pop(self): return _monica.IntVector_pop(self)
    def __getslice__(self, *args): return _monica.IntVector___getslice__(self, *args)
    def __setslice__(self, *args): return _monica.IntVector___setslice__(self, *args)
    def __delslice__(self, *args): return _monica.IntVector___delslice__(self, *args)
    def __delitem__(self, *args): return _monica.IntVector___delitem__(self, *args)
    def __getitem__(self, *args): return _monica.IntVector___getitem__(self, *args)
    def __setitem__(self, *args): return _monica.IntVector___setitem__(self, *args)
    def append(self, *args): return _monica.IntVector_append(self, *args)
    def empty(self): return _monica.IntVector_empty(self)
    def size(self): return _monica.IntVector_size(self)
    def clear(self): return _monica.IntVector_clear(self)
    def swap(self, *args): return _monica.IntVector_swap(self, *args)
    def get_allocator(self): return _monica.IntVector_get_allocator(self)
    def begin(self): return _monica.IntVector_begin(self)
    def end(self): return _monica.IntVector_end(self)
    def rbegin(self): return _monica.IntVector_rbegin(self)
    def rend(self): return _monica.IntVector_rend(self)
    def pop_back(self): return _monica.IntVector_pop_back(self)
    def erase(self, *args): return _monica.IntVector_erase(self, *args)
    def __init__(self, *args): 
        this = _monica.new_IntVector(*args)
        try: self.this.append(this)
        except: self.this = this
    def push_back(self, *args): return _monica.IntVector_push_back(self, *args)
    def front(self): return _monica.IntVector_front(self)
    def back(self): return _monica.IntVector_back(self)
    def assign(self, *args): return _monica.IntVector_assign(self, *args)
    def resize(self, *args): return _monica.IntVector_resize(self, *args)
    def insert(self, *args): return _monica.IntVector_insert(self, *args)
    def reserve(self, *args): return _monica.IntVector_reserve(self, *args)
    def capacity(self): return _monica.IntVector_capacity(self)
    __swig_destroy__ = _monica.delete_IntVector
    __del__ = lambda self : None;
IntVector_swigregister = _monica.IntVector_swigregister
IntVector_swigregister(IntVector)

class DoubleVector(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, DoubleVector, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, DoubleVector, name)
    __repr__ = _swig_repr
    def iterator(self): return _monica.DoubleVector_iterator(self)
    def __iter__(self): return self.iterator()
    def __nonzero__(self): return _monica.DoubleVector___nonzero__(self)
    def __bool__(self): return _monica.DoubleVector___bool__(self)
    def __len__(self): return _monica.DoubleVector___len__(self)
    def pop(self): return _monica.DoubleVector_pop(self)
    def __getslice__(self, *args): return _monica.DoubleVector___getslice__(self, *args)
    def __setslice__(self, *args): return _monica.DoubleVector___setslice__(self, *args)
    def __delslice__(self, *args): return _monica.DoubleVector___delslice__(self, *args)
    def __delitem__(self, *args): return _monica.DoubleVector___delitem__(self, *args)
    def __getitem__(self, *args): return _monica.DoubleVector___getitem__(self, *args)
    def __setitem__(self, *args): return _monica.DoubleVector___setitem__(self, *args)
    def append(self, *args): return _monica.DoubleVector_append(self, *args)
    def empty(self): return _monica.DoubleVector_empty(self)
    def size(self): return _monica.DoubleVector_size(self)
    def clear(self): return _monica.DoubleVector_clear(self)
    def swap(self, *args): return _monica.DoubleVector_swap(self, *args)
    def get_allocator(self): return _monica.DoubleVector_get_allocator(self)
    def begin(self): return _monica.DoubleVector_begin(self)
    def end(self): return _monica.DoubleVector_end(self)
    def rbegin(self): return _monica.DoubleVector_rbegin(self)
    def rend(self): return _monica.DoubleVector_rend(self)
    def pop_back(self): return _monica.DoubleVector_pop_back(self)
    def erase(self, *args): return _monica.DoubleVector_erase(self, *args)
    def __init__(self, *args): 
        this = _monica.new_DoubleVector(*args)
        try: self.this.append(this)
        except: self.this = this
    def push_back(self, *args): return _monica.DoubleVector_push_back(self, *args)
    def front(self): return _monica.DoubleVector_front(self)
    def back(self): return _monica.DoubleVector_back(self)
    def assign(self, *args): return _monica.DoubleVector_assign(self, *args)
    def resize(self, *args): return _monica.DoubleVector_resize(self, *args)
    def insert(self, *args): return _monica.DoubleVector_insert(self, *args)
    def reserve(self, *args): return _monica.DoubleVector_reserve(self, *args)
    def capacity(self): return _monica.DoubleVector_capacity(self)
    __swig_destroy__ = _monica.delete_DoubleVector
    __del__ = lambda self : None;
DoubleVector_swigregister = _monica.DoubleVector_swigregister
DoubleVector_swigregister(DoubleVector)

class StringVector(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, StringVector, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, StringVector, name)
    __repr__ = _swig_repr
    def iterator(self): return _monica.StringVector_iterator(self)
    def __iter__(self): return self.iterator()
    def __nonzero__(self): return _monica.StringVector___nonzero__(self)
    def __bool__(self): return _monica.StringVector___bool__(self)
    def __len__(self): return _monica.StringVector___len__(self)
    def pop(self): return _monica.StringVector_pop(self)
    def __getslice__(self, *args): return _monica.StringVector___getslice__(self, *args)
    def __setslice__(self, *args): return _monica.StringVector___setslice__(self, *args)
    def __delslice__(self, *args): return _monica.StringVector___delslice__(self, *args)
    def __delitem__(self, *args): return _monica.StringVector___delitem__(self, *args)
    def __getitem__(self, *args): return _monica.StringVector___getitem__(self, *args)
    def __setitem__(self, *args): return _monica.StringVector___setitem__(self, *args)
    def append(self, *args): return _monica.StringVector_append(self, *args)
    def empty(self): return _monica.StringVector_empty(self)
    def size(self): return _monica.StringVector_size(self)
    def clear(self): return _monica.StringVector_clear(self)
    def swap(self, *args): return _monica.StringVector_swap(self, *args)
    def get_allocator(self): return _monica.StringVector_get_allocator(self)
    def begin(self): return _monica.StringVector_begin(self)
    def end(self): return _monica.StringVector_end(self)
    def rbegin(self): return _monica.StringVector_rbegin(self)
    def rend(self): return _monica.StringVector_rend(self)
    def pop_back(self): return _monica.StringVector_pop_back(self)
    def erase(self, *args): return _monica.StringVector_erase(self, *args)
    def __init__(self, *args): 
        this = _monica.new_StringVector(*args)
        try: self.this.append(this)
        except: self.this = this
    def push_back(self, *args): return _monica.StringVector_push_back(self, *args)
    def front(self): return _monica.StringVector_front(self)
    def back(self): return _monica.StringVector_back(self)
    def assign(self, *args): return _monica.StringVector_assign(self, *args)
    def resize(self, *args): return _monica.StringVector_resize(self, *args)
    def insert(self, *args): return _monica.StringVector_insert(self, *args)
    def reserve(self, *args): return _monica.StringVector_reserve(self, *args)
    def capacity(self): return _monica.StringVector_capacity(self)
    __swig_destroy__ = _monica.delete_StringVector
    __del__ = lambda self : None;
StringVector_swigregister = _monica.StringVector_swigregister
StringVector_swigregister(StringVector)

class PPVector(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PPVector, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PPVector, name)
    __repr__ = _swig_repr
    def iterator(self): return _monica.PPVector_iterator(self)
    def __iter__(self): return self.iterator()
    def __nonzero__(self): return _monica.PPVector___nonzero__(self)
    def __bool__(self): return _monica.PPVector___bool__(self)
    def __len__(self): return _monica.PPVector___len__(self)
    def pop(self): return _monica.PPVector_pop(self)
    def __getslice__(self, *args): return _monica.PPVector___getslice__(self, *args)
    def __setslice__(self, *args): return _monica.PPVector___setslice__(self, *args)
    def __delslice__(self, *args): return _monica.PPVector___delslice__(self, *args)
    def __delitem__(self, *args): return _monica.PPVector___delitem__(self, *args)
    def __getitem__(self, *args): return _monica.PPVector___getitem__(self, *args)
    def __setitem__(self, *args): return _monica.PPVector___setitem__(self, *args)
    def append(self, *args): return _monica.PPVector_append(self, *args)
    def empty(self): return _monica.PPVector_empty(self)
    def size(self): return _monica.PPVector_size(self)
    def clear(self): return _monica.PPVector_clear(self)
    def swap(self, *args): return _monica.PPVector_swap(self, *args)
    def get_allocator(self): return _monica.PPVector_get_allocator(self)
    def begin(self): return _monica.PPVector_begin(self)
    def end(self): return _monica.PPVector_end(self)
    def rbegin(self): return _monica.PPVector_rbegin(self)
    def rend(self): return _monica.PPVector_rend(self)
    def pop_back(self): return _monica.PPVector_pop_back(self)
    def erase(self, *args): return _monica.PPVector_erase(self, *args)
    def __init__(self, *args): 
        this = _monica.new_PPVector(*args)
        try: self.this.append(this)
        except: self.this = this
    def push_back(self, *args): return _monica.PPVector_push_back(self, *args)
    def front(self): return _monica.PPVector_front(self)
    def back(self): return _monica.PPVector_back(self)
    def assign(self, *args): return _monica.PPVector_assign(self, *args)
    def resize(self, *args): return _monica.PPVector_resize(self, *args)
    def insert(self, *args): return _monica.PPVector_insert(self, *args)
    def reserve(self, *args): return _monica.PPVector_reserve(self, *args)
    def capacity(self): return _monica.PPVector_capacity(self)
    __swig_destroy__ = _monica.delete_PPVector
    __del__ = lambda self : None;
PPVector_swigregister = _monica.PPVector_swigregister
PPVector_swigregister(PPVector)

class IntDoubleMap(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IntDoubleMap, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IntDoubleMap, name)
    __repr__ = _swig_repr
    def iterator(self): return _monica.IntDoubleMap_iterator(self)
    def __iter__(self): return self.iterator()
    def __nonzero__(self): return _monica.IntDoubleMap___nonzero__(self)
    def __bool__(self): return _monica.IntDoubleMap___bool__(self)
    def __len__(self): return _monica.IntDoubleMap___len__(self)
    def __iter__(self): return self.key_iterator()
    def iterkeys(self): return self.key_iterator()
    def itervalues(self): return self.value_iterator()
    def iteritems(self): return self.iterator()
    def __getitem__(self, *args): return _monica.IntDoubleMap___getitem__(self, *args)
    def __delitem__(self, *args): return _monica.IntDoubleMap___delitem__(self, *args)
    def has_key(self, *args): return _monica.IntDoubleMap_has_key(self, *args)
    def keys(self): return _monica.IntDoubleMap_keys(self)
    def values(self): return _monica.IntDoubleMap_values(self)
    def items(self): return _monica.IntDoubleMap_items(self)
    def __contains__(self, *args): return _monica.IntDoubleMap___contains__(self, *args)
    def key_iterator(self): return _monica.IntDoubleMap_key_iterator(self)
    def value_iterator(self): return _monica.IntDoubleMap_value_iterator(self)
    def __setitem__(self, *args): return _monica.IntDoubleMap___setitem__(self, *args)
    def asdict(self): return _monica.IntDoubleMap_asdict(self)
    def __init__(self, *args): 
        this = _monica.new_IntDoubleMap(*args)
        try: self.this.append(this)
        except: self.this = this
    def empty(self): return _monica.IntDoubleMap_empty(self)
    def size(self): return _monica.IntDoubleMap_size(self)
    def clear(self): return _monica.IntDoubleMap_clear(self)
    def swap(self, *args): return _monica.IntDoubleMap_swap(self, *args)
    def get_allocator(self): return _monica.IntDoubleMap_get_allocator(self)
    def begin(self): return _monica.IntDoubleMap_begin(self)
    def end(self): return _monica.IntDoubleMap_end(self)
    def rbegin(self): return _monica.IntDoubleMap_rbegin(self)
    def rend(self): return _monica.IntDoubleMap_rend(self)
    def count(self, *args): return _monica.IntDoubleMap_count(self, *args)
    def erase(self, *args): return _monica.IntDoubleMap_erase(self, *args)
    def find(self, *args): return _monica.IntDoubleMap_find(self, *args)
    def lower_bound(self, *args): return _monica.IntDoubleMap_lower_bound(self, *args)
    def upper_bound(self, *args): return _monica.IntDoubleMap_upper_bound(self, *args)
    __swig_destroy__ = _monica.delete_IntDoubleMap
    __del__ = lambda self : None;
IntDoubleMap_swigregister = _monica.IntDoubleMap_swigregister
IntDoubleMap_swigregister(IntDoubleMap)

class HermesSimulationConfiguration(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, HermesSimulationConfiguration, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, HermesSimulationConfiguration, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _monica.new_HermesSimulationConfiguration()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _monica.delete_HermesSimulationConfiguration
    __del__ = lambda self : None;
    def setOutputPath(self, *args): return _monica.HermesSimulationConfiguration_setOutputPath(self, *args)
    def setSoilParametersFile(self, *args): return _monica.HermesSimulationConfiguration_setSoilParametersFile(self, *args)
    def setWeatherFile(self, *args): return _monica.HermesSimulationConfiguration_setWeatherFile(self, *args)
    def setFertiliserFile(self, *args): return _monica.HermesSimulationConfiguration_setFertiliserFile(self, *args)
    def setIrrigationFile(self, *args): return _monica.HermesSimulationConfiguration_setIrrigationFile(self, *args)
    def setRotationFile(self, *args): return _monica.HermesSimulationConfiguration_setRotationFile(self, *args)
    def setGroundwaterTableFile(self, *args): return _monica.HermesSimulationConfiguration_setGroundwaterTableFile(self, *args)
    def setPrecipManipulationValue(self, *args): return _monica.HermesSimulationConfiguration_setPrecipManipulationValue(self, *args)
    def setMinGWDepth(self, *args): return _monica.HermesSimulationConfiguration_setMinGWDepth(self, *args)
    def setMaxGWDepth(self, *args): return _monica.HermesSimulationConfiguration_setMaxGWDepth(self, *args)
    def setlatitude(self, *args): return _monica.HermesSimulationConfiguration_setlatitude(self, *args)
    def setSlope(self, *args): return _monica.HermesSimulationConfiguration_setSlope(self, *args)
    def setHeightNN(self, *args): return _monica.HermesSimulationConfiguration_setHeightNN(self, *args)
    def setSoilCNRatio(self, *args): return _monica.HermesSimulationConfiguration_setSoilCNRatio(self, *args)
    def setDrainageCoeff(self, *args): return _monica.HermesSimulationConfiguration_setDrainageCoeff(self, *args)
    def setAtmosphericCO2(self, *args): return _monica.HermesSimulationConfiguration_setAtmosphericCO2(self, *args)
    def setPH(self, *args): return _monica.HermesSimulationConfiguration_setPH(self, *args)
    def setWindSpeedHeight(self, *args): return _monica.HermesSimulationConfiguration_setWindSpeedHeight(self, *args)
    def setLeachingDepth(self, *args): return _monica.HermesSimulationConfiguration_setLeachingDepth(self, *args)
    def setMinGWDepthMonth(self, *args): return _monica.HermesSimulationConfiguration_setMinGWDepthMonth(self, *args)
    def setNDeposition(self, *args): return _monica.HermesSimulationConfiguration_setNDeposition(self, *args)
    def setMaxEffectiveRootingDepth(self, *args): return _monica.HermesSimulationConfiguration_setMaxEffectiveRootingDepth(self, *args)
    def setGroundwaterDischarge(self, *args): return _monica.HermesSimulationConfiguration_setGroundwaterDischarge(self, *args)
    def setLayerThickness(self, *args): return _monica.HermesSimulationConfiguration_setLayerThickness(self, *args)
    def setNumberOfLayers(self, *args): return _monica.HermesSimulationConfiguration_setNumberOfLayers(self, *args)
    def setCriticalMoistureDepth(self, *args): return _monica.HermesSimulationConfiguration_setCriticalMoistureDepth(self, *args)
    def setSurfaceRoughness(self, *args): return _monica.HermesSimulationConfiguration_setSurfaceRoughness(self, *args)
    def setDispersionLength(self, *args): return _monica.HermesSimulationConfiguration_setDispersionLength(self, *args)
    def setMaxPercolationRate(self, *args): return _monica.HermesSimulationConfiguration_setMaxPercolationRate(self, *args)
    def setSecondaryYields(self, *args): return _monica.HermesSimulationConfiguration_setSecondaryYields(self, *args)
    def setNitrogenResponseOn(self, *args): return _monica.HermesSimulationConfiguration_setNitrogenResponseOn(self, *args)
    def setWaterDeficitResponseOn(self, *args): return _monica.HermesSimulationConfiguration_setWaterDeficitResponseOn(self, *args)
    def setEmergenceFloodingControlOn(self, *args): return _monica.HermesSimulationConfiguration_setEmergenceFloodingControlOn(self, *args)
    def setEmergenceMoistureControlOn(self, *args): return _monica.HermesSimulationConfiguration_setEmergenceMoistureControlOn(self, *args)
    def setStartYear(self, *args): return _monica.HermesSimulationConfiguration_setStartYear(self, *args)
    def setEndYear(self, *args): return _monica.HermesSimulationConfiguration_setEndYear(self, *args)
    def setOrganicFertiliserID(self, *args): return _monica.HermesSimulationConfiguration_setOrganicFertiliserID(self, *args)
    def setMineralFertiliserID(self, *args): return _monica.HermesSimulationConfiguration_setMineralFertiliserID(self, *args)
    def setNMinUserParameters(self, *args): return _monica.HermesSimulationConfiguration_setNMinUserParameters(self, *args)
    def setAutomaticIrrigationParameters(self, amount=0, treshold=0.1, nitrateConcentration=0, sulfateConcentration=0): return _monica.HermesSimulationConfiguration_setAutomaticIrrigationParameters(self, amount, treshold, nitrateConcentration, sulfateConcentration)
    def setAutomaticHarvestParameters(self, *args): return _monica.HermesSimulationConfiguration_setAutomaticHarvestParameters(self, *args)
    def setNMinFertiliser(self, *args): return _monica.HermesSimulationConfiguration_setNMinFertiliser(self, *args)
    def setAutomaticIrrigation(self, *args): return _monica.HermesSimulationConfiguration_setAutomaticIrrigation(self, *args)
    def setAutomaticHarvest(self, *args): return _monica.HermesSimulationConfiguration_setAutomaticHarvest(self, *args)
    def setInitPercentageFC(self, *args): return _monica.HermesSimulationConfiguration_setInitPercentageFC(self, *args)
    def setInitSoilNitrate(self, *args): return _monica.HermesSimulationConfiguration_setInitSoilNitrate(self, *args)
    def setInitSoilAmmonium(self, *args): return _monica.HermesSimulationConfiguration_setInitSoilAmmonium(self, *args)
    def getOutputPath(self): return _monica.HermesSimulationConfiguration_getOutputPath(self)
    def getSoilParametersFile(self): return _monica.HermesSimulationConfiguration_getSoilParametersFile(self)
    def getWeatherFile(self): return _monica.HermesSimulationConfiguration_getWeatherFile(self)
    def getFertiliserFile(self): return _monica.HermesSimulationConfiguration_getFertiliserFile(self)
    def getIrrigationFile(self): return _monica.HermesSimulationConfiguration_getIrrigationFile(self)
    def getRotationFile(self): return _monica.HermesSimulationConfiguration_getRotationFile(self)
    def getGroundwaterFile(self): return _monica.HermesSimulationConfiguration_getGroundwaterFile(self)
    def getStartYear(self): return _monica.HermesSimulationConfiguration_getStartYear(self)
    def getEndYear(self): return _monica.HermesSimulationConfiguration_getEndYear(self)
    def getOrganicFertiliserID(self): return _monica.HermesSimulationConfiguration_getOrganicFertiliserID(self)
    def getMineralFertiliserID(self): return _monica.HermesSimulationConfiguration_getMineralFertiliserID(self)
    def precipManipulationValue(self): return _monica.HermesSimulationConfiguration_precipManipulationValue(self)
    def getMinGWDepth(self): return _monica.HermesSimulationConfiguration_getMinGWDepth(self)
    def getMaxGWDepth(self): return _monica.HermesSimulationConfiguration_getMaxGWDepth(self)
    def getLatitude(self): return _monica.HermesSimulationConfiguration_getLatitude(self)
    def getSlope(self): return _monica.HermesSimulationConfiguration_getSlope(self)
    def getHeightNN(self): return _monica.HermesSimulationConfiguration_getHeightNN(self)
    def getSoilCNRatio(self): return _monica.HermesSimulationConfiguration_getSoilCNRatio(self)
    def getDrainageCoeff(self): return _monica.HermesSimulationConfiguration_getDrainageCoeff(self)
    def getAtmosphericCO2(self): return _monica.HermesSimulationConfiguration_getAtmosphericCO2(self)
    def getPH(self): return _monica.HermesSimulationConfiguration_getPH(self)
    def getWindSpeedHeight(self): return _monica.HermesSimulationConfiguration_getWindSpeedHeight(self)
    def getLeachingDepth(self): return _monica.HermesSimulationConfiguration_getLeachingDepth(self)
    def getMinGWDepthMonth(self): return _monica.HermesSimulationConfiguration_getMinGWDepthMonth(self)
    def getNDeposition(self): return _monica.HermesSimulationConfiguration_getNDeposition(self)
    def getMaxEffectiveRootingDepth(self): return _monica.HermesSimulationConfiguration_getMaxEffectiveRootingDepth(self)
    def getGroundwaterDischarge(self): return _monica.HermesSimulationConfiguration_getGroundwaterDischarge(self)
    def getLayerThickness(self): return _monica.HermesSimulationConfiguration_getLayerThickness(self)
    def getNumberOfLayers(self): return _monica.HermesSimulationConfiguration_getNumberOfLayers(self)
    def getCriticalMoistureDepth(self): return _monica.HermesSimulationConfiguration_getCriticalMoistureDepth(self)
    def getSurfaceRoughness(self): return _monica.HermesSimulationConfiguration_getSurfaceRoughness(self)
    def getDispersionLength(self): return _monica.HermesSimulationConfiguration_getDispersionLength(self)
    def getMaxPercolationRate(self): return _monica.HermesSimulationConfiguration_getMaxPercolationRate(self)
    def getSecondaryYields(self): return _monica.HermesSimulationConfiguration_getSecondaryYields(self)
    def getNitrogenResponseOn(self): return _monica.HermesSimulationConfiguration_getNitrogenResponseOn(self)
    def getWaterDeficitResponseOn(self): return _monica.HermesSimulationConfiguration_getWaterDeficitResponseOn(self)
    def getEmergenceFloodingControlOn(self): return _monica.HermesSimulationConfiguration_getEmergenceFloodingControlOn(self)
    def getEmergenceMoistureControlOn(self): return _monica.HermesSimulationConfiguration_getEmergenceMoistureControlOn(self)
    def useNMinFertiliser(self): return _monica.HermesSimulationConfiguration_useNMinFertiliser(self)
    def useAutomaticIrrigation(self): return _monica.HermesSimulationConfiguration_useAutomaticIrrigation(self)
    def useAutomaticHarvest(self): return _monica.HermesSimulationConfiguration_useAutomaticHarvest(self)
    def getNMinUserParameters(self): return _monica.HermesSimulationConfiguration_getNMinUserParameters(self)
    def getAutomaticIrrigationParameters(self): return _monica.HermesSimulationConfiguration_getAutomaticIrrigationParameters(self)
    def getAutomaticHarvestParameters(self): return _monica.HermesSimulationConfiguration_getAutomaticHarvestParameters(self)
    def getInitPercentageFC(self): return _monica.HermesSimulationConfiguration_getInitPercentageFC(self)
    def getInitSoilNitrate(self): return _monica.HermesSimulationConfiguration_getInitSoilNitrate(self)
    def getInitSoilAmmonium(self): return _monica.HermesSimulationConfiguration_getInitSoilAmmonium(self)
HermesSimulationConfiguration_swigregister = _monica.HermesSimulationConfiguration_swigregister
HermesSimulationConfiguration_swigregister(HermesSimulationConfiguration)


def runWithHermesData(*args):
  return _monica.runWithHermesData(*args)
runWithHermesData = _monica.runWithHermesData

def getHermesConfigFromIni(*args):
  return _monica.getHermesConfigFromIni(*args)
getHermesConfigFromIni = _monica.getHermesConfigFromIni

def getHermesEnvFromConfiguration(*args):
  return _monica.getHermesEnvFromConfiguration(*args)
getHermesEnvFromConfiguration = _monica.getHermesEnvFromConfiguration

def activateDebugOutput(*args):
  return _monica.activateDebugOutput(*args)
activateDebugOutput = _monica.activateDebugOutput

def pathSeparator():
  return _monica.pathSeparator()
pathSeparator = _monica.pathSeparator
NUTZUNG_UNDEFINED = _monica.NUTZUNG_UNDEFINED
NUTZUNG_GANZPFLANZE = _monica.NUTZUNG_GANZPFLANZE
NUTZUNG_KORN = _monica.NUTZUNG_KORN
NUTZUNG_GRUENDUENGUNG = _monica.NUTZUNG_GRUENDUENGUNG
NUTZUNG_CCM = _monica.NUTZUNG_CCM
weisseritz = _monica.weisseritz
uecker = _monica.uecker
MONTH = _monica.MONTH
maturity = _monica.maturity
unknown = _monica.unknown
primaryYield = _monica.primaryYield
secondaryYield = _monica.secondaryYield
aboveGroundBiomass = _monica.aboveGroundBiomass
anthesisDay = _monica.anthesisDay
maturityDay = _monica.maturityDay
harvestDay = _monica.harvestDay
sumFertiliser = _monica.sumFertiliser
sumIrrigation = _monica.sumIrrigation
sumMineralisation = _monica.sumMineralisation
avg10cmMonthlyAvgCorg = _monica.avg10cmMonthlyAvgCorg
avg30cmMonthlyAvgCorg = _monica.avg30cmMonthlyAvgCorg
mean90cmMonthlyAvgWaterContent = _monica.mean90cmMonthlyAvgWaterContent
sum90cmYearlyNatDay = _monica.sum90cmYearlyNatDay
monthlySumGroundWaterRecharge = _monica.monthlySumGroundWaterRecharge
monthlySumNLeaching = _monica.monthlySumNLeaching
cropHeight = _monica.cropHeight
sum90cmYearlyNO3AtDay = _monica.sum90cmYearlyNO3AtDay
sum90cmYearlyNH4AtDay = _monica.sum90cmYearlyNH4AtDay
maxSnowDepth = _monica.maxSnowDepth
sumSnowDepth = _monica.sumSnowDepth
sumFrostDepth = _monica.sumFrostDepth
avg30cmSoilTemperature = _monica.avg30cmSoilTemperature
sum30cmSoilTemperature = _monica.sum30cmSoilTemperature
avg0_30cmSoilMoisture = _monica.avg0_30cmSoilMoisture
avg30_60cmSoilMoisture = _monica.avg30_60cmSoilMoisture
avg60_90cmSoilMoisture = _monica.avg60_90cmSoilMoisture
avg0_90cmSoilMoisture = _monica.avg0_90cmSoilMoisture
soilMoist0_90cmAtHarvest = _monica.soilMoist0_90cmAtHarvest
corg0_30cmAtHarvest = _monica.corg0_30cmAtHarvest
nmin0_90cmAtHarvest = _monica.nmin0_90cmAtHarvest
waterFluxAtLowerBoundary = _monica.waterFluxAtLowerBoundary
avg0_30cmCapillaryRise = _monica.avg0_30cmCapillaryRise
avg30_60cmCapillaryRise = _monica.avg30_60cmCapillaryRise
avg60_90cmCapillaryRise = _monica.avg60_90cmCapillaryRise
avg0_30cmPercolationRate = _monica.avg0_30cmPercolationRate
avg30_60cmPercolationRate = _monica.avg30_60cmPercolationRate
avg60_90cmPercolationRate = _monica.avg60_90cmPercolationRate
sumSurfaceRunOff = _monica.sumSurfaceRunOff
evapotranspiration = _monica.evapotranspiration
transpiration = _monica.transpiration
evaporation = _monica.evaporation
biomassNContent = _monica.biomassNContent
aboveBiomassNContent = _monica.aboveBiomassNContent
sumTotalNUptake = _monica.sumTotalNUptake
sum30cmSMB_CO2EvolutionRate = _monica.sum30cmSMB_CO2EvolutionRate
NH3Volatilised = _monica.NH3Volatilised
sumNH3Volatilised = _monica.sumNH3Volatilised
sum30cmActDenitrificationRate = _monica.sum30cmActDenitrificationRate
leachingNAtBoundary = _monica.leachingNAtBoundary
yearlySumNLeaching = _monica.yearlySumNLeaching
yearlySumGroundWaterRecharge = _monica.yearlySumGroundWaterRecharge
sumETaPerCrop = _monica.sumETaPerCrop
sumTraPerCrop = _monica.sumTraPerCrop
cropname = _monica.cropname
primaryYieldTM = _monica.primaryYieldTM
secondaryYieldTM = _monica.secondaryYieldTM
monthlySurfaceRunoff = _monica.monthlySurfaceRunoff
monthlyPrecip = _monica.monthlyPrecip
monthlyETa = _monica.monthlyETa
monthlySoilMoistureL0 = _monica.monthlySoilMoistureL0
monthlySoilMoistureL1 = _monica.monthlySoilMoistureL1
monthlySoilMoistureL2 = _monica.monthlySoilMoistureL2
monthlySoilMoistureL3 = _monica.monthlySoilMoistureL3
monthlySoilMoistureL4 = _monica.monthlySoilMoistureL4
monthlySoilMoistureL5 = _monica.monthlySoilMoistureL5
monthlySoilMoistureL6 = _monica.monthlySoilMoistureL6
monthlySoilMoistureL7 = _monica.monthlySoilMoistureL7
monthlySoilMoistureL8 = _monica.monthlySoilMoistureL8
monthlySoilMoistureL9 = _monica.monthlySoilMoistureL9
monthlySoilMoistureL10 = _monica.monthlySoilMoistureL10
monthlySoilMoistureL11 = _monica.monthlySoilMoistureL11
monthlySoilMoistureL12 = _monica.monthlySoilMoistureL12
monthlySoilMoistureL13 = _monica.monthlySoilMoistureL13
monthlySoilMoistureL14 = _monica.monthlySoilMoistureL14
monthlySoilMoistureL15 = _monica.monthlySoilMoistureL15
monthlySoilMoistureL16 = _monica.monthlySoilMoistureL16
monthlySoilMoistureL17 = _monica.monthlySoilMoistureL17
monthlySoilMoistureL18 = _monica.monthlySoilMoistureL18
daysWithCrop = _monica.daysWithCrop
NStress = _monica.NStress
WaterStress = _monica.WaterStress
HeatStress = _monica.HeatStress
OxygenStress = _monica.OxygenStress
dev_stage = _monica.dev_stage
soilMoist0_90cm = _monica.soilMoist0_90cm
corg0_30cm = _monica.corg0_30cm
nmin0_90cm = _monica.nmin0_90cm
ETa = _monica.ETa
dailyPrimYield = _monica.dailyPrimYield
dailyAGB = _monica.dailyAGB
dailyAGB_N = _monica.dailyAGB_N

def cropResultIds():
  return _monica.cropResultIds()
cropResultIds = _monica.cropResultIds

def nameAndUnitForResultId(*args):
  return _monica.nameAndUnitForResultId(*args)
nameAndUnitForResultId = _monica.nameAndUnitForResultId

def eva2CropResultIds():
  return _monica.eva2CropResultIds()
eva2CropResultIds = _monica.eva2CropResultIds

def eva2MonthlyResultIds():
  return _monica.eva2MonthlyResultIds()
eva2MonthlyResultIds = _monica.eva2MonthlyResultIds

def monthlyResultIds():
  return _monica.monthlyResultIds()
monthlyResultIds = _monica.monthlyResultIds

def CCGermanyResultIds():
  return _monica.CCGermanyResultIds()
CCGermanyResultIds = _monica.CCGermanyResultIds
class ResultIdInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ResultIdInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ResultIdInfo, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _monica.new_ResultIdInfo(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_setmethods__["name"] = _monica.ResultIdInfo_name_set
    __swig_getmethods__["name"] = _monica.ResultIdInfo_name_get
    if _newclass:name = _swig_property(_monica.ResultIdInfo_name_get, _monica.ResultIdInfo_name_set)
    __swig_setmethods__["unit"] = _monica.ResultIdInfo_unit_set
    __swig_getmethods__["unit"] = _monica.ResultIdInfo_unit_get
    if _newclass:unit = _swig_property(_monica.ResultIdInfo_unit_get, _monica.ResultIdInfo_unit_set)
    __swig_setmethods__["shortName"] = _monica.ResultIdInfo_shortName_set
    __swig_getmethods__["shortName"] = _monica.ResultIdInfo_shortName_get
    if _newclass:shortName = _swig_property(_monica.ResultIdInfo_shortName_get, _monica.ResultIdInfo_shortName_set)
    __swig_destroy__ = _monica.delete_ResultIdInfo
    __del__ = lambda self : None;
ResultIdInfo_swigregister = _monica.ResultIdInfo_swigregister
ResultIdInfo_swigregister(ResultIdInfo)
cvar = _monica.cvar
UNDEFINED = cvar.UNDEFINED
UNDEFINED_INT = cvar.UNDEFINED_INT


def resultIdInfo(*args):
  return _monica.resultIdInfo(*args)
resultIdInfo = _monica.resultIdInfo
class PVResult(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PVResult, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PVResult, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _monica.new_PVResult()
        try: self.this.append(this)
        except: self.this = this
    __swig_setmethods__["id"] = _monica.PVResult_id_set
    __swig_getmethods__["id"] = _monica.PVResult_id_get
    if _newclass:id = _swig_property(_monica.PVResult_id_get, _monica.PVResult_id_set)
    __swig_setmethods__["customId"] = _monica.PVResult_customId_set
    __swig_getmethods__["customId"] = _monica.PVResult_customId_get
    if _newclass:customId = _swig_property(_monica.PVResult_customId_get, _monica.PVResult_customId_set)
    __swig_setmethods__["date"] = _monica.PVResult_date_set
    __swig_getmethods__["date"] = _monica.PVResult_date_get
    if _newclass:date = _swig_property(_monica.PVResult_date_get, _monica.PVResult_date_set)
    __swig_setmethods__["pvResults"] = _monica.PVResult_pvResults_set
    __swig_getmethods__["pvResults"] = _monica.PVResult_pvResults_get
    if _newclass:pvResults = _swig_property(_monica.PVResult_pvResults_get, _monica.PVResult_pvResults_set)
    __swig_destroy__ = _monica.delete_PVResult
    __del__ = lambda self : None;
PVResult_swigregister = _monica.PVResult_swigregister
PVResult_swigregister(PVResult)

class YieldComponent(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, YieldComponent, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, YieldComponent, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _monica.new_YieldComponent(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_setmethods__["organId"] = _monica.YieldComponent_organId_set
    __swig_getmethods__["organId"] = _monica.YieldComponent_organId_get
    if _newclass:organId = _swig_property(_monica.YieldComponent_organId_get, _monica.YieldComponent_organId_set)
    __swig_setmethods__["yieldPercentage"] = _monica.YieldComponent_yieldPercentage_set
    __swig_getmethods__["yieldPercentage"] = _monica.YieldComponent_yieldPercentage_get
    if _newclass:yieldPercentage = _swig_property(_monica.YieldComponent_yieldPercentage_get, _monica.YieldComponent_yieldPercentage_set)
    __swig_setmethods__["yieldDryMatter"] = _monica.YieldComponent_yieldDryMatter_set
    __swig_getmethods__["yieldDryMatter"] = _monica.YieldComponent_yieldDryMatter_get
    if _newclass:yieldDryMatter = _swig_property(_monica.YieldComponent_yieldDryMatter_get, _monica.YieldComponent_yieldDryMatter_set)
    __swig_destroy__ = _monica.delete_YieldComponent
    __del__ = lambda self : None;
YieldComponent_swigregister = _monica.YieldComponent_swigregister
YieldComponent_swigregister(YieldComponent)

class CropParameters(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CropParameters, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CropParameters, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _monica.new_CropParameters()
        try: self.this.append(this)
        except: self.this = this
    def resizeStageOrganVectors(self): return _monica.CropParameters_resizeStageOrganVectors(self)
    def toString(self): return _monica.CropParameters_toString(self)
    __swig_setmethods__["pc_CropName"] = _monica.CropParameters_pc_CropName_set
    __swig_getmethods__["pc_CropName"] = _monica.CropParameters_pc_CropName_get
    if _newclass:pc_CropName = _swig_property(_monica.CropParameters_pc_CropName_get, _monica.CropParameters_pc_CropName_set)
    __swig_setmethods__["pc_Perennial"] = _monica.CropParameters_pc_Perennial_set
    __swig_getmethods__["pc_Perennial"] = _monica.CropParameters_pc_Perennial_get
    if _newclass:pc_Perennial = _swig_property(_monica.CropParameters_pc_Perennial_get, _monica.CropParameters_pc_Perennial_set)
    __swig_setmethods__["pc_NumberOfDevelopmentalStages"] = _monica.CropParameters_pc_NumberOfDevelopmentalStages_set
    __swig_getmethods__["pc_NumberOfDevelopmentalStages"] = _monica.CropParameters_pc_NumberOfDevelopmentalStages_get
    if _newclass:pc_NumberOfDevelopmentalStages = _swig_property(_monica.CropParameters_pc_NumberOfDevelopmentalStages_get, _monica.CropParameters_pc_NumberOfDevelopmentalStages_set)
    __swig_setmethods__["pc_NumberOfOrgans"] = _monica.CropParameters_pc_NumberOfOrgans_set
    __swig_getmethods__["pc_NumberOfOrgans"] = _monica.CropParameters_pc_NumberOfOrgans_get
    if _newclass:pc_NumberOfOrgans = _swig_property(_monica.CropParameters_pc_NumberOfOrgans_get, _monica.CropParameters_pc_NumberOfOrgans_set)
    __swig_setmethods__["pc_CarboxylationPathway"] = _monica.CropParameters_pc_CarboxylationPathway_set
    __swig_getmethods__["pc_CarboxylationPathway"] = _monica.CropParameters_pc_CarboxylationPathway_get
    if _newclass:pc_CarboxylationPathway = _swig_property(_monica.CropParameters_pc_CarboxylationPathway_get, _monica.CropParameters_pc_CarboxylationPathway_set)
    __swig_setmethods__["pc_DefaultRadiationUseEfficiency"] = _monica.CropParameters_pc_DefaultRadiationUseEfficiency_set
    __swig_getmethods__["pc_DefaultRadiationUseEfficiency"] = _monica.CropParameters_pc_DefaultRadiationUseEfficiency_get
    if _newclass:pc_DefaultRadiationUseEfficiency = _swig_property(_monica.CropParameters_pc_DefaultRadiationUseEfficiency_get, _monica.CropParameters_pc_DefaultRadiationUseEfficiency_set)
    __swig_setmethods__["pc_PartBiologicalNFixation"] = _monica.CropParameters_pc_PartBiologicalNFixation_set
    __swig_getmethods__["pc_PartBiologicalNFixation"] = _monica.CropParameters_pc_PartBiologicalNFixation_get
    if _newclass:pc_PartBiologicalNFixation = _swig_property(_monica.CropParameters_pc_PartBiologicalNFixation_get, _monica.CropParameters_pc_PartBiologicalNFixation_set)
    __swig_setmethods__["pc_InitialKcFactor"] = _monica.CropParameters_pc_InitialKcFactor_set
    __swig_getmethods__["pc_InitialKcFactor"] = _monica.CropParameters_pc_InitialKcFactor_get
    if _newclass:pc_InitialKcFactor = _swig_property(_monica.CropParameters_pc_InitialKcFactor_get, _monica.CropParameters_pc_InitialKcFactor_set)
    __swig_setmethods__["pc_LuxuryNCoeff"] = _monica.CropParameters_pc_LuxuryNCoeff_set
    __swig_getmethods__["pc_LuxuryNCoeff"] = _monica.CropParameters_pc_LuxuryNCoeff_get
    if _newclass:pc_LuxuryNCoeff = _swig_property(_monica.CropParameters_pc_LuxuryNCoeff_get, _monica.CropParameters_pc_LuxuryNCoeff_set)
    __swig_setmethods__["pc_MaxAssimilationRate"] = _monica.CropParameters_pc_MaxAssimilationRate_set
    __swig_getmethods__["pc_MaxAssimilationRate"] = _monica.CropParameters_pc_MaxAssimilationRate_get
    if _newclass:pc_MaxAssimilationRate = _swig_property(_monica.CropParameters_pc_MaxAssimilationRate_get, _monica.CropParameters_pc_MaxAssimilationRate_set)
    __swig_setmethods__["pc_MaxCropDiameter"] = _monica.CropParameters_pc_MaxCropDiameter_set
    __swig_getmethods__["pc_MaxCropDiameter"] = _monica.CropParameters_pc_MaxCropDiameter_get
    if _newclass:pc_MaxCropDiameter = _swig_property(_monica.CropParameters_pc_MaxCropDiameter_get, _monica.CropParameters_pc_MaxCropDiameter_set)
    __swig_setmethods__["pc_MaxCropHeight"] = _monica.CropParameters_pc_MaxCropHeight_set
    __swig_getmethods__["pc_MaxCropHeight"] = _monica.CropParameters_pc_MaxCropHeight_get
    if _newclass:pc_MaxCropHeight = _swig_property(_monica.CropParameters_pc_MaxCropHeight_get, _monica.CropParameters_pc_MaxCropHeight_set)
    __swig_setmethods__["pc_CropHeightP1"] = _monica.CropParameters_pc_CropHeightP1_set
    __swig_getmethods__["pc_CropHeightP1"] = _monica.CropParameters_pc_CropHeightP1_get
    if _newclass:pc_CropHeightP1 = _swig_property(_monica.CropParameters_pc_CropHeightP1_get, _monica.CropParameters_pc_CropHeightP1_set)
    __swig_setmethods__["pc_CropHeightP2"] = _monica.CropParameters_pc_CropHeightP2_set
    __swig_getmethods__["pc_CropHeightP2"] = _monica.CropParameters_pc_CropHeightP2_get
    if _newclass:pc_CropHeightP2 = _swig_property(_monica.CropParameters_pc_CropHeightP2_get, _monica.CropParameters_pc_CropHeightP2_set)
    __swig_setmethods__["pc_StageAtMaxHeight"] = _monica.CropParameters_pc_StageAtMaxHeight_set
    __swig_getmethods__["pc_StageAtMaxHeight"] = _monica.CropParameters_pc_StageAtMaxHeight_get
    if _newclass:pc_StageAtMaxHeight = _swig_property(_monica.CropParameters_pc_StageAtMaxHeight_get, _monica.CropParameters_pc_StageAtMaxHeight_set)
    __swig_setmethods__["pc_StageAtMaxDiameter"] = _monica.CropParameters_pc_StageAtMaxDiameter_set
    __swig_getmethods__["pc_StageAtMaxDiameter"] = _monica.CropParameters_pc_StageAtMaxDiameter_get
    if _newclass:pc_StageAtMaxDiameter = _swig_property(_monica.CropParameters_pc_StageAtMaxDiameter_get, _monica.CropParameters_pc_StageAtMaxDiameter_set)
    __swig_setmethods__["pc_MinimumNConcentration"] = _monica.CropParameters_pc_MinimumNConcentration_set
    __swig_getmethods__["pc_MinimumNConcentration"] = _monica.CropParameters_pc_MinimumNConcentration_get
    if _newclass:pc_MinimumNConcentration = _swig_property(_monica.CropParameters_pc_MinimumNConcentration_get, _monica.CropParameters_pc_MinimumNConcentration_set)
    __swig_setmethods__["pc_MinimumTemperatureForAssimilation"] = _monica.CropParameters_pc_MinimumTemperatureForAssimilation_set
    __swig_getmethods__["pc_MinimumTemperatureForAssimilation"] = _monica.CropParameters_pc_MinimumTemperatureForAssimilation_get
    if _newclass:pc_MinimumTemperatureForAssimilation = _swig_property(_monica.CropParameters_pc_MinimumTemperatureForAssimilation_get, _monica.CropParameters_pc_MinimumTemperatureForAssimilation_set)
    __swig_setmethods__["pc_NConcentrationAbovegroundBiomass"] = _monica.CropParameters_pc_NConcentrationAbovegroundBiomass_set
    __swig_getmethods__["pc_NConcentrationAbovegroundBiomass"] = _monica.CropParameters_pc_NConcentrationAbovegroundBiomass_get
    if _newclass:pc_NConcentrationAbovegroundBiomass = _swig_property(_monica.CropParameters_pc_NConcentrationAbovegroundBiomass_get, _monica.CropParameters_pc_NConcentrationAbovegroundBiomass_set)
    __swig_setmethods__["pc_NConcentrationB0"] = _monica.CropParameters_pc_NConcentrationB0_set
    __swig_getmethods__["pc_NConcentrationB0"] = _monica.CropParameters_pc_NConcentrationB0_get
    if _newclass:pc_NConcentrationB0 = _swig_property(_monica.CropParameters_pc_NConcentrationB0_get, _monica.CropParameters_pc_NConcentrationB0_set)
    __swig_setmethods__["pc_NConcentrationPN"] = _monica.CropParameters_pc_NConcentrationPN_set
    __swig_getmethods__["pc_NConcentrationPN"] = _monica.CropParameters_pc_NConcentrationPN_get
    if _newclass:pc_NConcentrationPN = _swig_property(_monica.CropParameters_pc_NConcentrationPN_get, _monica.CropParameters_pc_NConcentrationPN_set)
    __swig_setmethods__["pc_NConcentrationRoot"] = _monica.CropParameters_pc_NConcentrationRoot_set
    __swig_getmethods__["pc_NConcentrationRoot"] = _monica.CropParameters_pc_NConcentrationRoot_get
    if _newclass:pc_NConcentrationRoot = _swig_property(_monica.CropParameters_pc_NConcentrationRoot_get, _monica.CropParameters_pc_NConcentrationRoot_set)
    __swig_setmethods__["pc_ResidueNRatio"] = _monica.CropParameters_pc_ResidueNRatio_set
    __swig_getmethods__["pc_ResidueNRatio"] = _monica.CropParameters_pc_ResidueNRatio_get
    if _newclass:pc_ResidueNRatio = _swig_property(_monica.CropParameters_pc_ResidueNRatio_get, _monica.CropParameters_pc_ResidueNRatio_set)
    __swig_setmethods__["pc_DevelopmentAccelerationByNitrogenStress"] = _monica.CropParameters_pc_DevelopmentAccelerationByNitrogenStress_set
    __swig_getmethods__["pc_DevelopmentAccelerationByNitrogenStress"] = _monica.CropParameters_pc_DevelopmentAccelerationByNitrogenStress_get
    if _newclass:pc_DevelopmentAccelerationByNitrogenStress = _swig_property(_monica.CropParameters_pc_DevelopmentAccelerationByNitrogenStress_get, _monica.CropParameters_pc_DevelopmentAccelerationByNitrogenStress_set)
    __swig_setmethods__["pc_FieldConditionModifier"] = _monica.CropParameters_pc_FieldConditionModifier_set
    __swig_getmethods__["pc_FieldConditionModifier"] = _monica.CropParameters_pc_FieldConditionModifier_get
    if _newclass:pc_FieldConditionModifier = _swig_property(_monica.CropParameters_pc_FieldConditionModifier_get, _monica.CropParameters_pc_FieldConditionModifier_set)
    __swig_setmethods__["pc_AssimilateReallocation"] = _monica.CropParameters_pc_AssimilateReallocation_set
    __swig_getmethods__["pc_AssimilateReallocation"] = _monica.CropParameters_pc_AssimilateReallocation_get
    if _newclass:pc_AssimilateReallocation = _swig_property(_monica.CropParameters_pc_AssimilateReallocation_get, _monica.CropParameters_pc_AssimilateReallocation_set)
    __swig_setmethods__["pc_LT50cultivar"] = _monica.CropParameters_pc_LT50cultivar_set
    __swig_getmethods__["pc_LT50cultivar"] = _monica.CropParameters_pc_LT50cultivar_get
    if _newclass:pc_LT50cultivar = _swig_property(_monica.CropParameters_pc_LT50cultivar_get, _monica.CropParameters_pc_LT50cultivar_set)
    __swig_setmethods__["pc_FrostHardening"] = _monica.CropParameters_pc_FrostHardening_set
    __swig_getmethods__["pc_FrostHardening"] = _monica.CropParameters_pc_FrostHardening_get
    if _newclass:pc_FrostHardening = _swig_property(_monica.CropParameters_pc_FrostHardening_get, _monica.CropParameters_pc_FrostHardening_set)
    __swig_setmethods__["pc_FrostDehardening"] = _monica.CropParameters_pc_FrostDehardening_set
    __swig_getmethods__["pc_FrostDehardening"] = _monica.CropParameters_pc_FrostDehardening_get
    if _newclass:pc_FrostDehardening = _swig_property(_monica.CropParameters_pc_FrostDehardening_get, _monica.CropParameters_pc_FrostDehardening_set)
    __swig_setmethods__["pc_LowTemperatureExposure"] = _monica.CropParameters_pc_LowTemperatureExposure_set
    __swig_getmethods__["pc_LowTemperatureExposure"] = _monica.CropParameters_pc_LowTemperatureExposure_get
    if _newclass:pc_LowTemperatureExposure = _swig_property(_monica.CropParameters_pc_LowTemperatureExposure_get, _monica.CropParameters_pc_LowTemperatureExposure_set)
    __swig_setmethods__["pc_RespiratoryStress"] = _monica.CropParameters_pc_RespiratoryStress_set
    __swig_getmethods__["pc_RespiratoryStress"] = _monica.CropParameters_pc_RespiratoryStress_get
    if _newclass:pc_RespiratoryStress = _swig_property(_monica.CropParameters_pc_RespiratoryStress_get, _monica.CropParameters_pc_RespiratoryStress_set)
    __swig_setmethods__["pc_LatestHarvestDoy"] = _monica.CropParameters_pc_LatestHarvestDoy_set
    __swig_getmethods__["pc_LatestHarvestDoy"] = _monica.CropParameters_pc_LatestHarvestDoy_get
    if _newclass:pc_LatestHarvestDoy = _swig_property(_monica.CropParameters_pc_LatestHarvestDoy_get, _monica.CropParameters_pc_LatestHarvestDoy_set)
    __swig_setmethods__["pc_AssimilatePartitioningCoeff"] = _monica.CropParameters_pc_AssimilatePartitioningCoeff_set
    __swig_getmethods__["pc_AssimilatePartitioningCoeff"] = _monica.CropParameters_pc_AssimilatePartitioningCoeff_get
    if _newclass:pc_AssimilatePartitioningCoeff = _swig_property(_monica.CropParameters_pc_AssimilatePartitioningCoeff_get, _monica.CropParameters_pc_AssimilatePartitioningCoeff_set)
    __swig_setmethods__["pc_OrganSenescenceRate"] = _monica.CropParameters_pc_OrganSenescenceRate_set
    __swig_getmethods__["pc_OrganSenescenceRate"] = _monica.CropParameters_pc_OrganSenescenceRate_get
    if _newclass:pc_OrganSenescenceRate = _swig_property(_monica.CropParameters_pc_OrganSenescenceRate_get, _monica.CropParameters_pc_OrganSenescenceRate_set)
    __swig_setmethods__["pc_BaseDaylength"] = _monica.CropParameters_pc_BaseDaylength_set
    __swig_getmethods__["pc_BaseDaylength"] = _monica.CropParameters_pc_BaseDaylength_get
    if _newclass:pc_BaseDaylength = _swig_property(_monica.CropParameters_pc_BaseDaylength_get, _monica.CropParameters_pc_BaseDaylength_set)
    __swig_setmethods__["pc_BaseTemperature"] = _monica.CropParameters_pc_BaseTemperature_set
    __swig_getmethods__["pc_BaseTemperature"] = _monica.CropParameters_pc_BaseTemperature_get
    if _newclass:pc_BaseTemperature = _swig_property(_monica.CropParameters_pc_BaseTemperature_get, _monica.CropParameters_pc_BaseTemperature_set)
    __swig_setmethods__["pc_OptimumTemperature"] = _monica.CropParameters_pc_OptimumTemperature_set
    __swig_getmethods__["pc_OptimumTemperature"] = _monica.CropParameters_pc_OptimumTemperature_get
    if _newclass:pc_OptimumTemperature = _swig_property(_monica.CropParameters_pc_OptimumTemperature_get, _monica.CropParameters_pc_OptimumTemperature_set)
    __swig_setmethods__["pc_DaylengthRequirement"] = _monica.CropParameters_pc_DaylengthRequirement_set
    __swig_getmethods__["pc_DaylengthRequirement"] = _monica.CropParameters_pc_DaylengthRequirement_get
    if _newclass:pc_DaylengthRequirement = _swig_property(_monica.CropParameters_pc_DaylengthRequirement_get, _monica.CropParameters_pc_DaylengthRequirement_set)
    __swig_setmethods__["pc_DroughtStressThreshold"] = _monica.CropParameters_pc_DroughtStressThreshold_set
    __swig_getmethods__["pc_DroughtStressThreshold"] = _monica.CropParameters_pc_DroughtStressThreshold_get
    if _newclass:pc_DroughtStressThreshold = _swig_property(_monica.CropParameters_pc_DroughtStressThreshold_get, _monica.CropParameters_pc_DroughtStressThreshold_set)
    __swig_setmethods__["pc_OrganMaintenanceRespiration"] = _monica.CropParameters_pc_OrganMaintenanceRespiration_set
    __swig_getmethods__["pc_OrganMaintenanceRespiration"] = _monica.CropParameters_pc_OrganMaintenanceRespiration_get
    if _newclass:pc_OrganMaintenanceRespiration = _swig_property(_monica.CropParameters_pc_OrganMaintenanceRespiration_get, _monica.CropParameters_pc_OrganMaintenanceRespiration_set)
    __swig_setmethods__["pc_OrganGrowthRespiration"] = _monica.CropParameters_pc_OrganGrowthRespiration_set
    __swig_getmethods__["pc_OrganGrowthRespiration"] = _monica.CropParameters_pc_OrganGrowthRespiration_get
    if _newclass:pc_OrganGrowthRespiration = _swig_property(_monica.CropParameters_pc_OrganGrowthRespiration_get, _monica.CropParameters_pc_OrganGrowthRespiration_set)
    __swig_setmethods__["pc_SpecificLeafArea"] = _monica.CropParameters_pc_SpecificLeafArea_set
    __swig_getmethods__["pc_SpecificLeafArea"] = _monica.CropParameters_pc_SpecificLeafArea_get
    if _newclass:pc_SpecificLeafArea = _swig_property(_monica.CropParameters_pc_SpecificLeafArea_get, _monica.CropParameters_pc_SpecificLeafArea_set)
    __swig_setmethods__["pc_StageMaxRootNConcentration"] = _monica.CropParameters_pc_StageMaxRootNConcentration_set
    __swig_getmethods__["pc_StageMaxRootNConcentration"] = _monica.CropParameters_pc_StageMaxRootNConcentration_get
    if _newclass:pc_StageMaxRootNConcentration = _swig_property(_monica.CropParameters_pc_StageMaxRootNConcentration_get, _monica.CropParameters_pc_StageMaxRootNConcentration_set)
    __swig_setmethods__["pc_StageKcFactor"] = _monica.CropParameters_pc_StageKcFactor_set
    __swig_getmethods__["pc_StageKcFactor"] = _monica.CropParameters_pc_StageKcFactor_get
    if _newclass:pc_StageKcFactor = _swig_property(_monica.CropParameters_pc_StageKcFactor_get, _monica.CropParameters_pc_StageKcFactor_set)
    __swig_setmethods__["pc_StageTemperatureSum"] = _monica.CropParameters_pc_StageTemperatureSum_set
    __swig_getmethods__["pc_StageTemperatureSum"] = _monica.CropParameters_pc_StageTemperatureSum_get
    if _newclass:pc_StageTemperatureSum = _swig_property(_monica.CropParameters_pc_StageTemperatureSum_get, _monica.CropParameters_pc_StageTemperatureSum_set)
    __swig_setmethods__["pc_VernalisationRequirement"] = _monica.CropParameters_pc_VernalisationRequirement_set
    __swig_getmethods__["pc_VernalisationRequirement"] = _monica.CropParameters_pc_VernalisationRequirement_get
    if _newclass:pc_VernalisationRequirement = _swig_property(_monica.CropParameters_pc_VernalisationRequirement_get, _monica.CropParameters_pc_VernalisationRequirement_set)
    __swig_setmethods__["pc_InitialOrganBiomass"] = _monica.CropParameters_pc_InitialOrganBiomass_set
    __swig_getmethods__["pc_InitialOrganBiomass"] = _monica.CropParameters_pc_InitialOrganBiomass_get
    if _newclass:pc_InitialOrganBiomass = _swig_property(_monica.CropParameters_pc_InitialOrganBiomass_get, _monica.CropParameters_pc_InitialOrganBiomass_set)
    __swig_setmethods__["pc_CriticalOxygenContent"] = _monica.CropParameters_pc_CriticalOxygenContent_set
    __swig_getmethods__["pc_CriticalOxygenContent"] = _monica.CropParameters_pc_CriticalOxygenContent_get
    if _newclass:pc_CriticalOxygenContent = _swig_property(_monica.CropParameters_pc_CriticalOxygenContent_get, _monica.CropParameters_pc_CriticalOxygenContent_set)
    __swig_setmethods__["pc_CropSpecificMaxRootingDepth"] = _monica.CropParameters_pc_CropSpecificMaxRootingDepth_set
    __swig_getmethods__["pc_CropSpecificMaxRootingDepth"] = _monica.CropParameters_pc_CropSpecificMaxRootingDepth_get
    if _newclass:pc_CropSpecificMaxRootingDepth = _swig_property(_monica.CropParameters_pc_CropSpecificMaxRootingDepth_get, _monica.CropParameters_pc_CropSpecificMaxRootingDepth_set)
    __swig_setmethods__["pc_AbovegroundOrgan"] = _monica.CropParameters_pc_AbovegroundOrgan_set
    __swig_getmethods__["pc_AbovegroundOrgan"] = _monica.CropParameters_pc_AbovegroundOrgan_get
    if _newclass:pc_AbovegroundOrgan = _swig_property(_monica.CropParameters_pc_AbovegroundOrgan_get, _monica.CropParameters_pc_AbovegroundOrgan_set)
    __swig_setmethods__["pc_StorageOrgan"] = _monica.CropParameters_pc_StorageOrgan_set
    __swig_getmethods__["pc_StorageOrgan"] = _monica.CropParameters_pc_StorageOrgan_get
    if _newclass:pc_StorageOrgan = _swig_property(_monica.CropParameters_pc_StorageOrgan_get, _monica.CropParameters_pc_StorageOrgan_set)
    __swig_setmethods__["pc_SamplingDepth"] = _monica.CropParameters_pc_SamplingDepth_set
    __swig_getmethods__["pc_SamplingDepth"] = _monica.CropParameters_pc_SamplingDepth_get
    if _newclass:pc_SamplingDepth = _swig_property(_monica.CropParameters_pc_SamplingDepth_get, _monica.CropParameters_pc_SamplingDepth_set)
    __swig_setmethods__["pc_TargetNSamplingDepth"] = _monica.CropParameters_pc_TargetNSamplingDepth_set
    __swig_getmethods__["pc_TargetNSamplingDepth"] = _monica.CropParameters_pc_TargetNSamplingDepth_get
    if _newclass:pc_TargetNSamplingDepth = _swig_property(_monica.CropParameters_pc_TargetNSamplingDepth_get, _monica.CropParameters_pc_TargetNSamplingDepth_set)
    __swig_setmethods__["pc_TargetN30"] = _monica.CropParameters_pc_TargetN30_set
    __swig_getmethods__["pc_TargetN30"] = _monica.CropParameters_pc_TargetN30_get
    if _newclass:pc_TargetN30 = _swig_property(_monica.CropParameters_pc_TargetN30_get, _monica.CropParameters_pc_TargetN30_set)
    __swig_setmethods__["pc_HeatSumIrrigationStart"] = _monica.CropParameters_pc_HeatSumIrrigationStart_set
    __swig_getmethods__["pc_HeatSumIrrigationStart"] = _monica.CropParameters_pc_HeatSumIrrigationStart_get
    if _newclass:pc_HeatSumIrrigationStart = _swig_property(_monica.CropParameters_pc_HeatSumIrrigationStart_get, _monica.CropParameters_pc_HeatSumIrrigationStart_set)
    __swig_setmethods__["pc_HeatSumIrrigationEnd"] = _monica.CropParameters_pc_HeatSumIrrigationEnd_set
    __swig_getmethods__["pc_HeatSumIrrigationEnd"] = _monica.CropParameters_pc_HeatSumIrrigationEnd_get
    if _newclass:pc_HeatSumIrrigationEnd = _swig_property(_monica.CropParameters_pc_HeatSumIrrigationEnd_get, _monica.CropParameters_pc_HeatSumIrrigationEnd_set)
    __swig_setmethods__["pc_MaxNUptakeParam"] = _monica.CropParameters_pc_MaxNUptakeParam_set
    __swig_getmethods__["pc_MaxNUptakeParam"] = _monica.CropParameters_pc_MaxNUptakeParam_get
    if _newclass:pc_MaxNUptakeParam = _swig_property(_monica.CropParameters_pc_MaxNUptakeParam_get, _monica.CropParameters_pc_MaxNUptakeParam_set)
    __swig_setmethods__["pc_RootDistributionParam"] = _monica.CropParameters_pc_RootDistributionParam_set
    __swig_getmethods__["pc_RootDistributionParam"] = _monica.CropParameters_pc_RootDistributionParam_get
    if _newclass:pc_RootDistributionParam = _swig_property(_monica.CropParameters_pc_RootDistributionParam_get, _monica.CropParameters_pc_RootDistributionParam_set)
    __swig_setmethods__["pc_PlantDensity"] = _monica.CropParameters_pc_PlantDensity_set
    __swig_getmethods__["pc_PlantDensity"] = _monica.CropParameters_pc_PlantDensity_get
    if _newclass:pc_PlantDensity = _swig_property(_monica.CropParameters_pc_PlantDensity_get, _monica.CropParameters_pc_PlantDensity_set)
    __swig_setmethods__["pc_RootGrowthLag"] = _monica.CropParameters_pc_RootGrowthLag_set
    __swig_getmethods__["pc_RootGrowthLag"] = _monica.CropParameters_pc_RootGrowthLag_get
    if _newclass:pc_RootGrowthLag = _swig_property(_monica.CropParameters_pc_RootGrowthLag_get, _monica.CropParameters_pc_RootGrowthLag_set)
    __swig_setmethods__["pc_MinimumTemperatureRootGrowth"] = _monica.CropParameters_pc_MinimumTemperatureRootGrowth_set
    __swig_getmethods__["pc_MinimumTemperatureRootGrowth"] = _monica.CropParameters_pc_MinimumTemperatureRootGrowth_get
    if _newclass:pc_MinimumTemperatureRootGrowth = _swig_property(_monica.CropParameters_pc_MinimumTemperatureRootGrowth_get, _monica.CropParameters_pc_MinimumTemperatureRootGrowth_set)
    __swig_setmethods__["pc_InitialRootingDepth"] = _monica.CropParameters_pc_InitialRootingDepth_set
    __swig_getmethods__["pc_InitialRootingDepth"] = _monica.CropParameters_pc_InitialRootingDepth_get
    if _newclass:pc_InitialRootingDepth = _swig_property(_monica.CropParameters_pc_InitialRootingDepth_get, _monica.CropParameters_pc_InitialRootingDepth_set)
    __swig_setmethods__["pc_RootPenetrationRate"] = _monica.CropParameters_pc_RootPenetrationRate_set
    __swig_getmethods__["pc_RootPenetrationRate"] = _monica.CropParameters_pc_RootPenetrationRate_get
    if _newclass:pc_RootPenetrationRate = _swig_property(_monica.CropParameters_pc_RootPenetrationRate_get, _monica.CropParameters_pc_RootPenetrationRate_set)
    __swig_setmethods__["pc_RootFormFactor"] = _monica.CropParameters_pc_RootFormFactor_set
    __swig_getmethods__["pc_RootFormFactor"] = _monica.CropParameters_pc_RootFormFactor_get
    if _newclass:pc_RootFormFactor = _swig_property(_monica.CropParameters_pc_RootFormFactor_get, _monica.CropParameters_pc_RootFormFactor_set)
    __swig_setmethods__["pc_SpecificRootLength"] = _monica.CropParameters_pc_SpecificRootLength_set
    __swig_getmethods__["pc_SpecificRootLength"] = _monica.CropParameters_pc_SpecificRootLength_get
    if _newclass:pc_SpecificRootLength = _swig_property(_monica.CropParameters_pc_SpecificRootLength_get, _monica.CropParameters_pc_SpecificRootLength_set)
    __swig_setmethods__["pc_StageAfterCut"] = _monica.CropParameters_pc_StageAfterCut_set
    __swig_getmethods__["pc_StageAfterCut"] = _monica.CropParameters_pc_StageAfterCut_get
    if _newclass:pc_StageAfterCut = _swig_property(_monica.CropParameters_pc_StageAfterCut_get, _monica.CropParameters_pc_StageAfterCut_set)
    __swig_setmethods__["pc_CriticalTemperatureHeatStress"] = _monica.CropParameters_pc_CriticalTemperatureHeatStress_set
    __swig_getmethods__["pc_CriticalTemperatureHeatStress"] = _monica.CropParameters_pc_CriticalTemperatureHeatStress_get
    if _newclass:pc_CriticalTemperatureHeatStress = _swig_property(_monica.CropParameters_pc_CriticalTemperatureHeatStress_get, _monica.CropParameters_pc_CriticalTemperatureHeatStress_set)
    __swig_setmethods__["pc_LimitingTemperatureHeatStress"] = _monica.CropParameters_pc_LimitingTemperatureHeatStress_set
    __swig_getmethods__["pc_LimitingTemperatureHeatStress"] = _monica.CropParameters_pc_LimitingTemperatureHeatStress_get
    if _newclass:pc_LimitingTemperatureHeatStress = _swig_property(_monica.CropParameters_pc_LimitingTemperatureHeatStress_get, _monica.CropParameters_pc_LimitingTemperatureHeatStress_set)
    __swig_setmethods__["pc_BeginSensitivePhaseHeatStress"] = _monica.CropParameters_pc_BeginSensitivePhaseHeatStress_set
    __swig_getmethods__["pc_BeginSensitivePhaseHeatStress"] = _monica.CropParameters_pc_BeginSensitivePhaseHeatStress_get
    if _newclass:pc_BeginSensitivePhaseHeatStress = _swig_property(_monica.CropParameters_pc_BeginSensitivePhaseHeatStress_get, _monica.CropParameters_pc_BeginSensitivePhaseHeatStress_set)
    __swig_setmethods__["pc_EndSensitivePhaseHeatStress"] = _monica.CropParameters_pc_EndSensitivePhaseHeatStress_set
    __swig_getmethods__["pc_EndSensitivePhaseHeatStress"] = _monica.CropParameters_pc_EndSensitivePhaseHeatStress_get
    if _newclass:pc_EndSensitivePhaseHeatStress = _swig_property(_monica.CropParameters_pc_EndSensitivePhaseHeatStress_get, _monica.CropParameters_pc_EndSensitivePhaseHeatStress_set)
    __swig_setmethods__["pc_CuttingDelayDays"] = _monica.CropParameters_pc_CuttingDelayDays_set
    __swig_getmethods__["pc_CuttingDelayDays"] = _monica.CropParameters_pc_CuttingDelayDays_get
    if _newclass:pc_CuttingDelayDays = _swig_property(_monica.CropParameters_pc_CuttingDelayDays_get, _monica.CropParameters_pc_CuttingDelayDays_set)
    __swig_setmethods__["pc_DroughtImpactOnFertilityFactor"] = _monica.CropParameters_pc_DroughtImpactOnFertilityFactor_set
    __swig_getmethods__["pc_DroughtImpactOnFertilityFactor"] = _monica.CropParameters_pc_DroughtImpactOnFertilityFactor_get
    if _newclass:pc_DroughtImpactOnFertilityFactor = _swig_property(_monica.CropParameters_pc_DroughtImpactOnFertilityFactor_get, _monica.CropParameters_pc_DroughtImpactOnFertilityFactor_set)
    __swig_setmethods__["pc_OrganIdsForPrimaryYield"] = _monica.CropParameters_pc_OrganIdsForPrimaryYield_set
    __swig_getmethods__["pc_OrganIdsForPrimaryYield"] = _monica.CropParameters_pc_OrganIdsForPrimaryYield_get
    if _newclass:pc_OrganIdsForPrimaryYield = _swig_property(_monica.CropParameters_pc_OrganIdsForPrimaryYield_get, _monica.CropParameters_pc_OrganIdsForPrimaryYield_set)
    __swig_setmethods__["pc_OrganIdsForSecondaryYield"] = _monica.CropParameters_pc_OrganIdsForSecondaryYield_set
    __swig_getmethods__["pc_OrganIdsForSecondaryYield"] = _monica.CropParameters_pc_OrganIdsForSecondaryYield_get
    if _newclass:pc_OrganIdsForSecondaryYield = _swig_property(_monica.CropParameters_pc_OrganIdsForSecondaryYield_get, _monica.CropParameters_pc_OrganIdsForSecondaryYield_set)
    __swig_setmethods__["pc_OrganIdsForCutting"] = _monica.CropParameters_pc_OrganIdsForCutting_set
    __swig_getmethods__["pc_OrganIdsForCutting"] = _monica.CropParameters_pc_OrganIdsForCutting_get
    if _newclass:pc_OrganIdsForCutting = _swig_property(_monica.CropParameters_pc_OrganIdsForCutting_get, _monica.CropParameters_pc_OrganIdsForCutting_set)
    __swig_destroy__ = _monica.delete_CropParameters
    __del__ = lambda self : None;
CropParameters_swigregister = _monica.CropParameters_swigregister
CropParameters_swigregister(CropParameters)


def getCropParametersFromMonicaDB(*args):
  return _monica.getCropParametersFromMonicaDB(*args)
getCropParametersFromMonicaDB = _monica.getCropParametersFromMonicaDB
class GeneralParameters(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GeneralParameters, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GeneralParameters, name)
    __repr__ = _swig_repr
    def __init__(self, ps_LayerThickness=0.1, ps_ProfileDepth=2.0, ps_MaximumMineralisationDepth=0.4, pc_NitrogenResponseOn=True, 
    pc_WaterDeficitResponseOn=True, pc_EmergenceFloodingControlOn=True, 
    pc_EmergenceMoistureControlOn=True): 
        this = _monica.new_GeneralParameters(ps_LayerThickness, ps_ProfileDepth, ps_MaximumMineralisationDepth, pc_NitrogenResponseOn, 
    pc_WaterDeficitResponseOn, pc_EmergenceFloodingControlOn, pc_EmergenceMoistureControlOn)
        try: self.this.append(this)
        except: self.this = this
    def ps_NumberOfLayers(self): return _monica.GeneralParameters_ps_NumberOfLayers(self)
    __swig_setmethods__["ps_LayerThickness"] = _monica.GeneralParameters_ps_LayerThickness_set
    __swig_getmethods__["ps_LayerThickness"] = _monica.GeneralParameters_ps_LayerThickness_get
    if _newclass:ps_LayerThickness = _swig_property(_monica.GeneralParameters_ps_LayerThickness_get, _monica.GeneralParameters_ps_LayerThickness_set)
    __swig_setmethods__["ps_ProfileDepth"] = _monica.GeneralParameters_ps_ProfileDepth_set
    __swig_getmethods__["ps_ProfileDepth"] = _monica.GeneralParameters_ps_ProfileDepth_get
    if _newclass:ps_ProfileDepth = _swig_property(_monica.GeneralParameters_ps_ProfileDepth_get, _monica.GeneralParameters_ps_ProfileDepth_set)
    __swig_setmethods__["ps_MaxMineralisationDepth"] = _monica.GeneralParameters_ps_MaxMineralisationDepth_set
    __swig_getmethods__["ps_MaxMineralisationDepth"] = _monica.GeneralParameters_ps_MaxMineralisationDepth_get
    if _newclass:ps_MaxMineralisationDepth = _swig_property(_monica.GeneralParameters_ps_MaxMineralisationDepth_get, _monica.GeneralParameters_ps_MaxMineralisationDepth_set)
    __swig_setmethods__["pc_NitrogenResponseOn"] = _monica.GeneralParameters_pc_NitrogenResponseOn_set
    __swig_getmethods__["pc_NitrogenResponseOn"] = _monica.GeneralParameters_pc_NitrogenResponseOn_get
    if _newclass:pc_NitrogenResponseOn = _swig_property(_monica.GeneralParameters_pc_NitrogenResponseOn_get, _monica.GeneralParameters_pc_NitrogenResponseOn_set)
    __swig_setmethods__["pc_WaterDeficitResponseOn"] = _monica.GeneralParameters_pc_WaterDeficitResponseOn_set
    __swig_getmethods__["pc_WaterDeficitResponseOn"] = _monica.GeneralParameters_pc_WaterDeficitResponseOn_get
    if _newclass:pc_WaterDeficitResponseOn = _swig_property(_monica.GeneralParameters_pc_WaterDeficitResponseOn_get, _monica.GeneralParameters_pc_WaterDeficitResponseOn_set)
    __swig_setmethods__["pc_EmergenceFloodingControlOn"] = _monica.GeneralParameters_pc_EmergenceFloodingControlOn_set
    __swig_getmethods__["pc_EmergenceFloodingControlOn"] = _monica.GeneralParameters_pc_EmergenceFloodingControlOn_get
    if _newclass:pc_EmergenceFloodingControlOn = _swig_property(_monica.GeneralParameters_pc_EmergenceFloodingControlOn_get, _monica.GeneralParameters_pc_EmergenceFloodingControlOn_set)
    __swig_setmethods__["pc_EmergenceMoistureControlOn"] = _monica.GeneralParameters_pc_EmergenceMoistureControlOn_set
    __swig_getmethods__["pc_EmergenceMoistureControlOn"] = _monica.GeneralParameters_pc_EmergenceMoistureControlOn_get
    if _newclass:pc_EmergenceMoistureControlOn = _swig_property(_monica.GeneralParameters_pc_EmergenceMoistureControlOn_get, _monica.GeneralParameters_pc_EmergenceMoistureControlOn_set)
    __swig_destroy__ = _monica.delete_GeneralParameters
    __del__ = lambda self : None;
GeneralParameters_swigregister = _monica.GeneralParameters_swigregister
GeneralParameters_swigregister(GeneralParameters)

class SiteParameters(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SiteParameters, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SiteParameters, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _monica.new_SiteParameters()
        try: self.this.append(this)
        except: self.this = this
    __swig_setmethods__["vs_Latitude"] = _monica.SiteParameters_vs_Latitude_set
    __swig_getmethods__["vs_Latitude"] = _monica.SiteParameters_vs_Latitude_get
    if _newclass:vs_Latitude = _swig_property(_monica.SiteParameters_vs_Latitude_get, _monica.SiteParameters_vs_Latitude_set)
    __swig_setmethods__["vs_Slope"] = _monica.SiteParameters_vs_Slope_set
    __swig_getmethods__["vs_Slope"] = _monica.SiteParameters_vs_Slope_get
    if _newclass:vs_Slope = _swig_property(_monica.SiteParameters_vs_Slope_get, _monica.SiteParameters_vs_Slope_set)
    __swig_setmethods__["vs_HeightNN"] = _monica.SiteParameters_vs_HeightNN_set
    __swig_getmethods__["vs_HeightNN"] = _monica.SiteParameters_vs_HeightNN_get
    if _newclass:vs_HeightNN = _swig_property(_monica.SiteParameters_vs_HeightNN_get, _monica.SiteParameters_vs_HeightNN_set)
    __swig_setmethods__["vs_GroundwaterDepth"] = _monica.SiteParameters_vs_GroundwaterDepth_set
    __swig_getmethods__["vs_GroundwaterDepth"] = _monica.SiteParameters_vs_GroundwaterDepth_get
    if _newclass:vs_GroundwaterDepth = _swig_property(_monica.SiteParameters_vs_GroundwaterDepth_get, _monica.SiteParameters_vs_GroundwaterDepth_set)
    __swig_setmethods__["vs_Soil_CN_Ratio"] = _monica.SiteParameters_vs_Soil_CN_Ratio_set
    __swig_getmethods__["vs_Soil_CN_Ratio"] = _monica.SiteParameters_vs_Soil_CN_Ratio_get
    if _newclass:vs_Soil_CN_Ratio = _swig_property(_monica.SiteParameters_vs_Soil_CN_Ratio_get, _monica.SiteParameters_vs_Soil_CN_Ratio_set)
    __swig_setmethods__["vs_DrainageCoeff"] = _monica.SiteParameters_vs_DrainageCoeff_set
    __swig_getmethods__["vs_DrainageCoeff"] = _monica.SiteParameters_vs_DrainageCoeff_get
    if _newclass:vs_DrainageCoeff = _swig_property(_monica.SiteParameters_vs_DrainageCoeff_get, _monica.SiteParameters_vs_DrainageCoeff_set)
    __swig_setmethods__["vq_NDeposition"] = _monica.SiteParameters_vq_NDeposition_set
    __swig_getmethods__["vq_NDeposition"] = _monica.SiteParameters_vq_NDeposition_get
    if _newclass:vq_NDeposition = _swig_property(_monica.SiteParameters_vq_NDeposition_get, _monica.SiteParameters_vq_NDeposition_set)
    __swig_setmethods__["vs_MaxEffectiveRootingDepth"] = _monica.SiteParameters_vs_MaxEffectiveRootingDepth_set
    __swig_getmethods__["vs_MaxEffectiveRootingDepth"] = _monica.SiteParameters_vs_MaxEffectiveRootingDepth_get
    if _newclass:vs_MaxEffectiveRootingDepth = _swig_property(_monica.SiteParameters_vs_MaxEffectiveRootingDepth_get, _monica.SiteParameters_vs_MaxEffectiveRootingDepth_set)
    def toString(self): return _monica.SiteParameters_toString(self)
    __swig_destroy__ = _monica.delete_SiteParameters
    __del__ = lambda self : None;
SiteParameters_swigregister = _monica.SiteParameters_swigregister
SiteParameters_swigregister(SiteParameters)

class AutomaticHarvestParameters(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, AutomaticHarvestParameters, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, AutomaticHarvestParameters, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _monica.new_AutomaticHarvestParameters(*args)
        try: self.this.append(this)
        except: self.this = this
    def setHarvestTime(self, *args): return _monica.AutomaticHarvestParameters_setHarvestTime(self, *args)
    def getHarvestTime(self): return _monica.AutomaticHarvestParameters_getHarvestTime(self)
    def setLatestHarvestDOY(self, *args): return _monica.AutomaticHarvestParameters_setLatestHarvestDOY(self, *args)
    def getLatestHarvestDOY(self): return _monica.AutomaticHarvestParameters_getLatestHarvestDOY(self)
    def toString(self): return _monica.AutomaticHarvestParameters_toString(self)
    __swig_destroy__ = _monica.delete_AutomaticHarvestParameters
    __del__ = lambda self : None;
AutomaticHarvestParameters_swigregister = _monica.AutomaticHarvestParameters_swigregister
AutomaticHarvestParameters_swigregister(AutomaticHarvestParameters)

class Crop(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Crop, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Crop, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _monica.new_Crop(*args)
        try: self.this.append(this)
        except: self.this = this
    def id(self): return _monica.Crop_id(self)
    def name(self): return _monica.Crop_name(self)
    def isValid(self): return _monica.Crop_isValid(self)
    def cropParameters(self): return _monica.Crop_cropParameters(self)
    def perennialCropParameters(self): return _monica.Crop_perennialCropParameters(self)
    def setCropParameters(self, *args): return _monica.Crop_setCropParameters(self, *args)
    def setPerennialCropParameters(self, *args): return _monica.Crop_setPerennialCropParameters(self, *args)
    def residueParameters(self): return _monica.Crop_residueParameters(self)
    def setResidueParameters(self, *args): return _monica.Crop_setResidueParameters(self, *args)
    def seedDate(self): return _monica.Crop_seedDate(self)
    def harvestDate(self): return _monica.Crop_harvestDate(self)
    def getCuttingDates(self): return _monica.Crop_getCuttingDates(self)
    def setSeedAndHarvestDate(self, *args): return _monica.Crop_setSeedAndHarvestDate(self, *args)
    def addCuttingDate(self, *args): return _monica.Crop_addCuttingDate(self, *args)
    def toString(self, detailed=False): return _monica.Crop_toString(self, detailed)
    def setHarvestYields(self, *args): return _monica.Crop_setHarvestYields(self, *args)
    def setHarvestYieldsTM(self, *args): return _monica.Crop_setHarvestYieldsTM(self, *args)
    def setYieldNContent(self, *args): return _monica.Crop_setYieldNContent(self, *args)
    def addAppliedIrrigationWater(self, *args): return _monica.Crop_addAppliedIrrigationWater(self, *args)
    def setSumTotalNUptake(self, *args): return _monica.Crop_setSumTotalNUptake(self, *args)
    def setCropHeight(self, *args): return _monica.Crop_setCropHeight(self, *args)
    def setAccumulatedETa(self, *args): return _monica.Crop_setAccumulatedETa(self, *args)
    def setAccumulatedTranspiration(self, *args): return _monica.Crop_setAccumulatedTranspiration(self, *args)
    def appliedIrrigationWater(self): return _monica.Crop_appliedIrrigationWater(self)
    def sumTotalNUptake(self): return _monica.Crop_sumTotalNUptake(self)
    def primaryYield(self): return _monica.Crop_primaryYield(self)
    def aboveGroundBiomass(self): return _monica.Crop_aboveGroundBiomass(self)
    def secondaryYield(self): return _monica.Crop_secondaryYield(self)
    def primaryYieldTM(self): return _monica.Crop_primaryYieldTM(self)
    def secondaryYieldTM(self): return _monica.Crop_secondaryYieldTM(self)
    def primaryYieldN(self): return _monica.Crop_primaryYieldN(self)
    def aboveGroundBiomasseN(self): return _monica.Crop_aboveGroundBiomasseN(self)
    def secondaryYieldN(self): return _monica.Crop_secondaryYieldN(self)
    def cropHeight(self): return _monica.Crop_cropHeight(self)
    def reset(self): return _monica.Crop_reset(self)
    def setEva2TypeUsage(self, *args): return _monica.Crop_setEva2TypeUsage(self, *args)
    def getEva2TypeUsage(self): return _monica.Crop_getEva2TypeUsage(self)
    def get_AccumulatedETa(self): return _monica.Crop_get_AccumulatedETa(self)
    def get_AccumulatedTranspiration(self): return _monica.Crop_get_AccumulatedTranspiration(self)
    def writeCropParameters(self, *args): return _monica.Crop_writeCropParameters(self, *args)
    def setAnthesisDay(self, *args): return _monica.Crop_setAnthesisDay(self, *args)
    def getAnthesisDay(self): return _monica.Crop_getAnthesisDay(self)
    def setMaturityDay(self, *args): return _monica.Crop_setMaturityDay(self, *args)
    def getMaturityDay(self): return _monica.Crop_getMaturityDay(self)
    def useAutomaticHarvestTrigger(self): return _monica.Crop_useAutomaticHarvestTrigger(self)
    def activateAutomaticHarvestTrigger(self, *args): return _monica.Crop_activateAutomaticHarvestTrigger(self, *args)
    def getAutomaticHarvestParams(self): return _monica.Crop_getAutomaticHarvestParams(self)
    __swig_destroy__ = _monica.delete_Crop
    __del__ = lambda self : None;
Crop_swigregister = _monica.Crop_swigregister
Crop_swigregister(Crop)

mineral = _monica.mineral
organic = _monica.organic
undefined = _monica.undefined
class MineralFertiliserParameters(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MineralFertiliserParameters, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MineralFertiliserParameters, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _monica.new_MineralFertiliserParameters(*args)
        try: self.this.append(this)
        except: self.this = this
    def toString(self): return _monica.MineralFertiliserParameters_toString(self)
    def getName(self): return _monica.MineralFertiliserParameters_getName(self)
    def getCarbamid(self): return _monica.MineralFertiliserParameters_getCarbamid(self)
    def getNH4(self): return _monica.MineralFertiliserParameters_getNH4(self)
    def getNO3(self): return _monica.MineralFertiliserParameters_getNO3(self)
    def setName(self, *args): return _monica.MineralFertiliserParameters_setName(self, *args)
    def setCarbamid(self, *args): return _monica.MineralFertiliserParameters_setCarbamid(self, *args)
    def setNH4(self, *args): return _monica.MineralFertiliserParameters_setNH4(self, *args)
    def setNO3(self, *args): return _monica.MineralFertiliserParameters_setNO3(self, *args)
    __swig_destroy__ = _monica.delete_MineralFertiliserParameters
    __del__ = lambda self : None;
MineralFertiliserParameters_swigregister = _monica.MineralFertiliserParameters_swigregister
MineralFertiliserParameters_swigregister(MineralFertiliserParameters)

class WorkStep(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, WorkStep, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, WorkStep, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def date(self): return _monica.WorkStep_date(self)
    def setDate(self, *args): return _monica.WorkStep_setDate(self, *args)
    def apply(self, *args): return _monica.WorkStep_apply(self, *args)
    def toString(self): return _monica.WorkStep_toString(self)
    def clone(self): return _monica.WorkStep_clone(self)
    __swig_destroy__ = _monica.delete_WorkStep
    __del__ = lambda self : None;
WorkStep_swigregister = _monica.WorkStep_swigregister
WorkStep_swigregister(WorkStep)

class Seed(WorkStep):
    __swig_setmethods__ = {}
    for _s in [WorkStep]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Seed, name, value)
    __swig_getmethods__ = {}
    for _s in [WorkStep]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Seed, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _monica.new_Seed(*args)
        try: self.this.append(this)
        except: self.this = this
    def apply(self, *args): return _monica.Seed_apply(self, *args)
    def setDate(self, *args): return _monica.Seed_setDate(self, *args)
    def toString(self): return _monica.Seed_toString(self)
    def clone(self): return _monica.Seed_clone(self)
    __swig_destroy__ = _monica.delete_Seed
    __del__ = lambda self : None;
Seed_swigregister = _monica.Seed_swigregister
Seed_swigregister(Seed)

class Harvest(WorkStep):
    __swig_setmethods__ = {}
    for _s in [WorkStep]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Harvest, name, value)
    __swig_getmethods__ = {}
    for _s in [WorkStep]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Harvest, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _monica.new_Harvest(*args)
        try: self.this.append(this)
        except: self.this = this
    def apply(self, *args): return _monica.Harvest_apply(self, *args)
    def setDate(self, *args): return _monica.Harvest_setDate(self, *args)
    def setPercentage(self, *args): return _monica.Harvest_setPercentage(self, *args)
    def setExported(self, *args): return _monica.Harvest_setExported(self, *args)
    def toString(self): return _monica.Harvest_toString(self)
    def clone(self): return _monica.Harvest_clone(self)
    __swig_destroy__ = _monica.delete_Harvest
    __del__ = lambda self : None;
Harvest_swigregister = _monica.Harvest_swigregister
Harvest_swigregister(Harvest)

class Cutting(WorkStep):
    __swig_setmethods__ = {}
    for _s in [WorkStep]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Cutting, name, value)
    __swig_getmethods__ = {}
    for _s in [WorkStep]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Cutting, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _monica.new_Cutting(*args)
        try: self.this.append(this)
        except: self.this = this
    def apply(self, *args): return _monica.Cutting_apply(self, *args)
    def toString(self): return _monica.Cutting_toString(self)
    def clone(self): return _monica.Cutting_clone(self)
    __swig_destroy__ = _monica.delete_Cutting
    __del__ = lambda self : None;
Cutting_swigregister = _monica.Cutting_swigregister
Cutting_swigregister(Cutting)

class NMinCropParameters(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NMinCropParameters, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NMinCropParameters, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _monica.new_NMinCropParameters(*args)
        try: self.this.append(this)
        except: self.this = this
    def toString(self): return _monica.NMinCropParameters_toString(self)
    __swig_setmethods__["samplingDepth"] = _monica.NMinCropParameters_samplingDepth_set
    __swig_getmethods__["samplingDepth"] = _monica.NMinCropParameters_samplingDepth_get
    if _newclass:samplingDepth = _swig_property(_monica.NMinCropParameters_samplingDepth_get, _monica.NMinCropParameters_samplingDepth_set)
    __swig_setmethods__["nTarget"] = _monica.NMinCropParameters_nTarget_set
    __swig_getmethods__["nTarget"] = _monica.NMinCropParameters_nTarget_get
    if _newclass:nTarget = _swig_property(_monica.NMinCropParameters_nTarget_get, _monica.NMinCropParameters_nTarget_set)
    __swig_setmethods__["nTarget30"] = _monica.NMinCropParameters_nTarget30_set
    __swig_getmethods__["nTarget30"] = _monica.NMinCropParameters_nTarget30_get
    if _newclass:nTarget30 = _swig_property(_monica.NMinCropParameters_nTarget30_get, _monica.NMinCropParameters_nTarget30_set)
    __swig_destroy__ = _monica.delete_NMinCropParameters
    __del__ = lambda self : None;
NMinCropParameters_swigregister = _monica.NMinCropParameters_swigregister
NMinCropParameters_swigregister(NMinCropParameters)

class NMinUserParameters(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NMinUserParameters, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NMinUserParameters, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _monica.new_NMinUserParameters(*args)
        try: self.this.append(this)
        except: self.this = this
    def toString(self): return _monica.NMinUserParameters_toString(self)
    __swig_setmethods__["min"] = _monica.NMinUserParameters_min_set
    __swig_getmethods__["min"] = _monica.NMinUserParameters_min_get
    if _newclass:min = _swig_property(_monica.NMinUserParameters_min_get, _monica.NMinUserParameters_min_set)
    __swig_setmethods__["max"] = _monica.NMinUserParameters_max_set
    __swig_getmethods__["max"] = _monica.NMinUserParameters_max_get
    if _newclass:max = _swig_property(_monica.NMinUserParameters_max_get, _monica.NMinUserParameters_max_set)
    __swig_setmethods__["delayInDays"] = _monica.NMinUserParameters_delayInDays_set
    __swig_getmethods__["delayInDays"] = _monica.NMinUserParameters_delayInDays_get
    if _newclass:delayInDays = _swig_property(_monica.NMinUserParameters_delayInDays_get, _monica.NMinUserParameters_delayInDays_set)
    __swig_destroy__ = _monica.delete_NMinUserParameters
    __del__ = lambda self : None;
NMinUserParameters_swigregister = _monica.NMinUserParameters_swigregister
NMinUserParameters_swigregister(NMinUserParameters)

class MineralFertiliserApplication(WorkStep):
    __swig_setmethods__ = {}
    for _s in [WorkStep]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, MineralFertiliserApplication, name, value)
    __swig_getmethods__ = {}
    for _s in [WorkStep]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, MineralFertiliserApplication, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _monica.new_MineralFertiliserApplication(*args)
        try: self.this.append(this)
        except: self.this = this
    def apply(self, *args): return _monica.MineralFertiliserApplication_apply(self, *args)
    def partition(self): return _monica.MineralFertiliserApplication_partition(self)
    def amount(self): return _monica.MineralFertiliserApplication_amount(self)
    def toString(self): return _monica.MineralFertiliserApplication_toString(self)
    def clone(self): return _monica.MineralFertiliserApplication_clone(self)
    __swig_destroy__ = _monica.delete_MineralFertiliserApplication
    __del__ = lambda self : None;
MineralFertiliserApplication_swigregister = _monica.MineralFertiliserApplication_swigregister
MineralFertiliserApplication_swigregister(MineralFertiliserApplication)

class OrganicFertiliserApplication(WorkStep):
    __swig_setmethods__ = {}
    for _s in [WorkStep]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, OrganicFertiliserApplication, name, value)
    __swig_getmethods__ = {}
    for _s in [WorkStep]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, OrganicFertiliserApplication, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _monica.new_OrganicFertiliserApplication(*args)
        try: self.this.append(this)
        except: self.this = this
    def apply(self, *args): return _monica.OrganicFertiliserApplication_apply(self, *args)
    def parameters(self): return _monica.OrganicFertiliserApplication_parameters(self)
    def amount(self): return _monica.OrganicFertiliserApplication_amount(self)
    def incorporation(self): return _monica.OrganicFertiliserApplication_incorporation(self)
    def toString(self): return _monica.OrganicFertiliserApplication_toString(self)
    def clone(self): return _monica.OrganicFertiliserApplication_clone(self)
    __swig_destroy__ = _monica.delete_OrganicFertiliserApplication
    __del__ = lambda self : None;
OrganicFertiliserApplication_swigregister = _monica.OrganicFertiliserApplication_swigregister
OrganicFertiliserApplication_swigregister(OrganicFertiliserApplication)

class TillageApplication(WorkStep):
    __swig_setmethods__ = {}
    for _s in [WorkStep]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, TillageApplication, name, value)
    __swig_getmethods__ = {}
    for _s in [WorkStep]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, TillageApplication, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _monica.new_TillageApplication(*args)
        try: self.this.append(this)
        except: self.this = this
    def apply(self, *args): return _monica.TillageApplication_apply(self, *args)
    def depth(self): return _monica.TillageApplication_depth(self)
    def toString(self): return _monica.TillageApplication_toString(self)
    def clone(self): return _monica.TillageApplication_clone(self)
    __swig_destroy__ = _monica.delete_TillageApplication
    __del__ = lambda self : None;
TillageApplication_swigregister = _monica.TillageApplication_swigregister
TillageApplication_swigregister(TillageApplication)

class IrrigationParameters(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IrrigationParameters, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IrrigationParameters, name)
    __repr__ = _swig_repr
    def __init__(self, nitrateConcentration=0, sulfateConcentration=0): 
        this = _monica.new_IrrigationParameters(nitrateConcentration, sulfateConcentration)
        try: self.this.append(this)
        except: self.this = this
    __swig_setmethods__["nitrateConcentration"] = _monica.IrrigationParameters_nitrateConcentration_set
    __swig_getmethods__["nitrateConcentration"] = _monica.IrrigationParameters_nitrateConcentration_get
    if _newclass:nitrateConcentration = _swig_property(_monica.IrrigationParameters_nitrateConcentration_get, _monica.IrrigationParameters_nitrateConcentration_set)
    __swig_setmethods__["sulfateConcentration"] = _monica.IrrigationParameters_sulfateConcentration_set
    __swig_getmethods__["sulfateConcentration"] = _monica.IrrigationParameters_sulfateConcentration_get
    if _newclass:sulfateConcentration = _swig_property(_monica.IrrigationParameters_sulfateConcentration_get, _monica.IrrigationParameters_sulfateConcentration_set)
    def toString(self): return _monica.IrrigationParameters_toString(self)
    __swig_destroy__ = _monica.delete_IrrigationParameters
    __del__ = lambda self : None;
IrrigationParameters_swigregister = _monica.IrrigationParameters_swigregister
IrrigationParameters_swigregister(IrrigationParameters)

class AutomaticIrrigationParameters(IrrigationParameters):
    __swig_setmethods__ = {}
    for _s in [IrrigationParameters]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, AutomaticIrrigationParameters, name, value)
    __swig_getmethods__ = {}
    for _s in [IrrigationParameters]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, AutomaticIrrigationParameters, name)
    __repr__ = _swig_repr
    def __init__(self, amount=17, treshold=0.35, nitrateConcentration=0, sulfateConcentration=0): 
        this = _monica.new_AutomaticIrrigationParameters(amount, treshold, nitrateConcentration, sulfateConcentration)
        try: self.this.append(this)
        except: self.this = this
    __swig_setmethods__["amount"] = _monica.AutomaticIrrigationParameters_amount_set
    __swig_getmethods__["amount"] = _monica.AutomaticIrrigationParameters_amount_get
    if _newclass:amount = _swig_property(_monica.AutomaticIrrigationParameters_amount_get, _monica.AutomaticIrrigationParameters_amount_set)
    __swig_setmethods__["treshold"] = _monica.AutomaticIrrigationParameters_treshold_set
    __swig_getmethods__["treshold"] = _monica.AutomaticIrrigationParameters_treshold_get
    if _newclass:treshold = _swig_property(_monica.AutomaticIrrigationParameters_treshold_get, _monica.AutomaticIrrigationParameters_treshold_set)
    def toString(self): return _monica.AutomaticIrrigationParameters_toString(self)
    __swig_destroy__ = _monica.delete_AutomaticIrrigationParameters
    __del__ = lambda self : None;
AutomaticIrrigationParameters_swigregister = _monica.AutomaticIrrigationParameters_swigregister
AutomaticIrrigationParameters_swigregister(AutomaticIrrigationParameters)

class IrrigationApplication(WorkStep):
    __swig_setmethods__ = {}
    for _s in [WorkStep]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IrrigationApplication, name, value)
    __swig_getmethods__ = {}
    for _s in [WorkStep]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, IrrigationApplication, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _monica.new_IrrigationApplication(*args)
        try: self.this.append(this)
        except: self.this = this
    def apply(self, *args): return _monica.IrrigationApplication_apply(self, *args)
    def amount(self): return _monica.IrrigationApplication_amount(self)
    def nitrateConcentration(self): return _monica.IrrigationApplication_nitrateConcentration(self)
    def sulfateConcentration(self): return _monica.IrrigationApplication_sulfateConcentration(self)
    def toString(self): return _monica.IrrigationApplication_toString(self)
    def clone(self): return _monica.IrrigationApplication_clone(self)
    __swig_destroy__ = _monica.delete_IrrigationApplication
    __del__ = lambda self : None;
IrrigationApplication_swigregister = _monica.IrrigationApplication_swigregister
IrrigationApplication_swigregister(IrrigationApplication)

class MeasuredGroundwaterTableInformation(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MeasuredGroundwaterTableInformation, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MeasuredGroundwaterTableInformation, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _monica.new_MeasuredGroundwaterTableInformation()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _monica.delete_MeasuredGroundwaterTableInformation
    __del__ = lambda self : None;
    def readInGroundwaterInformation(self, *args): return _monica.MeasuredGroundwaterTableInformation_readInGroundwaterInformation(self, *args)
    def getGroundwaterInformation(self, *args): return _monica.MeasuredGroundwaterTableInformation_getGroundwaterInformation(self, *args)
    def isGroundwaterInformationAvailable(self): return _monica.MeasuredGroundwaterTableInformation_isGroundwaterInformationAvailable(self)
MeasuredGroundwaterTableInformation_swigregister = _monica.MeasuredGroundwaterTableInformation_swigregister
MeasuredGroundwaterTableInformation_swigregister(MeasuredGroundwaterTableInformation)

class ProductionProcess(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ProductionProcess, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ProductionProcess, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _monica.new_ProductionProcess(*args)
        try: self.this.append(this)
        except: self.this = this
    def deepCloneAndClearWorksteps(self): return _monica.ProductionProcess_deepCloneAndClearWorksteps(self)
    def addApplication(self, *args): return _monica.ProductionProcess_addApplication(self, *args)
    def apply(self, *args): return _monica.ProductionProcess_apply(self, *args)
    def nextDate(self, *args): return _monica.ProductionProcess_nextDate(self, *args)
    def name(self): return _monica.ProductionProcess_name(self)
    def crop(self): return _monica.ProductionProcess_crop(self)
    def isFallow(self): return _monica.ProductionProcess_isFallow(self)
    def start(self): return _monica.ProductionProcess_start(self)
    def end(self): return _monica.ProductionProcess_end(self)
    def getWorksteps(self): return _monica.ProductionProcess_getWorksteps(self)
    def clearWorksteps(self): return _monica.ProductionProcess_clearWorksteps(self)
    def toString(self): return _monica.ProductionProcess_toString(self)
    def cropResult(self): return _monica.ProductionProcess_cropResult(self)
    def cropResultPtr(self): return _monica.ProductionProcess_cropResultPtr(self)
    def setCustomId(self, *args): return _monica.ProductionProcess_setCustomId(self, *args)
    def customId(self): return _monica.ProductionProcess_customId(self)
    __swig_destroy__ = _monica.delete_ProductionProcess
    __del__ = lambda self : None;
ProductionProcess_swigregister = _monica.ProductionProcess_swigregister
ProductionProcess_swigregister(ProductionProcess)


def getMineralFertiliserParametersFromMonicaDB(*args):
  return _monica.getMineralFertiliserParametersFromMonicaDB(*args)
getMineralFertiliserParametersFromMonicaDB = _monica.getMineralFertiliserParametersFromMonicaDB

def attachFertiliserApplicationsToCropRotation(*args):
  return _monica.attachFertiliserApplicationsToCropRotation(*args)
attachFertiliserApplicationsToCropRotation = _monica.attachFertiliserApplicationsToCropRotation

def attachFertiliserSA(*args):
  return _monica.attachFertiliserSA(*args)
attachFertiliserSA = _monica.attachFertiliserSA

def attachIrrigationApplicationsToCropRotation(*args):
  return _monica.attachIrrigationApplicationsToCropRotation(*args)
attachIrrigationApplicationsToCropRotation = _monica.attachIrrigationApplicationsToCropRotation

def cropRotationFromHermesFile(*args):
  return _monica.cropRotationFromHermesFile(*args)
cropRotationFromHermesFile = _monica.cropRotationFromHermesFile

def climateDataFromHermesFiles(*args):
  return _monica.climateDataFromHermesFiles(*args)
climateDataFromHermesFiles = _monica.climateDataFromHermesFiles
class OrganicMatterParameters(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, OrganicMatterParameters, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, OrganicMatterParameters, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _monica.new_OrganicMatterParameters(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _monica.delete_OrganicMatterParameters
    __del__ = lambda self : None;
    def toString(self): return _monica.OrganicMatterParameters_toString(self)
    __swig_setmethods__["name"] = _monica.OrganicMatterParameters_name_set
    __swig_getmethods__["name"] = _monica.OrganicMatterParameters_name_get
    if _newclass:name = _swig_property(_monica.OrganicMatterParameters_name_get, _monica.OrganicMatterParameters_name_set)
    __swig_setmethods__["vo_AOM_DryMatterContent"] = _monica.OrganicMatterParameters_vo_AOM_DryMatterContent_set
    __swig_getmethods__["vo_AOM_DryMatterContent"] = _monica.OrganicMatterParameters_vo_AOM_DryMatterContent_get
    if _newclass:vo_AOM_DryMatterContent = _swig_property(_monica.OrganicMatterParameters_vo_AOM_DryMatterContent_get, _monica.OrganicMatterParameters_vo_AOM_DryMatterContent_set)
    __swig_setmethods__["vo_AOM_NH4Content"] = _monica.OrganicMatterParameters_vo_AOM_NH4Content_set
    __swig_getmethods__["vo_AOM_NH4Content"] = _monica.OrganicMatterParameters_vo_AOM_NH4Content_get
    if _newclass:vo_AOM_NH4Content = _swig_property(_monica.OrganicMatterParameters_vo_AOM_NH4Content_get, _monica.OrganicMatterParameters_vo_AOM_NH4Content_set)
    __swig_setmethods__["vo_AOM_NO3Content"] = _monica.OrganicMatterParameters_vo_AOM_NO3Content_set
    __swig_getmethods__["vo_AOM_NO3Content"] = _monica.OrganicMatterParameters_vo_AOM_NO3Content_get
    if _newclass:vo_AOM_NO3Content = _swig_property(_monica.OrganicMatterParameters_vo_AOM_NO3Content_get, _monica.OrganicMatterParameters_vo_AOM_NO3Content_set)
    __swig_setmethods__["vo_AOM_CarbamidContent"] = _monica.OrganicMatterParameters_vo_AOM_CarbamidContent_set
    __swig_getmethods__["vo_AOM_CarbamidContent"] = _monica.OrganicMatterParameters_vo_AOM_CarbamidContent_get
    if _newclass:vo_AOM_CarbamidContent = _swig_property(_monica.OrganicMatterParameters_vo_AOM_CarbamidContent_get, _monica.OrganicMatterParameters_vo_AOM_CarbamidContent_set)
    __swig_setmethods__["vo_AOM_SlowDecCoeffStandard"] = _monica.OrganicMatterParameters_vo_AOM_SlowDecCoeffStandard_set
    __swig_getmethods__["vo_AOM_SlowDecCoeffStandard"] = _monica.OrganicMatterParameters_vo_AOM_SlowDecCoeffStandard_get
    if _newclass:vo_AOM_SlowDecCoeffStandard = _swig_property(_monica.OrganicMatterParameters_vo_AOM_SlowDecCoeffStandard_get, _monica.OrganicMatterParameters_vo_AOM_SlowDecCoeffStandard_set)
    __swig_setmethods__["vo_AOM_FastDecCoeffStandard"] = _monica.OrganicMatterParameters_vo_AOM_FastDecCoeffStandard_set
    __swig_getmethods__["vo_AOM_FastDecCoeffStandard"] = _monica.OrganicMatterParameters_vo_AOM_FastDecCoeffStandard_get
    if _newclass:vo_AOM_FastDecCoeffStandard = _swig_property(_monica.OrganicMatterParameters_vo_AOM_FastDecCoeffStandard_get, _monica.OrganicMatterParameters_vo_AOM_FastDecCoeffStandard_set)
    __swig_setmethods__["vo_PartAOM_to_AOM_Slow"] = _monica.OrganicMatterParameters_vo_PartAOM_to_AOM_Slow_set
    __swig_getmethods__["vo_PartAOM_to_AOM_Slow"] = _monica.OrganicMatterParameters_vo_PartAOM_to_AOM_Slow_get
    if _newclass:vo_PartAOM_to_AOM_Slow = _swig_property(_monica.OrganicMatterParameters_vo_PartAOM_to_AOM_Slow_get, _monica.OrganicMatterParameters_vo_PartAOM_to_AOM_Slow_set)
    __swig_setmethods__["vo_PartAOM_to_AOM_Fast"] = _monica.OrganicMatterParameters_vo_PartAOM_to_AOM_Fast_set
    __swig_getmethods__["vo_PartAOM_to_AOM_Fast"] = _monica.OrganicMatterParameters_vo_PartAOM_to_AOM_Fast_get
    if _newclass:vo_PartAOM_to_AOM_Fast = _swig_property(_monica.OrganicMatterParameters_vo_PartAOM_to_AOM_Fast_get, _monica.OrganicMatterParameters_vo_PartAOM_to_AOM_Fast_set)
    __swig_setmethods__["vo_CN_Ratio_AOM_Slow"] = _monica.OrganicMatterParameters_vo_CN_Ratio_AOM_Slow_set
    __swig_getmethods__["vo_CN_Ratio_AOM_Slow"] = _monica.OrganicMatterParameters_vo_CN_Ratio_AOM_Slow_get
    if _newclass:vo_CN_Ratio_AOM_Slow = _swig_property(_monica.OrganicMatterParameters_vo_CN_Ratio_AOM_Slow_get, _monica.OrganicMatterParameters_vo_CN_Ratio_AOM_Slow_set)
    __swig_setmethods__["vo_CN_Ratio_AOM_Fast"] = _monica.OrganicMatterParameters_vo_CN_Ratio_AOM_Fast_set
    __swig_getmethods__["vo_CN_Ratio_AOM_Fast"] = _monica.OrganicMatterParameters_vo_CN_Ratio_AOM_Fast_get
    if _newclass:vo_CN_Ratio_AOM_Fast = _swig_property(_monica.OrganicMatterParameters_vo_CN_Ratio_AOM_Fast_get, _monica.OrganicMatterParameters_vo_CN_Ratio_AOM_Fast_set)
    __swig_setmethods__["vo_PartAOM_Slow_to_SMB_Slow"] = _monica.OrganicMatterParameters_vo_PartAOM_Slow_to_SMB_Slow_set
    __swig_getmethods__["vo_PartAOM_Slow_to_SMB_Slow"] = _monica.OrganicMatterParameters_vo_PartAOM_Slow_to_SMB_Slow_get
    if _newclass:vo_PartAOM_Slow_to_SMB_Slow = _swig_property(_monica.OrganicMatterParameters_vo_PartAOM_Slow_to_SMB_Slow_get, _monica.OrganicMatterParameters_vo_PartAOM_Slow_to_SMB_Slow_set)
    __swig_setmethods__["vo_PartAOM_Slow_to_SMB_Fast"] = _monica.OrganicMatterParameters_vo_PartAOM_Slow_to_SMB_Fast_set
    __swig_getmethods__["vo_PartAOM_Slow_to_SMB_Fast"] = _monica.OrganicMatterParameters_vo_PartAOM_Slow_to_SMB_Fast_get
    if _newclass:vo_PartAOM_Slow_to_SMB_Fast = _swig_property(_monica.OrganicMatterParameters_vo_PartAOM_Slow_to_SMB_Fast_get, _monica.OrganicMatterParameters_vo_PartAOM_Slow_to_SMB_Fast_set)
    __swig_setmethods__["vo_NConcentration"] = _monica.OrganicMatterParameters_vo_NConcentration_set
    __swig_getmethods__["vo_NConcentration"] = _monica.OrganicMatterParameters_vo_NConcentration_get
    if _newclass:vo_NConcentration = _swig_property(_monica.OrganicMatterParameters_vo_NConcentration_get, _monica.OrganicMatterParameters_vo_NConcentration_set)
OrganicMatterParameters_swigregister = _monica.OrganicMatterParameters_swigregister
OrganicMatterParameters_swigregister(OrganicMatterParameters)


def getOrganicFertiliserParametersFromMonicaDB(*args):
  return _monica.getOrganicFertiliserParametersFromMonicaDB(*args)
getOrganicFertiliserParametersFromMonicaDB = _monica.getOrganicFertiliserParametersFromMonicaDB

def getResidueParametersFromMonicaDB(*args):
  return _monica.getResidueParametersFromMonicaDB(*args)
getResidueParametersFromMonicaDB = _monica.getResidueParametersFromMonicaDB
class UserCropParameters(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, UserCropParameters, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, UserCropParameters, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _monica.new_UserCropParameters()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _monica.delete_UserCropParameters
    __del__ = lambda self : None;
    __swig_setmethods__["pc_CanopyReflectionCoefficient"] = _monica.UserCropParameters_pc_CanopyReflectionCoefficient_set
    __swig_getmethods__["pc_CanopyReflectionCoefficient"] = _monica.UserCropParameters_pc_CanopyReflectionCoefficient_get
    if _newclass:pc_CanopyReflectionCoefficient = _swig_property(_monica.UserCropParameters_pc_CanopyReflectionCoefficient_get, _monica.UserCropParameters_pc_CanopyReflectionCoefficient_set)
    __swig_setmethods__["pc_ReferenceMaxAssimilationRate"] = _monica.UserCropParameters_pc_ReferenceMaxAssimilationRate_set
    __swig_getmethods__["pc_ReferenceMaxAssimilationRate"] = _monica.UserCropParameters_pc_ReferenceMaxAssimilationRate_get
    if _newclass:pc_ReferenceMaxAssimilationRate = _swig_property(_monica.UserCropParameters_pc_ReferenceMaxAssimilationRate_get, _monica.UserCropParameters_pc_ReferenceMaxAssimilationRate_set)
    __swig_setmethods__["pc_ReferenceLeafAreaIndex"] = _monica.UserCropParameters_pc_ReferenceLeafAreaIndex_set
    __swig_getmethods__["pc_ReferenceLeafAreaIndex"] = _monica.UserCropParameters_pc_ReferenceLeafAreaIndex_get
    if _newclass:pc_ReferenceLeafAreaIndex = _swig_property(_monica.UserCropParameters_pc_ReferenceLeafAreaIndex_get, _monica.UserCropParameters_pc_ReferenceLeafAreaIndex_set)
    __swig_setmethods__["pc_MaintenanceRespirationParameter1"] = _monica.UserCropParameters_pc_MaintenanceRespirationParameter1_set
    __swig_getmethods__["pc_MaintenanceRespirationParameter1"] = _monica.UserCropParameters_pc_MaintenanceRespirationParameter1_get
    if _newclass:pc_MaintenanceRespirationParameter1 = _swig_property(_monica.UserCropParameters_pc_MaintenanceRespirationParameter1_get, _monica.UserCropParameters_pc_MaintenanceRespirationParameter1_set)
    __swig_setmethods__["pc_MaintenanceRespirationParameter2"] = _monica.UserCropParameters_pc_MaintenanceRespirationParameter2_set
    __swig_getmethods__["pc_MaintenanceRespirationParameter2"] = _monica.UserCropParameters_pc_MaintenanceRespirationParameter2_get
    if _newclass:pc_MaintenanceRespirationParameter2 = _swig_property(_monica.UserCropParameters_pc_MaintenanceRespirationParameter2_get, _monica.UserCropParameters_pc_MaintenanceRespirationParameter2_set)
    __swig_setmethods__["pc_MinimumNConcentrationRoot"] = _monica.UserCropParameters_pc_MinimumNConcentrationRoot_set
    __swig_getmethods__["pc_MinimumNConcentrationRoot"] = _monica.UserCropParameters_pc_MinimumNConcentrationRoot_get
    if _newclass:pc_MinimumNConcentrationRoot = _swig_property(_monica.UserCropParameters_pc_MinimumNConcentrationRoot_get, _monica.UserCropParameters_pc_MinimumNConcentrationRoot_set)
    __swig_setmethods__["pc_MinimumAvailableN"] = _monica.UserCropParameters_pc_MinimumAvailableN_set
    __swig_getmethods__["pc_MinimumAvailableN"] = _monica.UserCropParameters_pc_MinimumAvailableN_get
    if _newclass:pc_MinimumAvailableN = _swig_property(_monica.UserCropParameters_pc_MinimumAvailableN_get, _monica.UserCropParameters_pc_MinimumAvailableN_set)
    __swig_setmethods__["pc_ReferenceAlbedo"] = _monica.UserCropParameters_pc_ReferenceAlbedo_set
    __swig_getmethods__["pc_ReferenceAlbedo"] = _monica.UserCropParameters_pc_ReferenceAlbedo_get
    if _newclass:pc_ReferenceAlbedo = _swig_property(_monica.UserCropParameters_pc_ReferenceAlbedo_get, _monica.UserCropParameters_pc_ReferenceAlbedo_set)
    __swig_setmethods__["pc_StomataConductanceAlpha"] = _monica.UserCropParameters_pc_StomataConductanceAlpha_set
    __swig_getmethods__["pc_StomataConductanceAlpha"] = _monica.UserCropParameters_pc_StomataConductanceAlpha_get
    if _newclass:pc_StomataConductanceAlpha = _swig_property(_monica.UserCropParameters_pc_StomataConductanceAlpha_get, _monica.UserCropParameters_pc_StomataConductanceAlpha_set)
    __swig_setmethods__["pc_SaturationBeta"] = _monica.UserCropParameters_pc_SaturationBeta_set
    __swig_getmethods__["pc_SaturationBeta"] = _monica.UserCropParameters_pc_SaturationBeta_get
    if _newclass:pc_SaturationBeta = _swig_property(_monica.UserCropParameters_pc_SaturationBeta_get, _monica.UserCropParameters_pc_SaturationBeta_set)
    __swig_setmethods__["pc_GrowthRespirationRedux"] = _monica.UserCropParameters_pc_GrowthRespirationRedux_set
    __swig_getmethods__["pc_GrowthRespirationRedux"] = _monica.UserCropParameters_pc_GrowthRespirationRedux_get
    if _newclass:pc_GrowthRespirationRedux = _swig_property(_monica.UserCropParameters_pc_GrowthRespirationRedux_get, _monica.UserCropParameters_pc_GrowthRespirationRedux_set)
    __swig_setmethods__["pc_MaxCropNDemand"] = _monica.UserCropParameters_pc_MaxCropNDemand_set
    __swig_getmethods__["pc_MaxCropNDemand"] = _monica.UserCropParameters_pc_MaxCropNDemand_get
    if _newclass:pc_MaxCropNDemand = _swig_property(_monica.UserCropParameters_pc_MaxCropNDemand_get, _monica.UserCropParameters_pc_MaxCropNDemand_set)
    __swig_setmethods__["pc_GrowthRespirationParameter1"] = _monica.UserCropParameters_pc_GrowthRespirationParameter1_set
    __swig_getmethods__["pc_GrowthRespirationParameter1"] = _monica.UserCropParameters_pc_GrowthRespirationParameter1_get
    if _newclass:pc_GrowthRespirationParameter1 = _swig_property(_monica.UserCropParameters_pc_GrowthRespirationParameter1_get, _monica.UserCropParameters_pc_GrowthRespirationParameter1_set)
    __swig_setmethods__["pc_GrowthRespirationParameter2"] = _monica.UserCropParameters_pc_GrowthRespirationParameter2_set
    __swig_getmethods__["pc_GrowthRespirationParameter2"] = _monica.UserCropParameters_pc_GrowthRespirationParameter2_get
    if _newclass:pc_GrowthRespirationParameter2 = _swig_property(_monica.UserCropParameters_pc_GrowthRespirationParameter2_get, _monica.UserCropParameters_pc_GrowthRespirationParameter2_set)
    __swig_setmethods__["pc_Tortuosity"] = _monica.UserCropParameters_pc_Tortuosity_set
    __swig_getmethods__["pc_Tortuosity"] = _monica.UserCropParameters_pc_Tortuosity_get
    if _newclass:pc_Tortuosity = _swig_property(_monica.UserCropParameters_pc_Tortuosity_get, _monica.UserCropParameters_pc_Tortuosity_set)
UserCropParameters_swigregister = _monica.UserCropParameters_swigregister
UserCropParameters_swigregister(UserCropParameters)

class UserEnvironmentParameters(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, UserEnvironmentParameters, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, UserEnvironmentParameters, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _monica.new_UserEnvironmentParameters()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _monica.delete_UserEnvironmentParameters
    __del__ = lambda self : None;
    __swig_setmethods__["p_UseAutomaticIrrigation"] = _monica.UserEnvironmentParameters_p_UseAutomaticIrrigation_set
    __swig_getmethods__["p_UseAutomaticIrrigation"] = _monica.UserEnvironmentParameters_p_UseAutomaticIrrigation_get
    if _newclass:p_UseAutomaticIrrigation = _swig_property(_monica.UserEnvironmentParameters_p_UseAutomaticIrrigation_get, _monica.UserEnvironmentParameters_p_UseAutomaticIrrigation_set)
    __swig_setmethods__["p_UseNMinMineralFertilisingMethod"] = _monica.UserEnvironmentParameters_p_UseNMinMineralFertilisingMethod_set
    __swig_getmethods__["p_UseNMinMineralFertilisingMethod"] = _monica.UserEnvironmentParameters_p_UseNMinMineralFertilisingMethod_get
    if _newclass:p_UseNMinMineralFertilisingMethod = _swig_property(_monica.UserEnvironmentParameters_p_UseNMinMineralFertilisingMethod_get, _monica.UserEnvironmentParameters_p_UseNMinMineralFertilisingMethod_set)
    __swig_setmethods__["p_UseSecondaryYields"] = _monica.UserEnvironmentParameters_p_UseSecondaryYields_set
    __swig_getmethods__["p_UseSecondaryYields"] = _monica.UserEnvironmentParameters_p_UseSecondaryYields_get
    if _newclass:p_UseSecondaryYields = _swig_property(_monica.UserEnvironmentParameters_p_UseSecondaryYields_get, _monica.UserEnvironmentParameters_p_UseSecondaryYields_set)
    __swig_setmethods__["p_UseAutomaticHarvestTrigger"] = _monica.UserEnvironmentParameters_p_UseAutomaticHarvestTrigger_set
    __swig_getmethods__["p_UseAutomaticHarvestTrigger"] = _monica.UserEnvironmentParameters_p_UseAutomaticHarvestTrigger_get
    if _newclass:p_UseAutomaticHarvestTrigger = _swig_property(_monica.UserEnvironmentParameters_p_UseAutomaticHarvestTrigger_get, _monica.UserEnvironmentParameters_p_UseAutomaticHarvestTrigger_set)
    __swig_setmethods__["p_LayerThickness"] = _monica.UserEnvironmentParameters_p_LayerThickness_set
    __swig_getmethods__["p_LayerThickness"] = _monica.UserEnvironmentParameters_p_LayerThickness_get
    if _newclass:p_LayerThickness = _swig_property(_monica.UserEnvironmentParameters_p_LayerThickness_get, _monica.UserEnvironmentParameters_p_LayerThickness_set)
    __swig_setmethods__["p_Albedo"] = _monica.UserEnvironmentParameters_p_Albedo_set
    __swig_getmethods__["p_Albedo"] = _monica.UserEnvironmentParameters_p_Albedo_get
    if _newclass:p_Albedo = _swig_property(_monica.UserEnvironmentParameters_p_Albedo_get, _monica.UserEnvironmentParameters_p_Albedo_set)
    __swig_setmethods__["p_AthmosphericCO2"] = _monica.UserEnvironmentParameters_p_AthmosphericCO2_set
    __swig_getmethods__["p_AthmosphericCO2"] = _monica.UserEnvironmentParameters_p_AthmosphericCO2_get
    if _newclass:p_AthmosphericCO2 = _swig_property(_monica.UserEnvironmentParameters_p_AthmosphericCO2_get, _monica.UserEnvironmentParameters_p_AthmosphericCO2_set)
    __swig_setmethods__["p_WindSpeedHeight"] = _monica.UserEnvironmentParameters_p_WindSpeedHeight_set
    __swig_getmethods__["p_WindSpeedHeight"] = _monica.UserEnvironmentParameters_p_WindSpeedHeight_get
    if _newclass:p_WindSpeedHeight = _swig_property(_monica.UserEnvironmentParameters_p_WindSpeedHeight_get, _monica.UserEnvironmentParameters_p_WindSpeedHeight_set)
    __swig_setmethods__["p_LeachingDepth"] = _monica.UserEnvironmentParameters_p_LeachingDepth_set
    __swig_getmethods__["p_LeachingDepth"] = _monica.UserEnvironmentParameters_p_LeachingDepth_get
    if _newclass:p_LeachingDepth = _swig_property(_monica.UserEnvironmentParameters_p_LeachingDepth_get, _monica.UserEnvironmentParameters_p_LeachingDepth_set)
    __swig_setmethods__["p_timeStep"] = _monica.UserEnvironmentParameters_p_timeStep_set
    __swig_getmethods__["p_timeStep"] = _monica.UserEnvironmentParameters_p_timeStep_get
    if _newclass:p_timeStep = _swig_property(_monica.UserEnvironmentParameters_p_timeStep_get, _monica.UserEnvironmentParameters_p_timeStep_set)
    __swig_setmethods__["p_MaxGroundwaterDepth"] = _monica.UserEnvironmentParameters_p_MaxGroundwaterDepth_set
    __swig_getmethods__["p_MaxGroundwaterDepth"] = _monica.UserEnvironmentParameters_p_MaxGroundwaterDepth_get
    if _newclass:p_MaxGroundwaterDepth = _swig_property(_monica.UserEnvironmentParameters_p_MaxGroundwaterDepth_get, _monica.UserEnvironmentParameters_p_MaxGroundwaterDepth_set)
    __swig_setmethods__["p_MinGroundwaterDepth"] = _monica.UserEnvironmentParameters_p_MinGroundwaterDepth_set
    __swig_getmethods__["p_MinGroundwaterDepth"] = _monica.UserEnvironmentParameters_p_MinGroundwaterDepth_get
    if _newclass:p_MinGroundwaterDepth = _swig_property(_monica.UserEnvironmentParameters_p_MinGroundwaterDepth_get, _monica.UserEnvironmentParameters_p_MinGroundwaterDepth_set)
    __swig_setmethods__["p_NumberOfLayers"] = _monica.UserEnvironmentParameters_p_NumberOfLayers_set
    __swig_getmethods__["p_NumberOfLayers"] = _monica.UserEnvironmentParameters_p_NumberOfLayers_get
    if _newclass:p_NumberOfLayers = _swig_property(_monica.UserEnvironmentParameters_p_NumberOfLayers_get, _monica.UserEnvironmentParameters_p_NumberOfLayers_set)
    __swig_setmethods__["p_StartPVIndex"] = _monica.UserEnvironmentParameters_p_StartPVIndex_set
    __swig_getmethods__["p_StartPVIndex"] = _monica.UserEnvironmentParameters_p_StartPVIndex_get
    if _newclass:p_StartPVIndex = _swig_property(_monica.UserEnvironmentParameters_p_StartPVIndex_get, _monica.UserEnvironmentParameters_p_StartPVIndex_set)
    __swig_setmethods__["p_JulianDayAutomaticFertilising"] = _monica.UserEnvironmentParameters_p_JulianDayAutomaticFertilising_set
    __swig_getmethods__["p_JulianDayAutomaticFertilising"] = _monica.UserEnvironmentParameters_p_JulianDayAutomaticFertilising_get
    if _newclass:p_JulianDayAutomaticFertilising = _swig_property(_monica.UserEnvironmentParameters_p_JulianDayAutomaticFertilising_get, _monica.UserEnvironmentParameters_p_JulianDayAutomaticFertilising_set)
    __swig_setmethods__["p_MinGroundwaterDepthMonth"] = _monica.UserEnvironmentParameters_p_MinGroundwaterDepthMonth_set
    __swig_getmethods__["p_MinGroundwaterDepthMonth"] = _monica.UserEnvironmentParameters_p_MinGroundwaterDepthMonth_get
    if _newclass:p_MinGroundwaterDepthMonth = _swig_property(_monica.UserEnvironmentParameters_p_MinGroundwaterDepthMonth_get, _monica.UserEnvironmentParameters_p_MinGroundwaterDepthMonth_set)
UserEnvironmentParameters_swigregister = _monica.UserEnvironmentParameters_swigregister
UserEnvironmentParameters_swigregister(UserEnvironmentParameters)

class UserInitialValues(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, UserInitialValues, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, UserInitialValues, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _monica.new_UserInitialValues()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _monica.delete_UserInitialValues
    __del__ = lambda self : None;
    __swig_setmethods__["p_initPercentageFC"] = _monica.UserInitialValues_p_initPercentageFC_set
    __swig_getmethods__["p_initPercentageFC"] = _monica.UserInitialValues_p_initPercentageFC_get
    if _newclass:p_initPercentageFC = _swig_property(_monica.UserInitialValues_p_initPercentageFC_get, _monica.UserInitialValues_p_initPercentageFC_set)
    __swig_setmethods__["p_initSoilNitrate"] = _monica.UserInitialValues_p_initSoilNitrate_set
    __swig_getmethods__["p_initSoilNitrate"] = _monica.UserInitialValues_p_initSoilNitrate_get
    if _newclass:p_initSoilNitrate = _swig_property(_monica.UserInitialValues_p_initSoilNitrate_get, _monica.UserInitialValues_p_initSoilNitrate_set)
    __swig_setmethods__["p_initSoilAmmonium"] = _monica.UserInitialValues_p_initSoilAmmonium_set
    __swig_getmethods__["p_initSoilAmmonium"] = _monica.UserInitialValues_p_initSoilAmmonium_get
    if _newclass:p_initSoilAmmonium = _swig_property(_monica.UserInitialValues_p_initSoilAmmonium_get, _monica.UserInitialValues_p_initSoilAmmonium_set)
UserInitialValues_swigregister = _monica.UserInitialValues_swigregister
UserInitialValues_swigregister(UserInitialValues)

class UserSoilMoistureParameters(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, UserSoilMoistureParameters, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, UserSoilMoistureParameters, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _monica.new_UserSoilMoistureParameters()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _monica.delete_UserSoilMoistureParameters
    __del__ = lambda self : None;
    __swig_setmethods__["pm_CriticalMoistureDepth"] = _monica.UserSoilMoistureParameters_pm_CriticalMoistureDepth_set
    __swig_getmethods__["pm_CriticalMoistureDepth"] = _monica.UserSoilMoistureParameters_pm_CriticalMoistureDepth_get
    if _newclass:pm_CriticalMoistureDepth = _swig_property(_monica.UserSoilMoistureParameters_pm_CriticalMoistureDepth_get, _monica.UserSoilMoistureParameters_pm_CriticalMoistureDepth_set)
    __swig_setmethods__["pm_SaturatedHydraulicConductivity"] = _monica.UserSoilMoistureParameters_pm_SaturatedHydraulicConductivity_set
    __swig_getmethods__["pm_SaturatedHydraulicConductivity"] = _monica.UserSoilMoistureParameters_pm_SaturatedHydraulicConductivity_get
    if _newclass:pm_SaturatedHydraulicConductivity = _swig_property(_monica.UserSoilMoistureParameters_pm_SaturatedHydraulicConductivity_get, _monica.UserSoilMoistureParameters_pm_SaturatedHydraulicConductivity_set)
    __swig_setmethods__["pm_SurfaceRoughness"] = _monica.UserSoilMoistureParameters_pm_SurfaceRoughness_set
    __swig_getmethods__["pm_SurfaceRoughness"] = _monica.UserSoilMoistureParameters_pm_SurfaceRoughness_get
    if _newclass:pm_SurfaceRoughness = _swig_property(_monica.UserSoilMoistureParameters_pm_SurfaceRoughness_get, _monica.UserSoilMoistureParameters_pm_SurfaceRoughness_set)
    __swig_setmethods__["pm_GroundwaterDischarge"] = _monica.UserSoilMoistureParameters_pm_GroundwaterDischarge_set
    __swig_getmethods__["pm_GroundwaterDischarge"] = _monica.UserSoilMoistureParameters_pm_GroundwaterDischarge_get
    if _newclass:pm_GroundwaterDischarge = _swig_property(_monica.UserSoilMoistureParameters_pm_GroundwaterDischarge_get, _monica.UserSoilMoistureParameters_pm_GroundwaterDischarge_set)
    __swig_setmethods__["pm_HydraulicConductivityRedux"] = _monica.UserSoilMoistureParameters_pm_HydraulicConductivityRedux_set
    __swig_getmethods__["pm_HydraulicConductivityRedux"] = _monica.UserSoilMoistureParameters_pm_HydraulicConductivityRedux_get
    if _newclass:pm_HydraulicConductivityRedux = _swig_property(_monica.UserSoilMoistureParameters_pm_HydraulicConductivityRedux_get, _monica.UserSoilMoistureParameters_pm_HydraulicConductivityRedux_set)
    __swig_setmethods__["pm_SnowAccumulationTresholdTemperature"] = _monica.UserSoilMoistureParameters_pm_SnowAccumulationTresholdTemperature_set
    __swig_getmethods__["pm_SnowAccumulationTresholdTemperature"] = _monica.UserSoilMoistureParameters_pm_SnowAccumulationTresholdTemperature_get
    if _newclass:pm_SnowAccumulationTresholdTemperature = _swig_property(_monica.UserSoilMoistureParameters_pm_SnowAccumulationTresholdTemperature_get, _monica.UserSoilMoistureParameters_pm_SnowAccumulationTresholdTemperature_set)
    __swig_setmethods__["pm_KcFactor"] = _monica.UserSoilMoistureParameters_pm_KcFactor_set
    __swig_getmethods__["pm_KcFactor"] = _monica.UserSoilMoistureParameters_pm_KcFactor_get
    if _newclass:pm_KcFactor = _swig_property(_monica.UserSoilMoistureParameters_pm_KcFactor_get, _monica.UserSoilMoistureParameters_pm_KcFactor_set)
    __swig_setmethods__["pm_TemperatureLimitForLiquidWater"] = _monica.UserSoilMoistureParameters_pm_TemperatureLimitForLiquidWater_set
    __swig_getmethods__["pm_TemperatureLimitForLiquidWater"] = _monica.UserSoilMoistureParameters_pm_TemperatureLimitForLiquidWater_get
    if _newclass:pm_TemperatureLimitForLiquidWater = _swig_property(_monica.UserSoilMoistureParameters_pm_TemperatureLimitForLiquidWater_get, _monica.UserSoilMoistureParameters_pm_TemperatureLimitForLiquidWater_set)
    __swig_setmethods__["pm_CorrectionSnow"] = _monica.UserSoilMoistureParameters_pm_CorrectionSnow_set
    __swig_getmethods__["pm_CorrectionSnow"] = _monica.UserSoilMoistureParameters_pm_CorrectionSnow_get
    if _newclass:pm_CorrectionSnow = _swig_property(_monica.UserSoilMoistureParameters_pm_CorrectionSnow_get, _monica.UserSoilMoistureParameters_pm_CorrectionSnow_set)
    __swig_setmethods__["pm_CorrectionRain"] = _monica.UserSoilMoistureParameters_pm_CorrectionRain_set
    __swig_getmethods__["pm_CorrectionRain"] = _monica.UserSoilMoistureParameters_pm_CorrectionRain_get
    if _newclass:pm_CorrectionRain = _swig_property(_monica.UserSoilMoistureParameters_pm_CorrectionRain_get, _monica.UserSoilMoistureParameters_pm_CorrectionRain_set)
    __swig_setmethods__["pm_SnowMaxAdditionalDensity"] = _monica.UserSoilMoistureParameters_pm_SnowMaxAdditionalDensity_set
    __swig_getmethods__["pm_SnowMaxAdditionalDensity"] = _monica.UserSoilMoistureParameters_pm_SnowMaxAdditionalDensity_get
    if _newclass:pm_SnowMaxAdditionalDensity = _swig_property(_monica.UserSoilMoistureParameters_pm_SnowMaxAdditionalDensity_get, _monica.UserSoilMoistureParameters_pm_SnowMaxAdditionalDensity_set)
    __swig_setmethods__["pm_NewSnowDensityMin"] = _monica.UserSoilMoistureParameters_pm_NewSnowDensityMin_set
    __swig_getmethods__["pm_NewSnowDensityMin"] = _monica.UserSoilMoistureParameters_pm_NewSnowDensityMin_get
    if _newclass:pm_NewSnowDensityMin = _swig_property(_monica.UserSoilMoistureParameters_pm_NewSnowDensityMin_get, _monica.UserSoilMoistureParameters_pm_NewSnowDensityMin_set)
    __swig_setmethods__["pm_SnowRetentionCapacityMin"] = _monica.UserSoilMoistureParameters_pm_SnowRetentionCapacityMin_set
    __swig_getmethods__["pm_SnowRetentionCapacityMin"] = _monica.UserSoilMoistureParameters_pm_SnowRetentionCapacityMin_get
    if _newclass:pm_SnowRetentionCapacityMin = _swig_property(_monica.UserSoilMoistureParameters_pm_SnowRetentionCapacityMin_get, _monica.UserSoilMoistureParameters_pm_SnowRetentionCapacityMin_set)
    __swig_setmethods__["pm_RefreezeParameter1"] = _monica.UserSoilMoistureParameters_pm_RefreezeParameter1_set
    __swig_getmethods__["pm_RefreezeParameter1"] = _monica.UserSoilMoistureParameters_pm_RefreezeParameter1_get
    if _newclass:pm_RefreezeParameter1 = _swig_property(_monica.UserSoilMoistureParameters_pm_RefreezeParameter1_get, _monica.UserSoilMoistureParameters_pm_RefreezeParameter1_set)
    __swig_setmethods__["pm_RefreezeParameter2"] = _monica.UserSoilMoistureParameters_pm_RefreezeParameter2_set
    __swig_getmethods__["pm_RefreezeParameter2"] = _monica.UserSoilMoistureParameters_pm_RefreezeParameter2_get
    if _newclass:pm_RefreezeParameter2 = _swig_property(_monica.UserSoilMoistureParameters_pm_RefreezeParameter2_get, _monica.UserSoilMoistureParameters_pm_RefreezeParameter2_set)
    __swig_setmethods__["pm_RefreezeTemperature"] = _monica.UserSoilMoistureParameters_pm_RefreezeTemperature_set
    __swig_getmethods__["pm_RefreezeTemperature"] = _monica.UserSoilMoistureParameters_pm_RefreezeTemperature_get
    if _newclass:pm_RefreezeTemperature = _swig_property(_monica.UserSoilMoistureParameters_pm_RefreezeTemperature_get, _monica.UserSoilMoistureParameters_pm_RefreezeTemperature_set)
    __swig_setmethods__["pm_SnowMeltTemperature"] = _monica.UserSoilMoistureParameters_pm_SnowMeltTemperature_set
    __swig_getmethods__["pm_SnowMeltTemperature"] = _monica.UserSoilMoistureParameters_pm_SnowMeltTemperature_get
    if _newclass:pm_SnowMeltTemperature = _swig_property(_monica.UserSoilMoistureParameters_pm_SnowMeltTemperature_get, _monica.UserSoilMoistureParameters_pm_SnowMeltTemperature_set)
    __swig_setmethods__["pm_SnowPacking"] = _monica.UserSoilMoistureParameters_pm_SnowPacking_set
    __swig_getmethods__["pm_SnowPacking"] = _monica.UserSoilMoistureParameters_pm_SnowPacking_get
    if _newclass:pm_SnowPacking = _swig_property(_monica.UserSoilMoistureParameters_pm_SnowPacking_get, _monica.UserSoilMoistureParameters_pm_SnowPacking_set)
    __swig_setmethods__["pm_SnowRetentionCapacityMax"] = _monica.UserSoilMoistureParameters_pm_SnowRetentionCapacityMax_set
    __swig_getmethods__["pm_SnowRetentionCapacityMax"] = _monica.UserSoilMoistureParameters_pm_SnowRetentionCapacityMax_get
    if _newclass:pm_SnowRetentionCapacityMax = _swig_property(_monica.UserSoilMoistureParameters_pm_SnowRetentionCapacityMax_get, _monica.UserSoilMoistureParameters_pm_SnowRetentionCapacityMax_set)
    __swig_setmethods__["pm_EvaporationZeta"] = _monica.UserSoilMoistureParameters_pm_EvaporationZeta_set
    __swig_getmethods__["pm_EvaporationZeta"] = _monica.UserSoilMoistureParameters_pm_EvaporationZeta_get
    if _newclass:pm_EvaporationZeta = _swig_property(_monica.UserSoilMoistureParameters_pm_EvaporationZeta_get, _monica.UserSoilMoistureParameters_pm_EvaporationZeta_set)
    __swig_setmethods__["pm_XSACriticalSoilMoisture"] = _monica.UserSoilMoistureParameters_pm_XSACriticalSoilMoisture_set
    __swig_getmethods__["pm_XSACriticalSoilMoisture"] = _monica.UserSoilMoistureParameters_pm_XSACriticalSoilMoisture_get
    if _newclass:pm_XSACriticalSoilMoisture = _swig_property(_monica.UserSoilMoistureParameters_pm_XSACriticalSoilMoisture_get, _monica.UserSoilMoistureParameters_pm_XSACriticalSoilMoisture_set)
    __swig_setmethods__["pm_MaximumEvaporationImpactDepth"] = _monica.UserSoilMoistureParameters_pm_MaximumEvaporationImpactDepth_set
    __swig_getmethods__["pm_MaximumEvaporationImpactDepth"] = _monica.UserSoilMoistureParameters_pm_MaximumEvaporationImpactDepth_get
    if _newclass:pm_MaximumEvaporationImpactDepth = _swig_property(_monica.UserSoilMoistureParameters_pm_MaximumEvaporationImpactDepth_get, _monica.UserSoilMoistureParameters_pm_MaximumEvaporationImpactDepth_set)
    __swig_setmethods__["pm_MaxPercolationRate"] = _monica.UserSoilMoistureParameters_pm_MaxPercolationRate_set
    __swig_getmethods__["pm_MaxPercolationRate"] = _monica.UserSoilMoistureParameters_pm_MaxPercolationRate_get
    if _newclass:pm_MaxPercolationRate = _swig_property(_monica.UserSoilMoistureParameters_pm_MaxPercolationRate_get, _monica.UserSoilMoistureParameters_pm_MaxPercolationRate_set)
    __swig_setmethods__["pm_MoistureInitValue"] = _monica.UserSoilMoistureParameters_pm_MoistureInitValue_set
    __swig_getmethods__["pm_MoistureInitValue"] = _monica.UserSoilMoistureParameters_pm_MoistureInitValue_get
    if _newclass:pm_MoistureInitValue = _swig_property(_monica.UserSoilMoistureParameters_pm_MoistureInitValue_get, _monica.UserSoilMoistureParameters_pm_MoistureInitValue_set)
UserSoilMoistureParameters_swigregister = _monica.UserSoilMoistureParameters_swigregister
UserSoilMoistureParameters_swigregister(UserSoilMoistureParameters)

class UserSoilTemperatureParameters(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, UserSoilTemperatureParameters, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, UserSoilTemperatureParameters, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _monica.new_UserSoilTemperatureParameters()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _monica.delete_UserSoilTemperatureParameters
    __del__ = lambda self : None;
    __swig_setmethods__["pt_NTau"] = _monica.UserSoilTemperatureParameters_pt_NTau_set
    __swig_getmethods__["pt_NTau"] = _monica.UserSoilTemperatureParameters_pt_NTau_get
    if _newclass:pt_NTau = _swig_property(_monica.UserSoilTemperatureParameters_pt_NTau_get, _monica.UserSoilTemperatureParameters_pt_NTau_set)
    __swig_setmethods__["pt_InitialSurfaceTemperature"] = _monica.UserSoilTemperatureParameters_pt_InitialSurfaceTemperature_set
    __swig_getmethods__["pt_InitialSurfaceTemperature"] = _monica.UserSoilTemperatureParameters_pt_InitialSurfaceTemperature_get
    if _newclass:pt_InitialSurfaceTemperature = _swig_property(_monica.UserSoilTemperatureParameters_pt_InitialSurfaceTemperature_get, _monica.UserSoilTemperatureParameters_pt_InitialSurfaceTemperature_set)
    __swig_setmethods__["pt_BaseTemperature"] = _monica.UserSoilTemperatureParameters_pt_BaseTemperature_set
    __swig_getmethods__["pt_BaseTemperature"] = _monica.UserSoilTemperatureParameters_pt_BaseTemperature_get
    if _newclass:pt_BaseTemperature = _swig_property(_monica.UserSoilTemperatureParameters_pt_BaseTemperature_get, _monica.UserSoilTemperatureParameters_pt_BaseTemperature_set)
    __swig_setmethods__["pt_QuartzRawDensity"] = _monica.UserSoilTemperatureParameters_pt_QuartzRawDensity_set
    __swig_getmethods__["pt_QuartzRawDensity"] = _monica.UserSoilTemperatureParameters_pt_QuartzRawDensity_get
    if _newclass:pt_QuartzRawDensity = _swig_property(_monica.UserSoilTemperatureParameters_pt_QuartzRawDensity_get, _monica.UserSoilTemperatureParameters_pt_QuartzRawDensity_set)
    __swig_setmethods__["pt_DensityAir"] = _monica.UserSoilTemperatureParameters_pt_DensityAir_set
    __swig_getmethods__["pt_DensityAir"] = _monica.UserSoilTemperatureParameters_pt_DensityAir_get
    if _newclass:pt_DensityAir = _swig_property(_monica.UserSoilTemperatureParameters_pt_DensityAir_get, _monica.UserSoilTemperatureParameters_pt_DensityAir_set)
    __swig_setmethods__["pt_DensityWater"] = _monica.UserSoilTemperatureParameters_pt_DensityWater_set
    __swig_getmethods__["pt_DensityWater"] = _monica.UserSoilTemperatureParameters_pt_DensityWater_get
    if _newclass:pt_DensityWater = _swig_property(_monica.UserSoilTemperatureParameters_pt_DensityWater_get, _monica.UserSoilTemperatureParameters_pt_DensityWater_set)
    __swig_setmethods__["pt_DensityHumus"] = _monica.UserSoilTemperatureParameters_pt_DensityHumus_set
    __swig_getmethods__["pt_DensityHumus"] = _monica.UserSoilTemperatureParameters_pt_DensityHumus_get
    if _newclass:pt_DensityHumus = _swig_property(_monica.UserSoilTemperatureParameters_pt_DensityHumus_get, _monica.UserSoilTemperatureParameters_pt_DensityHumus_set)
    __swig_setmethods__["pt_SpecificHeatCapacityAir"] = _monica.UserSoilTemperatureParameters_pt_SpecificHeatCapacityAir_set
    __swig_getmethods__["pt_SpecificHeatCapacityAir"] = _monica.UserSoilTemperatureParameters_pt_SpecificHeatCapacityAir_get
    if _newclass:pt_SpecificHeatCapacityAir = _swig_property(_monica.UserSoilTemperatureParameters_pt_SpecificHeatCapacityAir_get, _monica.UserSoilTemperatureParameters_pt_SpecificHeatCapacityAir_set)
    __swig_setmethods__["pt_SpecificHeatCapacityQuartz"] = _monica.UserSoilTemperatureParameters_pt_SpecificHeatCapacityQuartz_set
    __swig_getmethods__["pt_SpecificHeatCapacityQuartz"] = _monica.UserSoilTemperatureParameters_pt_SpecificHeatCapacityQuartz_get
    if _newclass:pt_SpecificHeatCapacityQuartz = _swig_property(_monica.UserSoilTemperatureParameters_pt_SpecificHeatCapacityQuartz_get, _monica.UserSoilTemperatureParameters_pt_SpecificHeatCapacityQuartz_set)
    __swig_setmethods__["pt_SpecificHeatCapacityWater"] = _monica.UserSoilTemperatureParameters_pt_SpecificHeatCapacityWater_set
    __swig_getmethods__["pt_SpecificHeatCapacityWater"] = _monica.UserSoilTemperatureParameters_pt_SpecificHeatCapacityWater_get
    if _newclass:pt_SpecificHeatCapacityWater = _swig_property(_monica.UserSoilTemperatureParameters_pt_SpecificHeatCapacityWater_get, _monica.UserSoilTemperatureParameters_pt_SpecificHeatCapacityWater_set)
    __swig_setmethods__["pt_SpecificHeatCapacityHumus"] = _monica.UserSoilTemperatureParameters_pt_SpecificHeatCapacityHumus_set
    __swig_getmethods__["pt_SpecificHeatCapacityHumus"] = _monica.UserSoilTemperatureParameters_pt_SpecificHeatCapacityHumus_get
    if _newclass:pt_SpecificHeatCapacityHumus = _swig_property(_monica.UserSoilTemperatureParameters_pt_SpecificHeatCapacityHumus_get, _monica.UserSoilTemperatureParameters_pt_SpecificHeatCapacityHumus_set)
    __swig_setmethods__["pt_SoilAlbedo"] = _monica.UserSoilTemperatureParameters_pt_SoilAlbedo_set
    __swig_getmethods__["pt_SoilAlbedo"] = _monica.UserSoilTemperatureParameters_pt_SoilAlbedo_get
    if _newclass:pt_SoilAlbedo = _swig_property(_monica.UserSoilTemperatureParameters_pt_SoilAlbedo_get, _monica.UserSoilTemperatureParameters_pt_SoilAlbedo_set)
    __swig_setmethods__["pt_SoilMoisture"] = _monica.UserSoilTemperatureParameters_pt_SoilMoisture_set
    __swig_getmethods__["pt_SoilMoisture"] = _monica.UserSoilTemperatureParameters_pt_SoilMoisture_get
    if _newclass:pt_SoilMoisture = _swig_property(_monica.UserSoilTemperatureParameters_pt_SoilMoisture_get, _monica.UserSoilTemperatureParameters_pt_SoilMoisture_set)
UserSoilTemperatureParameters_swigregister = _monica.UserSoilTemperatureParameters_swigregister
UserSoilTemperatureParameters_swigregister(UserSoilTemperatureParameters)

class UserSoilTransportParameters(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, UserSoilTransportParameters, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, UserSoilTransportParameters, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _monica.new_UserSoilTransportParameters()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _monica.delete_UserSoilTransportParameters
    __del__ = lambda self : None;
    __swig_setmethods__["pq_DispersionLength"] = _monica.UserSoilTransportParameters_pq_DispersionLength_set
    __swig_getmethods__["pq_DispersionLength"] = _monica.UserSoilTransportParameters_pq_DispersionLength_get
    if _newclass:pq_DispersionLength = _swig_property(_monica.UserSoilTransportParameters_pq_DispersionLength_get, _monica.UserSoilTransportParameters_pq_DispersionLength_set)
    __swig_setmethods__["pq_AD"] = _monica.UserSoilTransportParameters_pq_AD_set
    __swig_getmethods__["pq_AD"] = _monica.UserSoilTransportParameters_pq_AD_get
    if _newclass:pq_AD = _swig_property(_monica.UserSoilTransportParameters_pq_AD_get, _monica.UserSoilTransportParameters_pq_AD_set)
    __swig_setmethods__["pq_DiffusionCoefficientStandard"] = _monica.UserSoilTransportParameters_pq_DiffusionCoefficientStandard_set
    __swig_getmethods__["pq_DiffusionCoefficientStandard"] = _monica.UserSoilTransportParameters_pq_DiffusionCoefficientStandard_get
    if _newclass:pq_DiffusionCoefficientStandard = _swig_property(_monica.UserSoilTransportParameters_pq_DiffusionCoefficientStandard_get, _monica.UserSoilTransportParameters_pq_DiffusionCoefficientStandard_set)
    __swig_setmethods__["pq_NDeposition"] = _monica.UserSoilTransportParameters_pq_NDeposition_set
    __swig_getmethods__["pq_NDeposition"] = _monica.UserSoilTransportParameters_pq_NDeposition_get
    if _newclass:pq_NDeposition = _swig_property(_monica.UserSoilTransportParameters_pq_NDeposition_get, _monica.UserSoilTransportParameters_pq_NDeposition_set)
UserSoilTransportParameters_swigregister = _monica.UserSoilTransportParameters_swigregister
UserSoilTransportParameters_swigregister(UserSoilTransportParameters)

class UserSoilOrganicParameters(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, UserSoilOrganicParameters, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, UserSoilOrganicParameters, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _monica.new_UserSoilOrganicParameters()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _monica.delete_UserSoilOrganicParameters
    __del__ = lambda self : None;
    __swig_setmethods__["po_SOM_SlowDecCoeffStandard"] = _monica.UserSoilOrganicParameters_po_SOM_SlowDecCoeffStandard_set
    __swig_getmethods__["po_SOM_SlowDecCoeffStandard"] = _monica.UserSoilOrganicParameters_po_SOM_SlowDecCoeffStandard_get
    if _newclass:po_SOM_SlowDecCoeffStandard = _swig_property(_monica.UserSoilOrganicParameters_po_SOM_SlowDecCoeffStandard_get, _monica.UserSoilOrganicParameters_po_SOM_SlowDecCoeffStandard_set)
    __swig_setmethods__["po_SOM_FastDecCoeffStandard"] = _monica.UserSoilOrganicParameters_po_SOM_FastDecCoeffStandard_set
    __swig_getmethods__["po_SOM_FastDecCoeffStandard"] = _monica.UserSoilOrganicParameters_po_SOM_FastDecCoeffStandard_get
    if _newclass:po_SOM_FastDecCoeffStandard = _swig_property(_monica.UserSoilOrganicParameters_po_SOM_FastDecCoeffStandard_get, _monica.UserSoilOrganicParameters_po_SOM_FastDecCoeffStandard_set)
    __swig_setmethods__["po_SMB_SlowMaintRateStandard"] = _monica.UserSoilOrganicParameters_po_SMB_SlowMaintRateStandard_set
    __swig_getmethods__["po_SMB_SlowMaintRateStandard"] = _monica.UserSoilOrganicParameters_po_SMB_SlowMaintRateStandard_get
    if _newclass:po_SMB_SlowMaintRateStandard = _swig_property(_monica.UserSoilOrganicParameters_po_SMB_SlowMaintRateStandard_get, _monica.UserSoilOrganicParameters_po_SMB_SlowMaintRateStandard_set)
    __swig_setmethods__["po_SMB_FastMaintRateStandard"] = _monica.UserSoilOrganicParameters_po_SMB_FastMaintRateStandard_set
    __swig_getmethods__["po_SMB_FastMaintRateStandard"] = _monica.UserSoilOrganicParameters_po_SMB_FastMaintRateStandard_get
    if _newclass:po_SMB_FastMaintRateStandard = _swig_property(_monica.UserSoilOrganicParameters_po_SMB_FastMaintRateStandard_get, _monica.UserSoilOrganicParameters_po_SMB_FastMaintRateStandard_set)
    __swig_setmethods__["po_SMB_SlowDeathRateStandard"] = _monica.UserSoilOrganicParameters_po_SMB_SlowDeathRateStandard_set
    __swig_getmethods__["po_SMB_SlowDeathRateStandard"] = _monica.UserSoilOrganicParameters_po_SMB_SlowDeathRateStandard_get
    if _newclass:po_SMB_SlowDeathRateStandard = _swig_property(_monica.UserSoilOrganicParameters_po_SMB_SlowDeathRateStandard_get, _monica.UserSoilOrganicParameters_po_SMB_SlowDeathRateStandard_set)
    __swig_setmethods__["po_SMB_FastDeathRateStandard"] = _monica.UserSoilOrganicParameters_po_SMB_FastDeathRateStandard_set
    __swig_getmethods__["po_SMB_FastDeathRateStandard"] = _monica.UserSoilOrganicParameters_po_SMB_FastDeathRateStandard_get
    if _newclass:po_SMB_FastDeathRateStandard = _swig_property(_monica.UserSoilOrganicParameters_po_SMB_FastDeathRateStandard_get, _monica.UserSoilOrganicParameters_po_SMB_FastDeathRateStandard_set)
    __swig_setmethods__["po_SMB_UtilizationEfficiency"] = _monica.UserSoilOrganicParameters_po_SMB_UtilizationEfficiency_set
    __swig_getmethods__["po_SMB_UtilizationEfficiency"] = _monica.UserSoilOrganicParameters_po_SMB_UtilizationEfficiency_get
    if _newclass:po_SMB_UtilizationEfficiency = _swig_property(_monica.UserSoilOrganicParameters_po_SMB_UtilizationEfficiency_get, _monica.UserSoilOrganicParameters_po_SMB_UtilizationEfficiency_set)
    __swig_setmethods__["po_SOM_SlowUtilizationEfficiency"] = _monica.UserSoilOrganicParameters_po_SOM_SlowUtilizationEfficiency_set
    __swig_getmethods__["po_SOM_SlowUtilizationEfficiency"] = _monica.UserSoilOrganicParameters_po_SOM_SlowUtilizationEfficiency_get
    if _newclass:po_SOM_SlowUtilizationEfficiency = _swig_property(_monica.UserSoilOrganicParameters_po_SOM_SlowUtilizationEfficiency_get, _monica.UserSoilOrganicParameters_po_SOM_SlowUtilizationEfficiency_set)
    __swig_setmethods__["po_SOM_FastUtilizationEfficiency"] = _monica.UserSoilOrganicParameters_po_SOM_FastUtilizationEfficiency_set
    __swig_getmethods__["po_SOM_FastUtilizationEfficiency"] = _monica.UserSoilOrganicParameters_po_SOM_FastUtilizationEfficiency_get
    if _newclass:po_SOM_FastUtilizationEfficiency = _swig_property(_monica.UserSoilOrganicParameters_po_SOM_FastUtilizationEfficiency_get, _monica.UserSoilOrganicParameters_po_SOM_FastUtilizationEfficiency_set)
    __swig_setmethods__["po_AOM_SlowUtilizationEfficiency"] = _monica.UserSoilOrganicParameters_po_AOM_SlowUtilizationEfficiency_set
    __swig_getmethods__["po_AOM_SlowUtilizationEfficiency"] = _monica.UserSoilOrganicParameters_po_AOM_SlowUtilizationEfficiency_get
    if _newclass:po_AOM_SlowUtilizationEfficiency = _swig_property(_monica.UserSoilOrganicParameters_po_AOM_SlowUtilizationEfficiency_get, _monica.UserSoilOrganicParameters_po_AOM_SlowUtilizationEfficiency_set)
    __swig_setmethods__["po_AOM_FastUtilizationEfficiency"] = _monica.UserSoilOrganicParameters_po_AOM_FastUtilizationEfficiency_set
    __swig_getmethods__["po_AOM_FastUtilizationEfficiency"] = _monica.UserSoilOrganicParameters_po_AOM_FastUtilizationEfficiency_get
    if _newclass:po_AOM_FastUtilizationEfficiency = _swig_property(_monica.UserSoilOrganicParameters_po_AOM_FastUtilizationEfficiency_get, _monica.UserSoilOrganicParameters_po_AOM_FastUtilizationEfficiency_set)
    __swig_setmethods__["po_AOM_FastMaxC_to_N"] = _monica.UserSoilOrganicParameters_po_AOM_FastMaxC_to_N_set
    __swig_getmethods__["po_AOM_FastMaxC_to_N"] = _monica.UserSoilOrganicParameters_po_AOM_FastMaxC_to_N_get
    if _newclass:po_AOM_FastMaxC_to_N = _swig_property(_monica.UserSoilOrganicParameters_po_AOM_FastMaxC_to_N_get, _monica.UserSoilOrganicParameters_po_AOM_FastMaxC_to_N_set)
    __swig_setmethods__["po_PartSOM_Fast_to_SOM_Slow"] = _monica.UserSoilOrganicParameters_po_PartSOM_Fast_to_SOM_Slow_set
    __swig_getmethods__["po_PartSOM_Fast_to_SOM_Slow"] = _monica.UserSoilOrganicParameters_po_PartSOM_Fast_to_SOM_Slow_get
    if _newclass:po_PartSOM_Fast_to_SOM_Slow = _swig_property(_monica.UserSoilOrganicParameters_po_PartSOM_Fast_to_SOM_Slow_get, _monica.UserSoilOrganicParameters_po_PartSOM_Fast_to_SOM_Slow_set)
    __swig_setmethods__["po_PartSMB_Slow_to_SOM_Fast"] = _monica.UserSoilOrganicParameters_po_PartSMB_Slow_to_SOM_Fast_set
    __swig_getmethods__["po_PartSMB_Slow_to_SOM_Fast"] = _monica.UserSoilOrganicParameters_po_PartSMB_Slow_to_SOM_Fast_get
    if _newclass:po_PartSMB_Slow_to_SOM_Fast = _swig_property(_monica.UserSoilOrganicParameters_po_PartSMB_Slow_to_SOM_Fast_get, _monica.UserSoilOrganicParameters_po_PartSMB_Slow_to_SOM_Fast_set)
    __swig_setmethods__["po_PartSMB_Fast_to_SOM_Fast"] = _monica.UserSoilOrganicParameters_po_PartSMB_Fast_to_SOM_Fast_set
    __swig_getmethods__["po_PartSMB_Fast_to_SOM_Fast"] = _monica.UserSoilOrganicParameters_po_PartSMB_Fast_to_SOM_Fast_get
    if _newclass:po_PartSMB_Fast_to_SOM_Fast = _swig_property(_monica.UserSoilOrganicParameters_po_PartSMB_Fast_to_SOM_Fast_get, _monica.UserSoilOrganicParameters_po_PartSMB_Fast_to_SOM_Fast_set)
    __swig_setmethods__["po_PartSOM_to_SMB_Slow"] = _monica.UserSoilOrganicParameters_po_PartSOM_to_SMB_Slow_set
    __swig_getmethods__["po_PartSOM_to_SMB_Slow"] = _monica.UserSoilOrganicParameters_po_PartSOM_to_SMB_Slow_get
    if _newclass:po_PartSOM_to_SMB_Slow = _swig_property(_monica.UserSoilOrganicParameters_po_PartSOM_to_SMB_Slow_get, _monica.UserSoilOrganicParameters_po_PartSOM_to_SMB_Slow_set)
    __swig_setmethods__["po_PartSOM_to_SMB_Fast"] = _monica.UserSoilOrganicParameters_po_PartSOM_to_SMB_Fast_set
    __swig_getmethods__["po_PartSOM_to_SMB_Fast"] = _monica.UserSoilOrganicParameters_po_PartSOM_to_SMB_Fast_get
    if _newclass:po_PartSOM_to_SMB_Fast = _swig_property(_monica.UserSoilOrganicParameters_po_PartSOM_to_SMB_Fast_get, _monica.UserSoilOrganicParameters_po_PartSOM_to_SMB_Fast_set)
    __swig_setmethods__["po_CN_Ratio_SMB"] = _monica.UserSoilOrganicParameters_po_CN_Ratio_SMB_set
    __swig_getmethods__["po_CN_Ratio_SMB"] = _monica.UserSoilOrganicParameters_po_CN_Ratio_SMB_get
    if _newclass:po_CN_Ratio_SMB = _swig_property(_monica.UserSoilOrganicParameters_po_CN_Ratio_SMB_get, _monica.UserSoilOrganicParameters_po_CN_Ratio_SMB_set)
    __swig_setmethods__["po_LimitClayEffect"] = _monica.UserSoilOrganicParameters_po_LimitClayEffect_set
    __swig_getmethods__["po_LimitClayEffect"] = _monica.UserSoilOrganicParameters_po_LimitClayEffect_get
    if _newclass:po_LimitClayEffect = _swig_property(_monica.UserSoilOrganicParameters_po_LimitClayEffect_get, _monica.UserSoilOrganicParameters_po_LimitClayEffect_set)
    __swig_setmethods__["po_AmmoniaOxidationRateCoeffStandard"] = _monica.UserSoilOrganicParameters_po_AmmoniaOxidationRateCoeffStandard_set
    __swig_getmethods__["po_AmmoniaOxidationRateCoeffStandard"] = _monica.UserSoilOrganicParameters_po_AmmoniaOxidationRateCoeffStandard_get
    if _newclass:po_AmmoniaOxidationRateCoeffStandard = _swig_property(_monica.UserSoilOrganicParameters_po_AmmoniaOxidationRateCoeffStandard_get, _monica.UserSoilOrganicParameters_po_AmmoniaOxidationRateCoeffStandard_set)
    __swig_setmethods__["po_NitriteOxidationRateCoeffStandard"] = _monica.UserSoilOrganicParameters_po_NitriteOxidationRateCoeffStandard_set
    __swig_getmethods__["po_NitriteOxidationRateCoeffStandard"] = _monica.UserSoilOrganicParameters_po_NitriteOxidationRateCoeffStandard_get
    if _newclass:po_NitriteOxidationRateCoeffStandard = _swig_property(_monica.UserSoilOrganicParameters_po_NitriteOxidationRateCoeffStandard_get, _monica.UserSoilOrganicParameters_po_NitriteOxidationRateCoeffStandard_set)
    __swig_setmethods__["po_TransportRateCoeff"] = _monica.UserSoilOrganicParameters_po_TransportRateCoeff_set
    __swig_getmethods__["po_TransportRateCoeff"] = _monica.UserSoilOrganicParameters_po_TransportRateCoeff_get
    if _newclass:po_TransportRateCoeff = _swig_property(_monica.UserSoilOrganicParameters_po_TransportRateCoeff_get, _monica.UserSoilOrganicParameters_po_TransportRateCoeff_set)
    __swig_setmethods__["po_SpecAnaerobDenitrification"] = _monica.UserSoilOrganicParameters_po_SpecAnaerobDenitrification_set
    __swig_getmethods__["po_SpecAnaerobDenitrification"] = _monica.UserSoilOrganicParameters_po_SpecAnaerobDenitrification_get
    if _newclass:po_SpecAnaerobDenitrification = _swig_property(_monica.UserSoilOrganicParameters_po_SpecAnaerobDenitrification_get, _monica.UserSoilOrganicParameters_po_SpecAnaerobDenitrification_set)
    __swig_setmethods__["po_ImmobilisationRateCoeffNO3"] = _monica.UserSoilOrganicParameters_po_ImmobilisationRateCoeffNO3_set
    __swig_getmethods__["po_ImmobilisationRateCoeffNO3"] = _monica.UserSoilOrganicParameters_po_ImmobilisationRateCoeffNO3_get
    if _newclass:po_ImmobilisationRateCoeffNO3 = _swig_property(_monica.UserSoilOrganicParameters_po_ImmobilisationRateCoeffNO3_get, _monica.UserSoilOrganicParameters_po_ImmobilisationRateCoeffNO3_set)
    __swig_setmethods__["po_ImmobilisationRateCoeffNH4"] = _monica.UserSoilOrganicParameters_po_ImmobilisationRateCoeffNH4_set
    __swig_getmethods__["po_ImmobilisationRateCoeffNH4"] = _monica.UserSoilOrganicParameters_po_ImmobilisationRateCoeffNH4_get
    if _newclass:po_ImmobilisationRateCoeffNH4 = _swig_property(_monica.UserSoilOrganicParameters_po_ImmobilisationRateCoeffNH4_get, _monica.UserSoilOrganicParameters_po_ImmobilisationRateCoeffNH4_set)
    __swig_setmethods__["po_Denit1"] = _monica.UserSoilOrganicParameters_po_Denit1_set
    __swig_getmethods__["po_Denit1"] = _monica.UserSoilOrganicParameters_po_Denit1_get
    if _newclass:po_Denit1 = _swig_property(_monica.UserSoilOrganicParameters_po_Denit1_get, _monica.UserSoilOrganicParameters_po_Denit1_set)
    __swig_setmethods__["po_Denit2"] = _monica.UserSoilOrganicParameters_po_Denit2_set
    __swig_getmethods__["po_Denit2"] = _monica.UserSoilOrganicParameters_po_Denit2_get
    if _newclass:po_Denit2 = _swig_property(_monica.UserSoilOrganicParameters_po_Denit2_get, _monica.UserSoilOrganicParameters_po_Denit2_set)
    __swig_setmethods__["po_Denit3"] = _monica.UserSoilOrganicParameters_po_Denit3_set
    __swig_getmethods__["po_Denit3"] = _monica.UserSoilOrganicParameters_po_Denit3_get
    if _newclass:po_Denit3 = _swig_property(_monica.UserSoilOrganicParameters_po_Denit3_get, _monica.UserSoilOrganicParameters_po_Denit3_set)
    __swig_setmethods__["po_HydrolysisKM"] = _monica.UserSoilOrganicParameters_po_HydrolysisKM_set
    __swig_getmethods__["po_HydrolysisKM"] = _monica.UserSoilOrganicParameters_po_HydrolysisKM_get
    if _newclass:po_HydrolysisKM = _swig_property(_monica.UserSoilOrganicParameters_po_HydrolysisKM_get, _monica.UserSoilOrganicParameters_po_HydrolysisKM_set)
    __swig_setmethods__["po_ActivationEnergy"] = _monica.UserSoilOrganicParameters_po_ActivationEnergy_set
    __swig_getmethods__["po_ActivationEnergy"] = _monica.UserSoilOrganicParameters_po_ActivationEnergy_get
    if _newclass:po_ActivationEnergy = _swig_property(_monica.UserSoilOrganicParameters_po_ActivationEnergy_get, _monica.UserSoilOrganicParameters_po_ActivationEnergy_set)
    __swig_setmethods__["po_HydrolysisP1"] = _monica.UserSoilOrganicParameters_po_HydrolysisP1_set
    __swig_getmethods__["po_HydrolysisP1"] = _monica.UserSoilOrganicParameters_po_HydrolysisP1_get
    if _newclass:po_HydrolysisP1 = _swig_property(_monica.UserSoilOrganicParameters_po_HydrolysisP1_get, _monica.UserSoilOrganicParameters_po_HydrolysisP1_set)
    __swig_setmethods__["po_HydrolysisP2"] = _monica.UserSoilOrganicParameters_po_HydrolysisP2_set
    __swig_getmethods__["po_HydrolysisP2"] = _monica.UserSoilOrganicParameters_po_HydrolysisP2_get
    if _newclass:po_HydrolysisP2 = _swig_property(_monica.UserSoilOrganicParameters_po_HydrolysisP2_get, _monica.UserSoilOrganicParameters_po_HydrolysisP2_set)
    __swig_setmethods__["po_AtmosphericResistance"] = _monica.UserSoilOrganicParameters_po_AtmosphericResistance_set
    __swig_getmethods__["po_AtmosphericResistance"] = _monica.UserSoilOrganicParameters_po_AtmosphericResistance_get
    if _newclass:po_AtmosphericResistance = _swig_property(_monica.UserSoilOrganicParameters_po_AtmosphericResistance_get, _monica.UserSoilOrganicParameters_po_AtmosphericResistance_set)
    __swig_setmethods__["po_N2OProductionRate"] = _monica.UserSoilOrganicParameters_po_N2OProductionRate_set
    __swig_getmethods__["po_N2OProductionRate"] = _monica.UserSoilOrganicParameters_po_N2OProductionRate_get
    if _newclass:po_N2OProductionRate = _swig_property(_monica.UserSoilOrganicParameters_po_N2OProductionRate_get, _monica.UserSoilOrganicParameters_po_N2OProductionRate_set)
    __swig_setmethods__["po_Inhibitor_NH3"] = _monica.UserSoilOrganicParameters_po_Inhibitor_NH3_set
    __swig_getmethods__["po_Inhibitor_NH3"] = _monica.UserSoilOrganicParameters_po_Inhibitor_NH3_get
    if _newclass:po_Inhibitor_NH3 = _swig_property(_monica.UserSoilOrganicParameters_po_Inhibitor_NH3_get, _monica.UserSoilOrganicParameters_po_Inhibitor_NH3_set)
UserSoilOrganicParameters_swigregister = _monica.UserSoilOrganicParameters_swigregister
UserSoilOrganicParameters_swigregister(UserSoilOrganicParameters)

class SensitivityAnalysisParameters(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SensitivityAnalysisParameters, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SensitivityAnalysisParameters, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _monica.new_SensitivityAnalysisParameters()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _monica.delete_SensitivityAnalysisParameters
    __del__ = lambda self : None;
    __swig_setmethods__["p_MeanFieldCapacity"] = _monica.SensitivityAnalysisParameters_p_MeanFieldCapacity_set
    __swig_getmethods__["p_MeanFieldCapacity"] = _monica.SensitivityAnalysisParameters_p_MeanFieldCapacity_get
    if _newclass:p_MeanFieldCapacity = _swig_property(_monica.SensitivityAnalysisParameters_p_MeanFieldCapacity_get, _monica.SensitivityAnalysisParameters_p_MeanFieldCapacity_set)
    __swig_setmethods__["p_MeanBulkDensity"] = _monica.SensitivityAnalysisParameters_p_MeanBulkDensity_set
    __swig_getmethods__["p_MeanBulkDensity"] = _monica.SensitivityAnalysisParameters_p_MeanBulkDensity_get
    if _newclass:p_MeanBulkDensity = _swig_property(_monica.SensitivityAnalysisParameters_p_MeanBulkDensity_get, _monica.SensitivityAnalysisParameters_p_MeanBulkDensity_set)
    __swig_setmethods__["p_HeatConductivityFrozen"] = _monica.SensitivityAnalysisParameters_p_HeatConductivityFrozen_set
    __swig_getmethods__["p_HeatConductivityFrozen"] = _monica.SensitivityAnalysisParameters_p_HeatConductivityFrozen_get
    if _newclass:p_HeatConductivityFrozen = _swig_property(_monica.SensitivityAnalysisParameters_p_HeatConductivityFrozen_get, _monica.SensitivityAnalysisParameters_p_HeatConductivityFrozen_set)
    __swig_setmethods__["p_HeatConductivityUnfrozen"] = _monica.SensitivityAnalysisParameters_p_HeatConductivityUnfrozen_set
    __swig_getmethods__["p_HeatConductivityUnfrozen"] = _monica.SensitivityAnalysisParameters_p_HeatConductivityUnfrozen_get
    if _newclass:p_HeatConductivityUnfrozen = _swig_property(_monica.SensitivityAnalysisParameters_p_HeatConductivityUnfrozen_get, _monica.SensitivityAnalysisParameters_p_HeatConductivityUnfrozen_set)
    __swig_setmethods__["p_LatentHeatTransfer"] = _monica.SensitivityAnalysisParameters_p_LatentHeatTransfer_set
    __swig_getmethods__["p_LatentHeatTransfer"] = _monica.SensitivityAnalysisParameters_p_LatentHeatTransfer_get
    if _newclass:p_LatentHeatTransfer = _swig_property(_monica.SensitivityAnalysisParameters_p_LatentHeatTransfer_get, _monica.SensitivityAnalysisParameters_p_LatentHeatTransfer_set)
    __swig_setmethods__["p_ReducedHydraulicConductivity"] = _monica.SensitivityAnalysisParameters_p_ReducedHydraulicConductivity_set
    __swig_getmethods__["p_ReducedHydraulicConductivity"] = _monica.SensitivityAnalysisParameters_p_ReducedHydraulicConductivity_get
    if _newclass:p_ReducedHydraulicConductivity = _swig_property(_monica.SensitivityAnalysisParameters_p_ReducedHydraulicConductivity_get, _monica.SensitivityAnalysisParameters_p_ReducedHydraulicConductivity_set)
    __swig_setmethods__["vs_FieldCapacity"] = _monica.SensitivityAnalysisParameters_vs_FieldCapacity_set
    __swig_getmethods__["vs_FieldCapacity"] = _monica.SensitivityAnalysisParameters_vs_FieldCapacity_get
    if _newclass:vs_FieldCapacity = _swig_property(_monica.SensitivityAnalysisParameters_vs_FieldCapacity_get, _monica.SensitivityAnalysisParameters_vs_FieldCapacity_set)
    __swig_setmethods__["vs_Saturation"] = _monica.SensitivityAnalysisParameters_vs_Saturation_set
    __swig_getmethods__["vs_Saturation"] = _monica.SensitivityAnalysisParameters_vs_Saturation_get
    if _newclass:vs_Saturation = _swig_property(_monica.SensitivityAnalysisParameters_vs_Saturation_get, _monica.SensitivityAnalysisParameters_vs_Saturation_set)
    __swig_setmethods__["vs_PermanentWiltingPoint"] = _monica.SensitivityAnalysisParameters_vs_PermanentWiltingPoint_set
    __swig_getmethods__["vs_PermanentWiltingPoint"] = _monica.SensitivityAnalysisParameters_vs_PermanentWiltingPoint_get
    if _newclass:vs_PermanentWiltingPoint = _swig_property(_monica.SensitivityAnalysisParameters_vs_PermanentWiltingPoint_get, _monica.SensitivityAnalysisParameters_vs_PermanentWiltingPoint_set)
    __swig_setmethods__["vs_SoilMoisture"] = _monica.SensitivityAnalysisParameters_vs_SoilMoisture_set
    __swig_getmethods__["vs_SoilMoisture"] = _monica.SensitivityAnalysisParameters_vs_SoilMoisture_get
    if _newclass:vs_SoilMoisture = _swig_property(_monica.SensitivityAnalysisParameters_vs_SoilMoisture_get, _monica.SensitivityAnalysisParameters_vs_SoilMoisture_set)
    __swig_setmethods__["vs_SoilTemperature"] = _monica.SensitivityAnalysisParameters_vs_SoilTemperature_set
    __swig_getmethods__["vs_SoilTemperature"] = _monica.SensitivityAnalysisParameters_vs_SoilTemperature_get
    if _newclass:vs_SoilTemperature = _swig_property(_monica.SensitivityAnalysisParameters_vs_SoilTemperature_get, _monica.SensitivityAnalysisParameters_vs_SoilTemperature_set)
    __swig_setmethods__["vc_SoilCoverage"] = _monica.SensitivityAnalysisParameters_vc_SoilCoverage_set
    __swig_getmethods__["vc_SoilCoverage"] = _monica.SensitivityAnalysisParameters_vc_SoilCoverage_get
    if _newclass:vc_SoilCoverage = _swig_property(_monica.SensitivityAnalysisParameters_vc_SoilCoverage_get, _monica.SensitivityAnalysisParameters_vc_SoilCoverage_set)
    __swig_setmethods__["vc_MaxRootingDepth"] = _monica.SensitivityAnalysisParameters_vc_MaxRootingDepth_set
    __swig_getmethods__["vc_MaxRootingDepth"] = _monica.SensitivityAnalysisParameters_vc_MaxRootingDepth_get
    if _newclass:vc_MaxRootingDepth = _swig_property(_monica.SensitivityAnalysisParameters_vc_MaxRootingDepth_get, _monica.SensitivityAnalysisParameters_vc_MaxRootingDepth_set)
    __swig_setmethods__["vc_RootDiameter"] = _monica.SensitivityAnalysisParameters_vc_RootDiameter_set
    __swig_getmethods__["vc_RootDiameter"] = _monica.SensitivityAnalysisParameters_vc_RootDiameter_get
    if _newclass:vc_RootDiameter = _swig_property(_monica.SensitivityAnalysisParameters_vc_RootDiameter_get, _monica.SensitivityAnalysisParameters_vc_RootDiameter_set)
    __swig_setmethods__["crop_parameters"] = _monica.SensitivityAnalysisParameters_crop_parameters_set
    __swig_getmethods__["crop_parameters"] = _monica.SensitivityAnalysisParameters_crop_parameters_get
    if _newclass:crop_parameters = _swig_property(_monica.SensitivityAnalysisParameters_crop_parameters_get, _monica.SensitivityAnalysisParameters_crop_parameters_set)
    __swig_setmethods__["organic_matter_parameters"] = _monica.SensitivityAnalysisParameters_organic_matter_parameters_set
    __swig_getmethods__["organic_matter_parameters"] = _monica.SensitivityAnalysisParameters_organic_matter_parameters_get
    if _newclass:organic_matter_parameters = _swig_property(_monica.SensitivityAnalysisParameters_organic_matter_parameters_get, _monica.SensitivityAnalysisParameters_organic_matter_parameters_set)
    __swig_setmethods__["sa_crop_id"] = _monica.SensitivityAnalysisParameters_sa_crop_id_set
    __swig_getmethods__["sa_crop_id"] = _monica.SensitivityAnalysisParameters_sa_crop_id_get
    if _newclass:sa_crop_id = _swig_property(_monica.SensitivityAnalysisParameters_sa_crop_id_get, _monica.SensitivityAnalysisParameters_sa_crop_id_set)
SensitivityAnalysisParameters_swigregister = _monica.SensitivityAnalysisParameters_swigregister
SensitivityAnalysisParameters_swigregister(SensitivityAnalysisParameters)

class CentralParameterProvider(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CentralParameterProvider, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CentralParameterProvider, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _monica.new_CentralParameterProvider(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _monica.delete_CentralParameterProvider
    __del__ = lambda self : None;
    __swig_setmethods__["userCropParameters"] = _monica.CentralParameterProvider_userCropParameters_set
    __swig_getmethods__["userCropParameters"] = _monica.CentralParameterProvider_userCropParameters_get
    if _newclass:userCropParameters = _swig_property(_monica.CentralParameterProvider_userCropParameters_get, _monica.CentralParameterProvider_userCropParameters_set)
    __swig_setmethods__["userEnvironmentParameters"] = _monica.CentralParameterProvider_userEnvironmentParameters_set
    __swig_getmethods__["userEnvironmentParameters"] = _monica.CentralParameterProvider_userEnvironmentParameters_get
    if _newclass:userEnvironmentParameters = _swig_property(_monica.CentralParameterProvider_userEnvironmentParameters_get, _monica.CentralParameterProvider_userEnvironmentParameters_set)
    __swig_setmethods__["userSoilMoistureParameters"] = _monica.CentralParameterProvider_userSoilMoistureParameters_set
    __swig_getmethods__["userSoilMoistureParameters"] = _monica.CentralParameterProvider_userSoilMoistureParameters_get
    if _newclass:userSoilMoistureParameters = _swig_property(_monica.CentralParameterProvider_userSoilMoistureParameters_get, _monica.CentralParameterProvider_userSoilMoistureParameters_set)
    __swig_setmethods__["userSoilTemperatureParameters"] = _monica.CentralParameterProvider_userSoilTemperatureParameters_set
    __swig_getmethods__["userSoilTemperatureParameters"] = _monica.CentralParameterProvider_userSoilTemperatureParameters_get
    if _newclass:userSoilTemperatureParameters = _swig_property(_monica.CentralParameterProvider_userSoilTemperatureParameters_get, _monica.CentralParameterProvider_userSoilTemperatureParameters_set)
    __swig_setmethods__["userSoilTransportParameters"] = _monica.CentralParameterProvider_userSoilTransportParameters_set
    __swig_getmethods__["userSoilTransportParameters"] = _monica.CentralParameterProvider_userSoilTransportParameters_get
    if _newclass:userSoilTransportParameters = _swig_property(_monica.CentralParameterProvider_userSoilTransportParameters_get, _monica.CentralParameterProvider_userSoilTransportParameters_set)
    __swig_setmethods__["userSoilOrganicParameters"] = _monica.CentralParameterProvider_userSoilOrganicParameters_set
    __swig_getmethods__["userSoilOrganicParameters"] = _monica.CentralParameterProvider_userSoilOrganicParameters_get
    if _newclass:userSoilOrganicParameters = _swig_property(_monica.CentralParameterProvider_userSoilOrganicParameters_get, _monica.CentralParameterProvider_userSoilOrganicParameters_set)
    __swig_setmethods__["sensitivityAnalysisParameters"] = _monica.CentralParameterProvider_sensitivityAnalysisParameters_set
    __swig_getmethods__["sensitivityAnalysisParameters"] = _monica.CentralParameterProvider_sensitivityAnalysisParameters_get
    if _newclass:sensitivityAnalysisParameters = _swig_property(_monica.CentralParameterProvider_sensitivityAnalysisParameters_get, _monica.CentralParameterProvider_sensitivityAnalysisParameters_set)
    __swig_setmethods__["userInitValues"] = _monica.CentralParameterProvider_userInitValues_set
    __swig_getmethods__["userInitValues"] = _monica.CentralParameterProvider_userInitValues_get
    if _newclass:userInitValues = _swig_property(_monica.CentralParameterProvider_userInitValues_get, _monica.CentralParameterProvider_userInitValues_set)
    __swig_setmethods__["capillaryRiseRates"] = _monica.CentralParameterProvider_capillaryRiseRates_set
    __swig_getmethods__["capillaryRiseRates"] = _monica.CentralParameterProvider_capillaryRiseRates_get
    if _newclass:capillaryRiseRates = _swig_property(_monica.CentralParameterProvider_capillaryRiseRates_get, _monica.CentralParameterProvider_capillaryRiseRates_set)
    def getPrecipCorrectionValue(self, *args): return _monica.CentralParameterProvider_getPrecipCorrectionValue(self, *args)
    def setPrecipCorrectionValue(self, *args): return _monica.CentralParameterProvider_setPrecipCorrectionValue(self, *args)
    __swig_setmethods__["writeOutputFiles"] = _monica.CentralParameterProvider_writeOutputFiles_set
    __swig_getmethods__["writeOutputFiles"] = _monica.CentralParameterProvider_writeOutputFiles_get
    if _newclass:writeOutputFiles = _swig_property(_monica.CentralParameterProvider_writeOutputFiles_get, _monica.CentralParameterProvider_writeOutputFiles_set)
CentralParameterProvider_swigregister = _monica.CentralParameterProvider_swigregister
CentralParameterProvider_swigregister(CentralParameterProvider)


def readUserParameterFromDatabase(type=0):
  return _monica.readUserParameterFromDatabase(type)
readUserParameterFromDatabase = _monica.readUserParameterFromDatabase

def testClimateData(*args):
  return _monica.testClimateData(*args)
testClimateData = _monica.testClimateData

def hermesCropId2Crop(*args):
  return _monica.hermesCropId2Crop(*args)
hermesCropId2Crop = _monica.hermesCropId2Crop

def availableMonicaCrops():
  return _monica.availableMonicaCrops()
availableMonicaCrops = _monica.availableMonicaCrops
class SoilTemperature(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SoilTemperature, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SoilTemperature, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _monica.new_SoilTemperature(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _monica.delete_SoilTemperature
    __del__ = lambda self : None;
    def step(self, *args): return _monica.SoilTemperature_step(self, *args)
    def f_SoilSurfaceTemperature(self, *args): return _monica.SoilTemperature_f_SoilSurfaceTemperature(self, *args)
    def get_SoilSurfaceTemperature(self): return _monica.SoilTemperature_get_SoilSurfaceTemperature(self)
    def get_SoilTemperature(self, *args): return _monica.SoilTemperature_get_SoilTemperature(self, *args)
    def get_HeatConductivity(self, *args): return _monica.SoilTemperature_get_HeatConductivity(self, *args)
    def get_AvgTopSoilTemperature(self, sumUpLayerThickness=0.3): return _monica.SoilTemperature_get_AvgTopSoilTemperature(self, sumUpLayerThickness)
    def getDampingFactor(self): return _monica.SoilTemperature_getDampingFactor(self)
    def setDampingFactor(self, *args): return _monica.SoilTemperature_setDampingFactor(self, *args)
    __swig_setmethods__["vt_SoilSurfaceTemperature"] = _monica.SoilTemperature_vt_SoilSurfaceTemperature_set
    __swig_getmethods__["vt_SoilSurfaceTemperature"] = _monica.SoilTemperature_vt_SoilSurfaceTemperature_get
    if _newclass:vt_SoilSurfaceTemperature = _swig_property(_monica.SoilTemperature_vt_SoilSurfaceTemperature_get, _monica.SoilTemperature_vt_SoilSurfaceTemperature_set)
SoilTemperature_swigregister = _monica.SoilTemperature_swigregister
SoilTemperature_swigregister(SoilTemperature)

class SnowComponent(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SnowComponent, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SnowComponent, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _monica.new_SnowComponent(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _monica.delete_SnowComponent
    __del__ = lambda self : None;
    def calcSnowLayer(self, *args): return _monica.SnowComponent_calcSnowLayer(self, *args)
    def getVm_SnowDepth(self): return _monica.SnowComponent_getVm_SnowDepth(self)
    def getWaterToInfiltrate(self): return _monica.SnowComponent_getWaterToInfiltrate(self)
    def getMaxSnowDepth(self): return _monica.SnowComponent_getMaxSnowDepth(self)
    def getAccumulatedSnowDepth(self): return _monica.SnowComponent_getAccumulatedSnowDepth(self)
SnowComponent_swigregister = _monica.SnowComponent_swigregister
SnowComponent_swigregister(SnowComponent)

class FrostComponent(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, FrostComponent, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, FrostComponent, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _monica.new_FrostComponent(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _monica.delete_FrostComponent
    __del__ = lambda self : None;
    def calcSoilFrost(self, *args): return _monica.FrostComponent_calcSoilFrost(self, *args)
    def getFrostDepth(self): return _monica.FrostComponent_getFrostDepth(self)
    def getThawDepth(self): return _monica.FrostComponent_getThawDepth(self)
    def getLambdaRedux(self, *args): return _monica.FrostComponent_getLambdaRedux(self, *args)
    def getAccumulatedFrostDepth(self): return _monica.FrostComponent_getAccumulatedFrostDepth(self)
    def getTemperatureUnderSnow(self): return _monica.FrostComponent_getTemperatureUnderSnow(self)
FrostComponent_swigregister = _monica.FrostComponent_swigregister
FrostComponent_swigregister(FrostComponent)

class SoilMoisture(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SoilMoisture, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SoilMoisture, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _monica.new_SoilMoisture(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _monica.delete_SoilMoisture
    __del__ = lambda self : None;
    def step(self, *args): return _monica.SoilMoisture_step(self, *args)
    def get_SnowDepth(self): return _monica.SoilMoisture_get_SnowDepth(self)
    def get_SoilMoisture(self, *args): return _monica.SoilMoisture_get_SoilMoisture(self, *args)
    def get_PercolationRate(self, *args): return _monica.SoilMoisture_get_PercolationRate(self, *args)
    def get_Infiltration(self): return _monica.SoilMoisture_get_Infiltration(self)
    def get_SurfaceWaterStorage(self): return _monica.SoilMoisture_get_SurfaceWaterStorage(self)
    def get_SurfaceRunOff(self): return _monica.SoilMoisture_get_SurfaceRunOff(self)
    def get_Evapotranspiration(self): return _monica.SoilMoisture_get_Evapotranspiration(self)
    def get_ActualEvaporation(self): return _monica.SoilMoisture_get_ActualEvaporation(self)
    def get_ET0(self): return _monica.SoilMoisture_get_ET0(self)
    def get_PercentageSoilCoverage(self): return _monica.SoilMoisture_get_PercentageSoilCoverage(self)
    def get_StomataResistance(self): return _monica.SoilMoisture_get_StomataResistance(self)
    def get_FrostDepth(self): return _monica.SoilMoisture_get_FrostDepth(self)
    def get_ThawDepth(self): return _monica.SoilMoisture_get_ThawDepth(self)
    def get_CapillaryRise(self, *args): return _monica.SoilMoisture_get_CapillaryRise(self, *args)
    def getMaxSnowDepth(self): return _monica.SoilMoisture_getMaxSnowDepth(self)
    def getAccumulatedSnowDepth(self): return _monica.SoilMoisture_getAccumulatedSnowDepth(self)
    def getAccumulatedFrostDepth(self): return _monica.SoilMoisture_getAccumulatedFrostDepth(self)
    def getTemperatureUnderSnow(self): return _monica.SoilMoisture_getTemperatureUnderSnow(self)
    def get_EReducer_1(self, *args): return _monica.SoilMoisture_get_EReducer_1(self, *args)
    def put_Crop(self, *args): return _monica.SoilMoisture_put_Crop(self, *args)
    def remove_Crop(self): return _monica.SoilMoisture_remove_Crop(self)
    def fm_Infiltration(self, *args): return _monica.SoilMoisture_fm_Infiltration(self, *args)
    def get_DeprivationFactor(self, *args): return _monica.SoilMoisture_get_DeprivationFactor(self, *args)
    def fm_CapillaryRise(self): return _monica.SoilMoisture_fm_CapillaryRise(self)
    def fm_PercolationWithGroundwater(self, *args): return _monica.SoilMoisture_fm_PercolationWithGroundwater(self, *args)
    def fm_GroundwaterReplenishment(self): return _monica.SoilMoisture_fm_GroundwaterReplenishment(self)
    def fm_PercolationWithoutGroundwater(self): return _monica.SoilMoisture_fm_PercolationWithoutGroundwater(self)
    def fm_BackwaterReplenishment(self): return _monica.SoilMoisture_fm_BackwaterReplenishment(self)
    def fm_Evapotranspiration(self, *args): return _monica.SoilMoisture_fm_Evapotranspiration(self, *args)
    def ReferenceEvapotranspiration(self, *args): return _monica.SoilMoisture_ReferenceEvapotranspiration(self, *args)
    def meanWaterContent(self, *args): return _monica.SoilMoisture_meanWaterContent(self, *args)
    def get_GroundwaterRecharge(self): return _monica.SoilMoisture_get_GroundwaterRecharge(self)
    def get_SumSurfaceRunOff(self): return _monica.SoilMoisture_get_SumSurfaceRunOff(self)
    def get_KcFactor(self): return _monica.SoilMoisture_get_KcFactor(self)
    def get_TranspirationDeficit(self): return _monica.SoilMoisture_get_TranspirationDeficit(self)
SoilMoisture_swigregister = _monica.SoilMoisture_swigregister
SoilMoisture_swigregister(SoilMoisture)

class SoilOrganic(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SoilOrganic, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SoilOrganic, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _monica.new_SoilOrganic(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _monica.delete_SoilOrganic
    __del__ = lambda self : None;
    def step(self, *args): return _monica.SoilOrganic_step(self, *args)
    def addOrganicMatter(self, *args): return _monica.SoilOrganic_addOrganicMatter(self, *args)
    def addIrrigationWater(self, *args): return _monica.SoilOrganic_addIrrigationWater(self, *args)
    def setIncorporation(self, *args): return _monica.SoilOrganic_setIncorporation(self, *args)
    def put_Crop(self, *args): return _monica.SoilOrganic_put_Crop(self, *args)
    def remove_Crop(self): return _monica.SoilOrganic_remove_Crop(self)
    def get_SoilOrganicC(self, *args): return _monica.SoilOrganic_get_SoilOrganicC(self, *args)
    def get_AOM_FastSum(self, *args): return _monica.SoilOrganic_get_AOM_FastSum(self, *args)
    def get_AOM_SlowSum(self, *args): return _monica.SoilOrganic_get_AOM_SlowSum(self, *args)
    def get_SMB_Fast(self, *args): return _monica.SoilOrganic_get_SMB_Fast(self, *args)
    def get_SMB_Slow(self, *args): return _monica.SoilOrganic_get_SMB_Slow(self, *args)
    def get_SOM_Fast(self, *args): return _monica.SoilOrganic_get_SOM_Fast(self, *args)
    def get_SOM_Slow(self, *args): return _monica.SoilOrganic_get_SOM_Slow(self, *args)
    def get_CBalance(self, *args): return _monica.SoilOrganic_get_CBalance(self, *args)
    def get_SMB_CO2EvolutionRate(self, *args): return _monica.SoilOrganic_get_SMB_CO2EvolutionRate(self, *args)
    def get_ActDenitrificationRate(self, *args): return _monica.SoilOrganic_get_ActDenitrificationRate(self, *args)
    def get_NetNMineralisationRate(self, *args): return _monica.SoilOrganic_get_NetNMineralisationRate(self, *args)
    def get_NH3_Volatilised(self): return _monica.SoilOrganic_get_NH3_Volatilised(self)
    def get_SumNH3_Volatilised(self): return _monica.SoilOrganic_get_SumNH3_Volatilised(self)
    def get_N2O_Produced(self): return _monica.SoilOrganic_get_N2O_Produced(self)
    def get_SumN2O_Produced(self): return _monica.SoilOrganic_get_SumN2O_Produced(self)
    def get_NetNMineralisation(self): return _monica.SoilOrganic_get_NetNMineralisation(self)
    def get_SumNetNMineralisation(self): return _monica.SoilOrganic_get_SumNetNMineralisation(self)
    def get_SumDenitrification(self): return _monica.SoilOrganic_get_SumDenitrification(self)
    def get_Denitrification(self): return _monica.SoilOrganic_get_Denitrification(self)
    def get_DecomposerRespiration(self): return _monica.SoilOrganic_get_DecomposerRespiration(self)
    def get_NetEcosystemProduction(self): return _monica.SoilOrganic_get_NetEcosystemProduction(self)
    def get_NetEcosystemExchange(self): return _monica.SoilOrganic_get_NetEcosystemExchange(self)
SoilOrganic_swigregister = _monica.SoilOrganic_swigregister
SoilOrganic_swigregister(SoilOrganic)

class SoilTransport(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SoilTransport, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SoilTransport, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _monica.new_SoilTransport(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _monica.delete_SoilTransport
    __del__ = lambda self : None;
    def step(self): return _monica.SoilTransport_step(self)
    def fq_NDeposition(self, *args): return _monica.SoilTransport_fq_NDeposition(self, *args)
    def fq_NUptake(self): return _monica.SoilTransport_fq_NUptake(self)
    def fq_NTransport(self, *args): return _monica.SoilTransport_fq_NTransport(self, *args)
    def put_Crop(self, *args): return _monica.SoilTransport_put_Crop(self, *args)
    def remove_Crop(self): return _monica.SoilTransport_remove_Crop(self)
    def get_SoilNO3(self, *args): return _monica.SoilTransport_get_SoilNO3(self, *args)
    def get_NLeaching(self): return _monica.SoilTransport_get_NLeaching(self)
SoilTransport_swigregister = _monica.SoilTransport_swigregister
SoilTransport_swigregister(SoilTransport)

class Env(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Env, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Env, name)
    __repr__ = _swig_repr
    MODE_LC_DSS = _monica.Env_MODE_LC_DSS
    MODE_ACTIVATE_OUTPUT_FILES = _monica.Env_MODE_ACTIVATE_OUTPUT_FILES
    MODE_HERMES = _monica.Env_MODE_HERMES
    MODE_EVA2 = _monica.Env_MODE_EVA2
    MODE_SENSITIVITY_ANALYSIS = _monica.Env_MODE_SENSITIVITY_ANALYSIS
    MODE_CC_GERMANY = _monica.Env_MODE_CC_GERMANY
    MODE_MACSUR_SCALING = _monica.Env_MODE_MACSUR_SCALING
    MODE_MACSUR_SCALING_CALIBRATION = _monica.Env_MODE_MACSUR_SCALING_CALIBRATION
    MODE_CARBIOCIAL_CLUSTER = _monica.Env_MODE_CARBIOCIAL_CLUSTER
    def __init__(self, *args): 
        this = _monica.new_Env(*args)
        try: self.this.append(this)
        except: self.this = this
    def numberOfPossibleSteps(self): return _monica.Env_numberOfPossibleSteps(self)
    def addOrReplaceClimateData(self, *args): return _monica.Env_addOrReplaceClimateData(self, *args)
    __swig_setmethods__["soilParams"] = _monica.Env_soilParams_set
    __swig_getmethods__["soilParams"] = _monica.Env_soilParams_get
    if _newclass:soilParams = _swig_property(_monica.Env_soilParams_get, _monica.Env_soilParams_set)
    __swig_setmethods__["noOfLayers"] = _monica.Env_noOfLayers_set
    __swig_getmethods__["noOfLayers"] = _monica.Env_noOfLayers_get
    if _newclass:noOfLayers = _swig_property(_monica.Env_noOfLayers_get, _monica.Env_noOfLayers_set)
    __swig_setmethods__["layerThickness"] = _monica.Env_layerThickness_set
    __swig_getmethods__["layerThickness"] = _monica.Env_layerThickness_get
    if _newclass:layerThickness = _swig_property(_monica.Env_layerThickness_get, _monica.Env_layerThickness_set)
    __swig_setmethods__["useNMinMineralFertilisingMethod"] = _monica.Env_useNMinMineralFertilisingMethod_set
    __swig_getmethods__["useNMinMineralFertilisingMethod"] = _monica.Env_useNMinMineralFertilisingMethod_get
    if _newclass:useNMinMineralFertilisingMethod = _swig_property(_monica.Env_useNMinMineralFertilisingMethod_get, _monica.Env_useNMinMineralFertilisingMethod_set)
    __swig_setmethods__["nMinFertiliserPartition"] = _monica.Env_nMinFertiliserPartition_set
    __swig_getmethods__["nMinFertiliserPartition"] = _monica.Env_nMinFertiliserPartition_get
    if _newclass:nMinFertiliserPartition = _swig_property(_monica.Env_nMinFertiliserPartition_get, _monica.Env_nMinFertiliserPartition_set)
    __swig_setmethods__["nMinUserParams"] = _monica.Env_nMinUserParams_set
    __swig_getmethods__["nMinUserParams"] = _monica.Env_nMinUserParams_get
    if _newclass:nMinUserParams = _swig_property(_monica.Env_nMinUserParams_get, _monica.Env_nMinUserParams_set)
    __swig_setmethods__["useAutomaticIrrigation"] = _monica.Env_useAutomaticIrrigation_set
    __swig_getmethods__["useAutomaticIrrigation"] = _monica.Env_useAutomaticIrrigation_get
    if _newclass:useAutomaticIrrigation = _swig_property(_monica.Env_useAutomaticIrrigation_get, _monica.Env_useAutomaticIrrigation_set)
    __swig_setmethods__["autoIrrigationParams"] = _monica.Env_autoIrrigationParams_set
    __swig_getmethods__["autoIrrigationParams"] = _monica.Env_autoIrrigationParams_get
    if _newclass:autoIrrigationParams = _swig_property(_monica.Env_autoIrrigationParams_get, _monica.Env_autoIrrigationParams_set)
    __swig_setmethods__["groundwaterInformation"] = _monica.Env_groundwaterInformation_set
    __swig_getmethods__["groundwaterInformation"] = _monica.Env_groundwaterInformation_get
    if _newclass:groundwaterInformation = _swig_property(_monica.Env_groundwaterInformation_get, _monica.Env_groundwaterInformation_set)
    __swig_setmethods__["useSecondaryYields"] = _monica.Env_useSecondaryYields_set
    __swig_getmethods__["useSecondaryYields"] = _monica.Env_useSecondaryYields_get
    if _newclass:useSecondaryYields = _swig_property(_monica.Env_useSecondaryYields_get, _monica.Env_useSecondaryYields_set)
    __swig_setmethods__["windSpeedHeight"] = _monica.Env_windSpeedHeight_set
    __swig_getmethods__["windSpeedHeight"] = _monica.Env_windSpeedHeight_get
    if _newclass:windSpeedHeight = _swig_property(_monica.Env_windSpeedHeight_get, _monica.Env_windSpeedHeight_set)
    __swig_setmethods__["atmosphericCO2"] = _monica.Env_atmosphericCO2_set
    __swig_getmethods__["atmosphericCO2"] = _monica.Env_atmosphericCO2_get
    if _newclass:atmosphericCO2 = _swig_property(_monica.Env_atmosphericCO2_get, _monica.Env_atmosphericCO2_set)
    __swig_setmethods__["albedo"] = _monica.Env_albedo_set
    __swig_getmethods__["albedo"] = _monica.Env_albedo_get
    if _newclass:albedo = _swig_property(_monica.Env_albedo_get, _monica.Env_albedo_set)
    __swig_setmethods__["da"] = _monica.Env_da_set
    __swig_getmethods__["da"] = _monica.Env_da_get
    if _newclass:da = _swig_property(_monica.Env_da_get, _monica.Env_da_set)
    __swig_setmethods__["cropRotation"] = _monica.Env_cropRotation_set
    __swig_getmethods__["cropRotation"] = _monica.Env_cropRotation_get
    if _newclass:cropRotation = _swig_property(_monica.Env_cropRotation_get, _monica.Env_cropRotation_set)
    __swig_setmethods__["gridPoint"] = _monica.Env_gridPoint_set
    __swig_getmethods__["gridPoint"] = _monica.Env_gridPoint_get
    if _newclass:gridPoint = _swig_property(_monica.Env_gridPoint_get, _monica.Env_gridPoint_set)
    __swig_setmethods__["customId"] = _monica.Env_customId_set
    __swig_getmethods__["customId"] = _monica.Env_customId_get
    if _newclass:customId = _swig_property(_monica.Env_customId_get, _monica.Env_customId_set)
    __swig_setmethods__["site"] = _monica.Env_site_set
    __swig_getmethods__["site"] = _monica.Env_site_get
    if _newclass:site = _swig_property(_monica.Env_site_get, _monica.Env_site_set)
    __swig_setmethods__["general"] = _monica.Env_general_set
    __swig_getmethods__["general"] = _monica.Env_general_get
    if _newclass:general = _swig_property(_monica.Env_general_get, _monica.Env_general_set)
    __swig_setmethods__["organic"] = _monica.Env_organic_set
    __swig_getmethods__["organic"] = _monica.Env_organic_get
    if _newclass:organic = _swig_property(_monica.Env_organic_get, _monica.Env_organic_set)
    __swig_setmethods__["centralParameterProvider"] = _monica.Env_centralParameterProvider_set
    __swig_getmethods__["centralParameterProvider"] = _monica.Env_centralParameterProvider_get
    if _newclass:centralParameterProvider = _swig_property(_monica.Env_centralParameterProvider_get, _monica.Env_centralParameterProvider_set)
    def toString(self): return _monica.Env_toString(self)
    __swig_setmethods__["pathToOutputDir"] = _monica.Env_pathToOutputDir_set
    __swig_getmethods__["pathToOutputDir"] = _monica.Env_pathToOutputDir_get
    if _newclass:pathToOutputDir = _swig_property(_monica.Env_pathToOutputDir_get, _monica.Env_pathToOutputDir_set)
    def setMode(self, *args): return _monica.Env_setMode(self, *args)
    def getMode(self): return _monica.Env_getMode(self)
    def setCropRotation(self, *args): return _monica.Env_setCropRotation(self, *args)
    __swig_destroy__ = _monica.delete_Env
    __del__ = lambda self : None;
Env_swigregister = _monica.Env_swigregister
Env_swigregister(Env)

class Result(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Result, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Result, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _monica.new_Result()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _monica.delete_Result
    __del__ = lambda self : None;
    __swig_setmethods__["gp"] = _monica.Result_gp_set
    __swig_getmethods__["gp"] = _monica.Result_gp_get
    if _newclass:gp = _swig_property(_monica.Result_gp_get, _monica.Result_gp_set)
    __swig_setmethods__["customId"] = _monica.Result_customId_set
    __swig_getmethods__["customId"] = _monica.Result_customId_get
    if _newclass:customId = _swig_property(_monica.Result_customId_get, _monica.Result_customId_set)
    __swig_setmethods__["pvrs"] = _monica.Result_pvrs_set
    __swig_getmethods__["pvrs"] = _monica.Result_pvrs_get
    if _newclass:pvrs = _swig_property(_monica.Result_pvrs_get, _monica.Result_pvrs_set)
    __swig_setmethods__["generalResults"] = _monica.Result_generalResults_set
    __swig_getmethods__["generalResults"] = _monica.Result_generalResults_get
    if _newclass:generalResults = _swig_property(_monica.Result_generalResults_get, _monica.Result_generalResults_set)
    def getResultsById(self, *args): return _monica.Result_getResultsById(self, *args)
    def sizeGeneralResults(self): return _monica.Result_sizeGeneralResults(self)
    __swig_setmethods__["dates"] = _monica.Result_dates_set
    __swig_getmethods__["dates"] = _monica.Result_dates_get
    if _newclass:dates = _swig_property(_monica.Result_dates_get, _monica.Result_dates_set)
    def toString(self): return _monica.Result_toString(self)
Result_swigregister = _monica.Result_swigregister
Result_swigregister(Result)

class MonicaModel(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MonicaModel, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MonicaModel, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _monica.new_MonicaModel(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _monica.delete_MonicaModel
    __del__ = lambda self : None;
    def generalStep(self, *args): return _monica.MonicaModel_generalStep(self, *args)
    def cropStep(self, *args): return _monica.MonicaModel_cropStep(self, *args)
    def CO2ForDate(self, *args): return _monica.MonicaModel_CO2ForDate(self, *args)
    def GroundwaterDepthForDate(self, *args): return _monica.MonicaModel_GroundwaterDepthForDate(self, *args)
    def seedCrop(self, *args): return _monica.MonicaModel_seedCrop(self, *args)
    def currentCrop(self): return _monica.MonicaModel_currentCrop(self)
    def isCropPlanted(self): return _monica.MonicaModel_isCropPlanted(self)
    def harvestCurrentCrop(self, *args): return _monica.MonicaModel_harvestCurrentCrop(self, *args)
    def fruitHarvestCurrentCrop(self, *args): return _monica.MonicaModel_fruitHarvestCurrentCrop(self, *args)
    def leafPruningCurrentCrop(self, *args): return _monica.MonicaModel_leafPruningCurrentCrop(self, *args)
    def tipPruningCurrentCrop(self, *args): return _monica.MonicaModel_tipPruningCurrentCrop(self, *args)
    def shootPruningCurrentCrop(self, *args): return _monica.MonicaModel_shootPruningCurrentCrop(self, *args)
    def cuttingCurrentCrop(self, *args): return _monica.MonicaModel_cuttingCurrentCrop(self, *args)
    def incorporateCurrentCrop(self): return _monica.MonicaModel_incorporateCurrentCrop(self)
    def applyMineralFertiliser(self, *args): return _monica.MonicaModel_applyMineralFertiliser(self, *args)
    def applyOrganicFertiliser(self, *args): return _monica.MonicaModel_applyOrganicFertiliser(self, *args)
    def useNMinMineralFertilisingMethod(self): return _monica.MonicaModel_useNMinMineralFertilisingMethod(self)
    def applyMineralFertiliserViaNMinMethod(self, *args): return _monica.MonicaModel_applyMineralFertiliserViaNMinMethod(self, *args)
    def dailySumFertiliser(self): return _monica.MonicaModel_dailySumFertiliser(self)
    def addDailySumFertiliser(self, *args): return _monica.MonicaModel_addDailySumFertiliser(self, *args)
    def dailySumIrrigationWater(self): return _monica.MonicaModel_dailySumIrrigationWater(self)
    def addDailySumIrrigationWater(self, *args): return _monica.MonicaModel_addDailySumIrrigationWater(self, *args)
    def sumFertiliser(self): return _monica.MonicaModel_sumFertiliser(self)
    def resetFertiliserCounter(self): return _monica.MonicaModel_resetFertiliserCounter(self)
    def resetDailyCounter(self): return _monica.MonicaModel_resetDailyCounter(self)
    def applyIrrigation(self, *args): return _monica.MonicaModel_applyIrrigation(self, *args)
    def applyTillage(self, *args): return _monica.MonicaModel_applyTillage(self, *args)
    def get_AtmosphericCO2Concentration(self): return _monica.MonicaModel_get_AtmosphericCO2Concentration(self)
    def get_GroundwaterDepth(self): return _monica.MonicaModel_get_GroundwaterDepth(self)
    def writeOutputFiles(self): return _monica.MonicaModel_writeOutputFiles(self)
    def avgCorg(self, *args): return _monica.MonicaModel_avgCorg(self, *args)
    def mean90cmWaterContent(self): return _monica.MonicaModel_mean90cmWaterContent(self)
    def meanWaterContent(self, *args): return _monica.MonicaModel_meanWaterContent(self, *args)
    def sumNmin(self, *args): return _monica.MonicaModel_sumNmin(self, *args)
    def groundWaterRecharge(self): return _monica.MonicaModel_groundWaterRecharge(self)
    def nLeaching(self): return _monica.MonicaModel_nLeaching(self)
    def sumSoilTemperature(self, *args): return _monica.MonicaModel_sumSoilTemperature(self, *args)
    def sumNO3AtDay(self, *args): return _monica.MonicaModel_sumNO3AtDay(self, *args)
    def maxSnowDepth(self): return _monica.MonicaModel_maxSnowDepth(self)
    def getAccumulatedSnowDepth(self): return _monica.MonicaModel_getAccumulatedSnowDepth(self)
    def getAccumulatedFrostDepth(self): return _monica.MonicaModel_getAccumulatedFrostDepth(self)
    def avg30cmSoilTemperature(self): return _monica.MonicaModel_avg30cmSoilTemperature(self)
    def avgSoilMoisture(self, *args): return _monica.MonicaModel_avgSoilMoisture(self, *args)
    def avgCapillaryRise(self, *args): return _monica.MonicaModel_avgCapillaryRise(self, *args)
    def avgPercolationRate(self, *args): return _monica.MonicaModel_avgPercolationRate(self, *args)
    def sumSurfaceRunOff(self): return _monica.MonicaModel_sumSurfaceRunOff(self)
    def surfaceRunoff(self): return _monica.MonicaModel_surfaceRunoff(self)
    def getEvapotranspiration(self): return _monica.MonicaModel_getEvapotranspiration(self)
    def getTranspiration(self): return _monica.MonicaModel_getTranspiration(self)
    def getEvaporation(self): return _monica.MonicaModel_getEvaporation(self)
    def get_sum30cmSMB_CO2EvolutionRate(self): return _monica.MonicaModel_get_sum30cmSMB_CO2EvolutionRate(self)
    def getNH3Volatilised(self): return _monica.MonicaModel_getNH3Volatilised(self)
    def getSumNH3Volatilised(self): return _monica.MonicaModel_getSumNH3Volatilised(self)
    def getsum30cmActDenitrificationRate(self): return _monica.MonicaModel_getsum30cmActDenitrificationRate(self)
    def getETa(self): return _monica.MonicaModel_getETa(self)
    __swig_setmethods__["vw_AtmosphericCO2Concentration"] = _monica.MonicaModel_vw_AtmosphericCO2Concentration_set
    __swig_getmethods__["vw_AtmosphericCO2Concentration"] = _monica.MonicaModel_vw_AtmosphericCO2Concentration_get
    if _newclass:vw_AtmosphericCO2Concentration = _swig_property(_monica.MonicaModel_vw_AtmosphericCO2Concentration_get, _monica.MonicaModel_vw_AtmosphericCO2Concentration_set)
    __swig_setmethods__["vs_GroundwaterDepth"] = _monica.MonicaModel_vs_GroundwaterDepth_set
    __swig_getmethods__["vs_GroundwaterDepth"] = _monica.MonicaModel_vs_GroundwaterDepth_get
    if _newclass:vs_GroundwaterDepth = _swig_property(_monica.MonicaModel_vs_GroundwaterDepth_get, _monica.MonicaModel_vs_GroundwaterDepth_set)
    def soilTemperature(self): return _monica.MonicaModel_soilTemperature(self)
    def soilMoisture(self): return _monica.MonicaModel_soilMoisture(self)
    def soilOrganic(self): return _monica.MonicaModel_soilOrganic(self)
    def soilTransport(self): return _monica.MonicaModel_soilTransport(self)
    def soilColumn(self): return _monica.MonicaModel_soilColumn(self)
    def soilColumnNC(self): return _monica.MonicaModel_soilColumnNC(self)
    def cropGrowth(self): return _monica.MonicaModel_cropGrowth(self)
    def netRadiation(self, *args): return _monica.MonicaModel_netRadiation(self, *args)
    def daysWithCrop(self): return _monica.MonicaModel_daysWithCrop(self)
    def getAccumulatedNStress(self): return _monica.MonicaModel_getAccumulatedNStress(self)
    def getAccumulatedWaterStress(self): return _monica.MonicaModel_getAccumulatedWaterStress(self)
    def getAccumulatedHeatStress(self): return _monica.MonicaModel_getAccumulatedHeatStress(self)
    def getAccumulatedOxygenStress(self): return _monica.MonicaModel_getAccumulatedOxygenStress(self)
    def getGroundwaterInformation(self, *args): return _monica.MonicaModel_getGroundwaterInformation(self, *args)
MonicaModel_swigregister = _monica.MonicaModel_swigregister
MonicaModel_swigregister(MonicaModel)


def runMonica(*args):
  return _monica.runMonica(*args)
runMonica = _monica.runMonica

def initializeFoutHeader(*args):
  return _monica.initializeFoutHeader(*args)
initializeFoutHeader = _monica.initializeFoutHeader

def initializeGoutHeader(*args):
  return _monica.initializeGoutHeader(*args)
initializeGoutHeader = _monica.initializeGoutHeader

def writeCropResults(*args):
  return _monica.writeCropResults(*args)
writeCropResults = _monica.writeCropResults

def writeGeneralResults(*args):
  return _monica.writeGeneralResults(*args)
writeGeneralResults = _monica.writeGeneralResults

def dumpMonicaParametersIntoFile(*args):
  return _monica.dumpMonicaParametersIntoFile(*args)
dumpMonicaParametersIntoFile = _monica.dumpMonicaParametersIntoFile

def humus_st2corg(*args):
  return _monica.humus_st2corg(*args)
humus_st2corg = _monica.humus_st2corg

def ld_eff2trd(*args):
  return _monica.ld_eff2trd(*args)
ld_eff2trd = _monica.ld_eff2trd

def texture2lambda(*args):
  return _monica.texture2lambda(*args)
texture2lambda = _monica.texture2lambda

def texture2KA5(*args):
  return _monica.texture2KA5(*args)
texture2KA5 = _monica.texture2KA5

def KA52sand(*args):
  return _monica.KA52sand(*args)
KA52sand = _monica.KA52sand

def KA52clay(*args):
  return _monica.KA52clay(*args)
KA52clay = _monica.KA52clay
jan = _monica.jan
feb = _monica.feb
mar = _monica.mar
apr = _monica.apr
may = _monica.may
jun = _monica.jun
jul = _monica.jul
aug = _monica.aug
sep = _monica.sep
oct = _monica.oct
nov = _monica.nov
dec = _monica.dec
class Date(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Date, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Date, name)
    __repr__ = _swig_repr
    __swig_getmethods__["relativeDate"] = lambda x: _monica.Date_relativeDate
    if _newclass:relativeDate = staticmethod(_monica.Date_relativeDate)
    __swig_getmethods__["julianDate"] = lambda x: _monica.Date_julianDate
    if _newclass:julianDate = staticmethod(_monica.Date_julianDate)
    def __init__(self, *args): 
        this = _monica.new_Date(*args)
        try: self.this.append(this)
        except: self.this = this
    def isValid(self): return _monica.Date_isValid(self)
    def __lt__(self, *args): return _monica.Date___lt__(self, *args)
    def __eq__(self, *args): return _monica.Date___eq__(self, *args)
    def __ne__(self, *args): return _monica.Date___ne__(self, *args)
    def __le__(self, *args): return _monica.Date___le__(self, *args)
    def __gt__(self, *args): return _monica.Date___gt__(self, *args)
    def __ge__(self, *args): return _monica.Date___ge__(self, *args)
    def __isub__(self, *args): return _monica.Date___isub__(self, *args)
    def __add__(self, *args): return _monica.Date___add__(self, *args)
    def __iadd__(self, *args): return _monica.Date___iadd__(self, *args)
    def __sub__(self, *args): return _monica.Date___sub__(self, *args)
    def isLeapYear(self): return _monica.Date_isLeapYear(self)
    __swig_getmethods__["daysInMonth"] = lambda x: _monica.Date_daysInMonth
    if _newclass:daysInMonth = staticmethod(_monica.Date_daysInMonth)
    def numberOfDaysTo(self, *args): return _monica.Date_numberOfDaysTo(self, *args)
    def day(self): return _monica.Date_day(self)
    def setDay(self, *args): return _monica.Date_setDay(self, *args)
    def withDay(self, *args): return _monica.Date_withDay(self, *args)
    def month(self): return _monica.Date_month(self)
    def withMonth(self, *args): return _monica.Date_withMonth(self, *args)
    def setMonth(self, *args): return _monica.Date_setMonth(self, *args)
    def year(self): return _monica.Date_year(self)
    def setYear(self, *args): return _monica.Date_setYear(self, *args)
    def withYear(self, *args): return _monica.Date_withYear(self, *args)
    def addYears(self, *args): return _monica.Date_addYears(self, *args)
    def toMysqlString(self, wrapInto="\'"): return _monica.Date_toMysqlString(self, wrapInto)
    def toString(self, separator=".", skipYear=False): return _monica.Date_toString(self, separator, skipYear)
    __swig_getmethods__["aLeapYear"] = lambda x: _monica.Date_aLeapYear
    if _newclass:aLeapYear = staticmethod(_monica.Date_aLeapYear)
    __swig_getmethods__["notALeapYear"] = lambda x: _monica.Date_notALeapYear
    if _newclass:notALeapYear = staticmethod(_monica.Date_notALeapYear)
    def julianDay(self): return _monica.Date_julianDay(self)
    def dayOfYear(self): return _monica.Date_dayOfYear(self)
    __swig_getmethods__["dayInYear"] = lambda x: _monica.Date_dayInYear
    if _newclass:dayInYear = staticmethod(_monica.Date_dayInYear)
    def useLeapYears(self): return _monica.Date_useLeapYears(self)
    def startOfYear(self): return _monica.Date_startOfYear(self)
    def endOfYear(self): return _monica.Date_endOfYear(self)
    def startOfMonth(self): return _monica.Date_startOfMonth(self)
    def endOfMonth(self): return _monica.Date_endOfMonth(self)
    def isRelativeDate(self): return _monica.Date_isRelativeDate(self)
    def toAbsoluteDate(self, absYear=0, ignoreDeltaYears=False): return _monica.Date_toAbsoluteDate(self, absYear, ignoreDeltaYears)
    def toRelativeDate(self, *args): return _monica.Date_toRelativeDate(self, *args)
    def isRelativeBaseYear(self): return _monica.Date_isRelativeBaseYear(self)
    def relativeBaseYear(self): return _monica.Date_relativeBaseYear(self)
    __swig_destroy__ = _monica.delete_Date
    __del__ = lambda self : None;
Date_swigregister = _monica.Date_swigregister
Date_swigregister(Date)
Date.defaultRelativeBaseYear = _monica.cvar.Date_defaultRelativeBaseYear

def Date_relativeDate(*args):
  return _monica.Date_relativeDate(*args)
Date_relativeDate = _monica.Date_relativeDate

def Date_julianDate(*args):
  return _monica.Date_julianDate(*args)
Date_julianDate = _monica.Date_julianDate

def Date_daysInMonth(*args):
  return _monica.Date_daysInMonth(*args)
Date_daysInMonth = _monica.Date_daysInMonth

def Date_aLeapYear():
  return _monica.Date_aLeapYear()
Date_aLeapYear = _monica.Date_aLeapYear

def Date_notALeapYear():
  return _monica.Date_notALeapYear()
Date_notALeapYear = _monica.Date_notALeapYear

def Date_dayInYear(*args):
  return _monica.Date_dayInYear(*args)
Date_dayInYear = _monica.Date_dayInYear


def fromMysqlString(*args):
  return _monica.fromMysqlString(*args)
fromMysqlString = _monica.fromMysqlString

def testDate():
  return _monica.testDate()
testDate = _monica.testDate

def applySAChanges(*args):
  return _monica.applySAChanges(*args)
applySAChanges = _monica.applySAChanges

def setAssimilatePartitioningCoefficient(*args):
  return _monica.setAssimilatePartitioningCoefficient(*args)
setAssimilatePartitioningCoefficient = _monica.setAssimilatePartitioningCoefficient

def sensitivityAnalysisResultIds():
  return _monica.sensitivityAnalysisResultIds()
sensitivityAnalysisResultIds = _monica.sensitivityAnalysisResultIds

def getCropParameters(*args):
  return _monica.getCropParameters(*args)
getCropParameters = _monica.getCropParameters

def applyNewCropParameters(*args):
  return _monica.applyNewCropParameters(*args)
applyNewCropParameters = _monica.applyNewCropParameters
# This file is compatible with both classic and new-style classes.


